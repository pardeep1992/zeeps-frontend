[{"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\index.js":"1","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\reportWebVitals.js":"2","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\App.js":"3","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ChangePassword\\ChangePassword.js":"4","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\NotFound\\NotFound.js":"5","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\Login\\Login.js":"6","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\Faq\\Faq.js":"7","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ShowEmailAddress\\ShowEmailAddress.js":"8","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\BasicSettings\\TermsAndConditions.js":"9","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\BasicSettings\\KakaotalkSettings.js":"10","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\AdminLogin\\AdminLogin.js":"11","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\BasicSettings\\BasicSettings.js":"12","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\ManagingMember.js":"13","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\RegisterMember.js":"14","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\RegisterManager.js":"15","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\FaqSetting\\EditFaq.js":"16","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\FaqSetting\\RegisterFaq.js":"17","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\Register\\Register.js":"18","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\LandingPage\\LandingPage.js":"19","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\RegisterPropertyStepTwo.js":"20","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\RegisterPropertyStepThree.js":"21","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ResetPasswordAfterLogin\\ResetPasswordAfterLogin.js":"22","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\PropertyList.js":"23","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\ManagingManager.js":"24","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\MemberSettings.js":"25","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\AssignManagerToProperty.js":"26","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\FaqSetting\\ManageFaq.js":"27","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\FindPassword\\FindPassword.js":"28","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\EditMember.js":"29","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\EditPropertyById.js":"30","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\PropertyConfirmContract.js":"31","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\RegisterProperty.js":"32","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\SearchProperty.js":"33","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\PropertyProcessing.js":"34","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\RegisterProperty.js":"35","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\services\\axios-url.js":"36","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithoutAuthHeaderFooter\\WithoutAuthFooter.js":"37","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\member-settings-aside.js":"38","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\FaqSetting\\faq-settings-aside.js":"39","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithoutAuthHeaderFooter\\WithoutAuthHeader.js":"40","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithoutAuthHeaderFooter\\LoginFormFooter.js":"41","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithAuthHeaderFooter\\WithAuthFooter.js":"42","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\WithAuthHeaderFooter\\WithAuthFooter.js":"43","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\WithAuthHeaderFooter\\TopNav.js":"44","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithAuthHeaderFooter\\WithAuthHeader.js":"45","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\property-settings-aside.js":"46","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\BasicSettings\\basic-settings-aside.js":"47","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\RedirectIfNotAuthenticated\\RedirectIfNotAuthenticated.js":"48","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\WithoutAuthHeaderFooter\\WithoutAuthHeader.js":"49","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\WithoutAuthHeaderFooter\\WithoutAuthFooter.js":"50"},{"size":500,"mtime":1608615314480,"results":"51","hashOfConfig":"52"},{"size":362,"mtime":1608615314480,"results":"53","hashOfConfig":"52"},{"size":6157,"mtime":1612511951962,"results":"54","hashOfConfig":"52"},{"size":6030,"mtime":1611319781712,"results":"55","hashOfConfig":"52"},{"size":558,"mtime":1609912478384,"results":"56","hashOfConfig":"52"},{"size":6096,"mtime":1612252530856,"results":"57","hashOfConfig":"52"},{"size":4316,"mtime":1612338622588,"results":"58","hashOfConfig":"52"},{"size":3826,"mtime":1612858026401,"results":"59","hashOfConfig":"52"},{"size":5489,"mtime":1612269413055,"results":"60","hashOfConfig":"52"},{"size":7081,"mtime":1612520433042,"results":"61","hashOfConfig":"52"},{"size":5609,"mtime":1612266713199,"results":"62","hashOfConfig":"52"},{"size":7356,"mtime":1612269551136,"results":"63","hashOfConfig":"52"},{"size":7507,"mtime":1612520159057,"results":"64","hashOfConfig":"52"},{"size":7693,"mtime":1612508551776,"results":"65","hashOfConfig":"52"},{"size":7836,"mtime":1612330262121,"results":"66","hashOfConfig":"52"},{"size":6718,"mtime":1612354369999,"results":"67","hashOfConfig":"52"},{"size":5833,"mtime":1612333574187,"results":"68","hashOfConfig":"52"},{"size":14326,"mtime":1612253834408,"results":"69","hashOfConfig":"52"},{"size":10487,"mtime":1612613229358,"results":"70","hashOfConfig":"52"},{"size":12669,"mtime":1612874494702,"results":"71","hashOfConfig":"52"},{"size":15800,"mtime":1612336473760,"results":"72","hashOfConfig":"52"},{"size":8663,"mtime":1612523835890,"results":"73","hashOfConfig":"52"},{"size":12469,"mtime":1612520785509,"results":"74","hashOfConfig":"52"},{"size":12567,"mtime":1612329698996,"results":"75","hashOfConfig":"52"},{"size":15076,"mtime":1612523018143,"results":"76","hashOfConfig":"52"},{"size":9283,"mtime":1612521378496,"results":"77","hashOfConfig":"52"},{"size":8838,"mtime":1612523150793,"results":"78","hashOfConfig":"52"},{"size":16743,"mtime":1612874505421,"results":"79","hashOfConfig":"52"},{"size":8966,"mtime":1612513507666,"results":"80","hashOfConfig":"52"},{"size":32619,"mtime":1612522622644,"results":"81","hashOfConfig":"52"},{"size":27037,"mtime":1612350298366,"results":"82","hashOfConfig":"52"},{"size":28472,"mtime":1612522683589,"results":"83","hashOfConfig":"52"},{"size":10736,"mtime":1612874930261,"results":"84","hashOfConfig":"52"},{"size":35999,"mtime":1612612322038,"results":"85","hashOfConfig":"52"},{"size":52535,"mtime":1612874366227,"results":"86","hashOfConfig":"52"},{"size":134,"mtime":1612510142721,"results":"87","hashOfConfig":"52"},{"size":450,"mtime":1608705269795,"results":"88","hashOfConfig":"52"},{"size":2304,"mtime":1612328060687,"results":"89","hashOfConfig":"52"},{"size":1813,"mtime":1612333442957,"results":"90","hashOfConfig":"52"},{"size":595,"mtime":1612225235855,"results":"91","hashOfConfig":"52"},{"size":2333,"mtime":1612252927978,"results":"92","hashOfConfig":"52"},{"size":6367,"mtime":1612523947489,"results":"93","hashOfConfig":"52"},{"size":401,"mtime":1609136808572,"results":"94","hashOfConfig":"52"},{"size":2968,"mtime":1612516743487,"results":"95","hashOfConfig":"52"},{"size":5761,"mtime":1612523629256,"results":"96","hashOfConfig":"52"},{"size":1870,"mtime":1612270713083,"results":"97","hashOfConfig":"52"},{"size":2189,"mtime":1612268648535,"results":"98","hashOfConfig":"52"},{"size":731,"mtime":1611393237992,"results":"99","hashOfConfig":"52"},{"size":365,"mtime":1609135619676,"results":"100","hashOfConfig":"52"},{"size":456,"mtime":1611390409540,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1gcrcxh",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"104"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"104"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"104"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"104"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"104"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\index.js",[],["239","240"],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\reportWebVitals.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\App.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ChangePassword\\ChangePassword.js",["241","242","243"],"import React, { Component } from 'react';\r\n\r\nimport { \r\n    Layout, Form, Input, Button, message \r\n} from 'antd';\r\n\r\nimport '../css/global.css';\r\nimport 'antd/dist/antd.css';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport WithoutAuthHeader from '../WithoutAuthHeaderFooter/WithoutAuthHeader';\r\nimport WithoutAuthFooter from '../WithoutAuthHeaderFooter/WithoutAuthFooter';\r\nimport LoginFormFooter from '../WithoutAuthHeaderFooter/LoginFormFooter';\r\nimport BaseUrl from '../services/axios-url';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Content } = Layout;\r\n\r\nconst layout = {\r\n    labelCol: { span: 0 },\r\n    wrapperCol: { span: 24 },\r\n};\r\n\r\nconst tailLayout = {\r\nwrapperCol: { offset: 0, span: 24 },\r\n};\r\n\r\nconst onFinish = values => {\r\n    console.log('Success:', values);\r\n};\r\n\r\nconst onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n \r\nfunction GoBack() {\r\n    window.history.back();\r\n}\r\n\r\n\r\nclass ChangePassword extends Component {\r\n    state = {\r\n        id: '',\r\n        redirectToLoginPage: false\r\n    }\r\n\r\n    componentDidMount(props) {\r\n        if (this.props.location.state.userId != 'undefined') {\r\n            console.log(\"property_id\", this.props.location.state.userId);\r\n            this.setState({\r\n                id: this.props.location.state.userId\r\n            })\r\n        }\r\n    }\r\n  \r\n    onFinish = values => {\r\n        console.log(this.state.id)\r\n        console.log('Success:', values);\r\n\r\n        axios.post(BaseUrl + \"/memberapi/ResetPassword\", {\r\n            \"id\": this.state.id,\r\n            \"password\": values.password,\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status == 1) {\r\n\r\n                    message.success('Your Password is changed successfully. Redirecting to Login page..')\r\n\r\n                    this.setState({ redirectToLoginPage: true })\r\n\r\n\r\n                }\r\n                else {\r\n                    message.error(res.data.message);\r\n                }\r\n                this.setState({ loading: false })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n                this.setState({ loading: false })\r\n            })\r\n\r\n    };\r\n\r\n    render() { \r\n        console.log(this.state.id)\r\n        if(this.state.redirectToLoginPage) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/login\"\r\n                }}\r\n            />\r\n        }\r\n        return ( \r\n            <Layout className=\"login-bg\">\r\n\r\n                <WithoutAuthHeader />\r\n\r\n                <Content className=\"login-content\">\r\n\r\n                    <Row>\r\n\r\n                        <Col xs={{ span: 24 }} sm={{ span:12, offset:6 }} lg={{ span: 2, offset: 6 }} >\r\n                            <Button type=\"default\" icon={<ArrowLeftOutlined />} size='large' shape=\"circle\" onClick={GoBack} />\r\n                            \r\n                        </Col>\r\n\r\n                        <Col xs={{ span: 22, offset: 1 }} sm={{ span:12, offset:6 }} lg={{ span: 8, offset: 0 }} >\r\n\r\n                            <h1 className=\"text-white\">Welcome To Zeeps</h1>\r\n\r\n                            <Form\r\n                                {...layout}\r\n                                name=\"basic\"\r\n                                initialValues={{ remember: true }}\r\n                                onFinish={this.onFinish}\r\n                                onFinishFailed={onFinishFailed}\r\n                                >\r\n                                <Form.Item\r\n                                    label=\"\"\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                >\r\n                                    <Input.Password placeholder=\"Password\" className=\"login-input\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    name=\"confirm\"\r\n                                    label=\"\"\r\n                                    dependencies={['password']}\r\n                                    hasFeedback\r\n                                    rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                        validator(rule, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n                                        return Promise.reject('The two passwords that you entered do not match!');\r\n                                        },\r\n                                    }),\r\n                                    ]}\r\n                                >\r\n                                    <Input.Password placeholder=\"Confirm Password\" className=\"login-input\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Button block type=\"primary\" shape=\"round\" htmlType=\"submit\" className=\"login-btn-bg\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n\r\n                            <LoginFormFooter />\r\n                        </Col>\r\n                    </Row>\r\n                </Content>\r\n                \r\n                <WithoutAuthFooter />\r\n\r\n            </Layout>\r\n            \r\n        );\r\n    }\r\n}\r\n \r\nexport default ChangePassword;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\NotFound\\NotFound.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\Login\\Login.js",["244","245","246","247","248","249"],"import React, { Component } from \"react\";\r\n\r\nimport { Layout, Form, Input, Button, message } from \"antd\";\r\n\r\nimport \"../css/global.css\";\r\nimport \"antd/dist/antd.css\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Row, Col } from \"antd\";\r\n// import { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport WithoutAuthHeader from \"../WithoutAuthHeaderFooter/WithoutAuthHeader\";\r\nimport WithoutAuthFooter from \"../WithoutAuthHeaderFooter/WithoutAuthFooter\";\r\nimport LoginFormFooter from \"../WithoutAuthHeaderFooter/LoginFormFooter\";\r\n\r\nimport BaseUrl from \"../services/axios-url\";\r\nimport Cookies from \"universal-cookie\";\r\nimport logo from \"../images/logo-small.png\";\r\nimport Base from \"antd/lib/typography/Base\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst { Content } = Layout;\r\n\r\nconst layout = {\r\n  labelCol: { span: 0 },\r\n  wrapperCol: { span: 24 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 0, span: 24 },\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const cookies = new Cookies();\r\n    var cookieName = btoa(\"zeeps\");\r\n    // console.log('encodedStringBtoA', cookieName);\r\n    var finalCookieName = \"\";\r\n    finalCookieName = cookieName.replace(\"=\", \"aAaA\");\r\n\r\n    var encodedStringBtoA = btoa(\"authorized\");\r\n    // console.log('encodedStringBtoA', encodedStringBtoA);\r\n    var finalCookieValue = \"\";\r\n    finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\r\n\r\n    // cookies.set(finalCookieName, finalCookieValue, { path: '/' });\r\n\r\n    // get the cookie\r\n\r\n    if (cookies.get(finalCookieName) == finalCookieValue) {\r\n      message.warning(\"You are already logged in\");\r\n      this.props.history.push(\"/register-property\");\r\n    }\r\n  }\r\n\r\n  state = { loading: \"\" };\r\n\r\n  onFinish = (values) => {\r\n    // console.log('Success:', values);\r\n\r\n    this.setState({ loading: true });\r\n\r\n    axios\r\n      .post(BaseUrl + \"/memberapi/MemberLogin \", {\r\n        email: values.email,\r\n        password: values.password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.message);\r\n        this.setState({ allData: \"\" });\r\n\r\n        if (res.data.status == 1 || res.data.status == \"1\") {\r\n          message.success(\"Login successful!! Redirecting you..\");\r\n\r\n          const cookies = new Cookies();\r\n          var cookieName = btoa(\"zeeps\");\r\n          // console.log('encodedStringBtoA', cookieName);\r\n          var finalCookieName = \"\";\r\n          finalCookieName = cookieName.replace(\"=\", \"aAaA\");\r\n\r\n          var encodedStringBtoA = btoa(\"authorized\");\r\n          // console.log('encodedStringBtoA', encodedStringBtoA);\r\n          var finalCookieValue = \"\";\r\n          finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\r\n\r\n          cookies.set(finalCookieName, finalCookieValue, { path: \"/\" });\r\n\r\n          // cookies.set('Zeeps', encodedStringBtoA, { path: '/' });\r\n          // User Id----------------------\r\n          // var userId = btoa(res.data.id);\r\n          var userId = res.data.data.id;\r\n          cookies.set(\"UU\", userId, { path: \"/\" });\r\n\r\n          // User Name\r\n          var userName = res.data.data.name.replace(\" \", \"-\");\r\n          cookies.set(\"UN\", userName, { path: \"/\" });\r\n\r\n          this.props.history.push(\"/register-property\");\r\n        } else {\r\n          this.setState({ loading: false });\r\n          message.error(res.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error(\"Sorry!! Unable to fetch data from server..\");\r\n      });\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <Layout className=\"login-bg\">\r\n        <WithoutAuthHeader />\r\n\r\n        <Content className=\"login-content\">\r\n          <Row>\r\n            {/* <Col xs={{ span: 24 }} sm={{ span:12, offset:6 }} lg={{ span: 2, offset: 6 }} >\r\n                            <Button type=\"default\" icon={<ArrowLeftOutlined />} size='large' shape=\"circle\" onClick={GoBack} />\r\n                            \r\n                        </Col> */}\r\n\r\n            <Col\r\n              xs={{ span: 22, offset: 1 }}\r\n              sm={{ span: 12, offset: 6 }}\r\n              lg={{ span: 8, offset: 8 }}\r\n            >\r\n              <img src={logo} />\r\n              <h1 className=\"text-white\">환영합니다!</h1>\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={this.onFinishFailed}\r\n              >\r\n                <Form.Item\r\n                  label=\"\"\r\n                  name=\"email\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your username!\" },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder=\"someone@gmail.com\"\r\n                    className=\"login-input\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"\"\r\n                  name=\"password\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your password!\" },\r\n                  ]}\r\n                >\r\n                  <Input.Password placeholder=\"*****\" className=\"login-input\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button\r\n                    loading={loading}\r\n                    block\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-btn-bg\"\r\n                  >\r\n                    로그인하기\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n              <LoginFormFooter />\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n\r\n        <WithoutAuthFooter />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\Faq\\Faq.js",["250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"import React, { Component } from 'react';\r\nimport WithAuthHeader from '../WithAuthHeaderFooter/WithAuthHeader';\r\nimport {\r\n    Layout, Form, Input, Button, Checkbox, Menu, Divider, Row, Col, Space, Modal, Steps, Radio, Select, Tag, DatePicker, Upload, message, Card, Collapse\r\n} from 'antd';\r\n\r\nimport { UploadOutlined, SearchOutlined, ReloadOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\n// import './register-property.css';\r\nimport '../css/global.css'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport BaseUrl from '../services/axios-url';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nconst axios = require('axios');\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst { Step } = Steps;\r\nconst { Panel } = Collapse;\r\n\r\n\r\nclass Faq extends Component {\r\n    state = {\r\n        allData: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(BaseUrl + '/adminapi/GetAllFAQ')\r\n            .then((response) => {\r\n\r\n                if (response.data.status == 1 || response.data.status == '1') {\r\n                    // console.log(\"dddd: \", data.data.id);\r\n\r\n                    var AllData = response.data.data;\r\n\r\n                    // console.log(AllData)\r\n\r\n                    var finalData = [];\r\n\r\n                    for (var i = 0; i < AllData.length; i++) {\r\n                        finalData[i] = {\r\n                            key: AllData[i].id,\r\n                            id: AllData[i].id,\r\n                            number: i + 1,\r\n                            question: AllData[i].question,\r\n                            answer: AllData[i].answer\r\n                        };\r\n                    }\r\n\r\n                    // console.log(finalData)\r\n                    this.setState({\r\n                        allData: finalData\r\n                    })\r\n\r\n                } else {\r\n                    message.error(response.data.message);\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { allData } = this.state;\r\n\r\n        return (\r\n            <Layout className=\"register-property-layout\">\r\n\r\n                <WithAuthHeader />\r\n\r\n                <Content>\r\n\r\n                    <Layout className=\"site-layout-background\" >\r\n                        <Space direction=\"vertical\" size={'large'}>\r\n                            <Content className=\"content-padding\" >\r\n                                <Row className=\"\">\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} >\r\n                                        {/* Left Side */}\r\n                                    </Col>\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} className=\"\" >\r\n                                        <Row>\r\n                                            <Col className=\"text-center mb-15\" span={24} >\r\n                                                <h2>자주묻는 질문</h2>\r\n                                            </Col>\r\n\r\n                                            <Collapse accordion>\r\n\r\n                                                {allData.map((data, i) => {\r\n                                                    {var a = i+1}\r\n                                                    return <Panel header={'Q' + a + '. ' + data.question} key={i}> {data.answer} </Panel>\r\n                                                })}\r\n\r\n                                            </Collapse>\r\n                                            \r\n                                        </Row>\r\n\r\n                                    </Col>\r\n\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 6 }} >\r\n                                        {/* Right Side */}\r\n                                    </Col>\r\n\r\n\r\n\r\n                                </Row>\r\n\r\n                            </Content>\r\n                        </Space>\r\n                    </Layout>\r\n                </Content>\r\n\r\n                <WithAuthFooter />\r\n\r\n            </Layout >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Faq;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ShowEmailAddress\\ShowEmailAddress.js",["276","277","278","279","280","281"],"import React, { Component } from 'react';\r\n\r\nimport {\r\n    Layout, Form, Input, Button, Checkbox, Divider\r\n} from 'antd';\r\n\r\nimport '../css/global.css';\r\nimport 'antd/dist/antd.css';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport WithoutAuthHeader from '../WithoutAuthHeaderFooter/WithoutAuthHeader';\r\nimport WithoutAuthFooter from '../WithoutAuthHeaderFooter/WithoutAuthFooter';\r\nimport LoginFormFooter from '../WithoutAuthHeaderFooter/LoginFormFooter';\r\n\r\nconst { Content } = Layout;\r\n\r\nfunction GoBack() {\r\n    window.history.back();\r\n}\r\n\r\nclass ShowEmailAddress extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        email: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.state.userEmail != 'undefined') {\r\n            console.log(\"property_id\", this.props.location.state.userEmail);\r\n            this.setState({\r\n                email: this.props.location.state.userEmail\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout className=\"login-bg\">\r\n\r\n                <WithoutAuthHeader />\r\n\r\n                <Content className=\"login-content\">\r\n\r\n                    <Row>\r\n\r\n                        <Col xs={{ span: 24 }} sm={{ span: 12, offset: 6 }} lg={{ span: 2, offset: 6 }} >\r\n                            <Button type=\"default\" icon={<ArrowLeftOutlined />} size='large' shape=\"circle\" onClick={GoBack} />\r\n\r\n                        </Col>\r\n\r\n                        <Col xs={{ span: 22, offset: 1 }} sm={{ span: 12, offset: 6 }} lg={{ span: 8, offset: 0 }} >\r\n\r\n                            <h1 className=\"text-white\">This is your Email address.\r\n                        <br />Please login with your email address</h1>\r\n\r\n                            <Divider style={{ 'background': 'white' }} />\r\n                            <p className=\"text-center text-white\">\r\n                                {this.state.email ? this.state.email : '-'}\r\n                            </p>\r\n                            <Divider style={{ 'background': 'white' }} />\r\n                            {/* <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        >\r\n                        <Form.Item\r\n                            label=\"\"\r\n                            name=\"mobile_number\"\r\n                            rules={[{ required: true, message: 'Please input your Mobile number!' }]}\r\n\r\n                        >\r\n                            <Input placeholder=\"Mobile Number\" className=\"login-input\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"\"\r\n                            name=\"verify_number\"\r\n                            rules={[{ required: true, message: 'Please verify your number!' }]}\r\n                        >\r\n                            <Input placeholder=\"Verify Number\" className=\"login-input\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button block type=\"primary\" shape=\"round\" htmlType=\"submit\" className=\"login-btn-bg\">\r\n                            Find Password\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form> */}\r\n\r\n                            <LoginFormFooter />\r\n\r\n\r\n\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Content>\r\n\r\n                <WithoutAuthFooter />\r\n\r\n            </Layout>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowEmailAddress;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\BasicSettings\\TermsAndConditions.js",["282","283","284","285","286","287","288","289","290","291","292"],"import React, { Component } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, message\r\n} from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport BasicSettingsAside from './basic-settings-aside';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\n\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 10 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n}\r\n\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\n\r\nclass TermsAndConditions extends Component {\r\n\r\n  state = {}\r\n\r\n  formRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetCompanyAgreementdetail/1')\r\n      .then((response) => {\r\n        console.log('data->', response.data.data)\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          this.formRef.current.setFieldsValue({\r\n            terms_and_conditions: response.data.data.termsOfService,\r\n            aggreement: response.data.data.thirdPartyOffer,\r\n            event_news: response.data.data.eventNews\r\n          });\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n  }\r\n\r\n  onFinish = values => {\r\n    console.log('Success:', values);\r\n\r\n    axios.post(BaseUrl + \"/adminapi/UpdateAgreementContents\", {\r\n      \"id\": 1,\r\n      \"termsOfService\": values.terms_and_conditions,\r\n      \"thirdPartyOffer\": values.aggreement,\r\n      \"eventNews\": values.event_news\r\n    })\r\n      .then(res => {\r\n        // console.log(res)\r\n        if (res.data.status == 1) {\r\n          message.success('Success.. Data updated successfully')\r\n        }\r\n      })\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            <BasicSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                ref={this.formRef}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    <p>약관∙개인정보 처리방침</p>\r\n                  </Col>\r\n                  <Col xs={{ span: 4 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n                    <Form.Item >\r\n                      <Button type=\"primary\" className=\"theme-btn float-right\" htmlType=\"submit\" shape=\"round\">\r\n                        저장\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n                  <Col span={24}>약관∙개인정보 처리방침 문구 설정</Col>\r\n\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이용약관∙개인정보 동의 내용\"\r\n                      name=\"terms_and_conditions\"\r\n                      rules={[{ required: true, message: 'Please input your Terms and conditions!' }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        rows={8}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"제3자 정보 제공 동의 내용\"\r\n                      name=\"aggreement\"\r\n                      type=\"email\"\r\n                      rules={[{ required: true, message: 'Please input your Agreement!' }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        rows={8}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"혜택성 정보 수신 동의 내용\"\r\n                      name=\"event_news\"\r\n                      rules={[{ required: true, message: 'Please input your Event news receive!' }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        rows={8}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n\r\n\r\n                </Row>\r\n\r\n\r\n              </Form>\r\n\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default TermsAndConditions;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\BasicSettings\\KakaotalkSettings.js",["293","294","295","296","297","298","299","300","301","302"],"import React, { Component } from 'react';\r\n\r\nimport { \r\n    Layout, Form, Input, Button, Checkbox, Menu, Divider \r\n} from 'antd';\r\n \r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport BasicSettingsAside from './basic-settings-aside';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\n\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n// const layout = {\r\n//     labelCol: { span: 0 },\r\n//     wrapperCol: { span: 24 },\r\n// };\r\n\r\n// import { Layout, Menu, Breadcrumb } from 'antd';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 10 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n}\r\n\r\nconst onFinish = values => {\r\n    console.log('Success:', values);\r\n    \r\n    const data = new FormData()\r\n    data.append('email', values.email)\r\n    data.append('password', values.password)\r\n\r\n    // axios.post(BaseUrl+\"collectionImageUpload\", data, { \r\n    //     // receive two    parameter endpoint url ,form data\r\n    // })\r\n    //  .then(res => { \r\n    //      console.log(res.data)\r\n    //      if(res.data.responseCode === 200){\r\n    //          this.setState({ collectionImage: res.data.data.image })\r\n    //      }\r\n    //  })\r\n};\r\n\r\nconst onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n \r\nfunction GoBack() {\r\n    window.history.back();\r\n}\r\n\r\n\r\n\r\nclass KakaotalkSetting extends Component {\r\n    state = {  }\r\n  \r\n\r\n    render() { \r\n        return ( \r\n          <Layout>\r\n            \r\n            <TopNav />\r\n\r\n            <Content >\r\n              <Layout className=\"site-layout-background\" >\r\n                \r\n                <BasicSettingsAside />\r\n\r\n                <Content style={{ padding: '10px 24px' }}>\r\n                  \r\n                  <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                  >\r\n                    <Row>\r\n\r\n                    <Col xs={{ span: 24 }} sm={{ span:20 }} lg={{ span:20 }} >\r\n                      <p>카카오 톡 알림 설정</p>\r\n                    </Col>\r\n                    <Col xs={{ span: 24 }} sm={{ span:4 }} lg={{ span:4 }} >\r\n                    <Form.Item >\r\n                      <Button type=\"primary\" className=\"theme-btn float-right\" htmlType=\"submit\" shape=\"round\">\r\n                      저장\r\n                      </Button>\r\n                    </Form.Item>\r\n                    </Col>\r\n                  \r\n                    <Col xs={{ span: 24 }} sm={{ span:24 }} lg={{ span:24 }} >\r\n                    <Form.Item \r\n                        {...compLayout}\r\n                        label=\"카카오 톡 플러스 친구 아이디 신청\"\r\n                        name=\"kakaotalk_friend_id\"\r\n                        rules={[{ required: true, message: 'Please input your Kakaotalk plus friend ID application!' }]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 24 }} sm={{ span:24 }} lg={{ span:24 }} >\r\n                      <Form.Item \r\n                        {...compLayout}\r\n                        label=\"나가는 프로필 키\" \r\n                        name=\"aggreement\"\r\n                        type=\"email\"\r\n                        rules={[{ required: true, message: 'Please input your Outgoing profile key!' }]}\r\n                      >\r\n                        <Input />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span:24 }} lg={{ span:18, offset:6 }}>\r\n                      <p>* 알림을 사용하려면 발신 프로필 키가 필요합니다.</p>\r\n                      <p>* 발신 프로필 키는 카카오 톡과 아이디를 등록하여 얻을 수 있습니다.</p>\r\n                      <p>* 카카오 톡 플러스 친구 아이디가없는 경우 [카카오 톡 플러스 친구 관리자]에서 발급 받아 등록하세요.</p>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span:24 }} lg={{ span:18, offset:6 }}>\r\n                      <Form.Item  name=\"notification_use\" valuePropName=\"checked\">\r\n                          <Checkbox>알림 사용 설정</Checkbox>\r\n                      </Form.Item>\r\n                      <small>발신 프로필 키를받은 후 1 시간 후에 알림이 활성화됩니다.</small>\r\n                    </Col>\r\n                   \r\n                    \r\n                    <Col xs={{ span:24 }} lg={{ span:18, offset:6 }}>\r\n                      <Form.Item  name=\"notification_message\" valuePropName=\"checked\">\r\n                          <Checkbox>알림 메시지 설정</Checkbox>\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 24 }} sm={{ span:24 }} lg={{ span:24 }} >\r\n                      <Form.Item \r\n                       {...compLayout}\r\n                        label=\"점장 수배 완료 메시지\" \r\n                        name=\"manager_arrangement\"\r\n                        rules={[{ required: true, message: 'Please input your Manager arrangement complete message!' }]}\r\n                      >\r\n                        <Input.TextArea\r\n                          rows={8}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span:24 }} lg={{ span:18, offset:6 }}>\r\n                      <Form.Item  name=\"notification_messageeee\" valuePropName=\"checked\">\r\n                          <Checkbox>로렘 입섬</Checkbox>\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 24 }} sm={{ span:24 }} lg={{ span:24 }} >\r\n                      <Form.Item \r\n                       {...compLayout}\r\n                        label=\"완전한 메시지 확인\" \r\n                        name=\"confirm_complete_message\"\r\n                        rules={[{ required: true, message: 'Please input your Manager arrangement complete message!' }]}\r\n                      >\r\n                        <Input.TextArea\r\n                          rows={8}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n               \r\n                  \r\n                        \r\n                  </Row>\r\n\r\n                    \r\n                  </Form>\r\n                  \r\n                \r\n                </Content>\r\n\r\n              </Layout>\r\n            </Content>\r\n\r\n            <WithAuthFooter />\r\n            \r\n          </Layout>\r\n            \r\n        );\r\n    }\r\n}\r\n \r\nexport default KakaotalkSetting;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\AdminLogin\\AdminLogin.js",["303","304","305","306","307","308","309","310"],"import React, { Component } from 'react';\r\n\r\nimport {\r\n    Layout, Form, Input, Button, message\r\n} from 'antd';\r\n\r\nimport '../css/login.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport WithoutAuthHeader from '../WithoutAuthHeaderFooter/WithoutAuthHeader';\r\nimport WithoutAuthFooter from '../WithoutAuthHeaderFooter/WithoutAuthFooter';\r\nimport BaseUrl from '../../services/axios-url';\r\nimport Cookies from 'universal-cookie';\r\nimport logo from '../../images/logo-small.png';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Content } = Layout;\r\n\r\nconst layout = {\r\n    labelCol: { span: 0 },\r\n    wrapperCol: { span: 24 },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 0, span: 24 },\r\n};\r\n\r\n\r\n\r\nconst onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n    window.history.back();\r\n}\r\n\r\n\r\n\r\nclass AdminLogin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const cookies = new Cookies();\r\n\r\n        if (cookies.get('SXNBdXRob3JpemVkQWRtaW4aS') == 'SXRzVHJ1ZQSaA') {\r\n            // console.log('encodedStringtrue') \r\n            this.props.history.push(\"/basic-settings\");\r\n\r\n        }\r\n    }\r\n\r\n    state = {\r\n        loading: false,\r\n    }\r\n\r\n\r\n    onFinish = values => {\r\n\r\n        this.setState({ loading: true });\r\n        // const data = new FormData()\r\n        // data.append('email', values.email)\r\n        // data.append('password', values.password)\r\n\r\n        axios.post(BaseUrl + \"/adminapi/login\", {\r\n            // axios.post(\"https://zeepsapis.herokuapp.com/adminapi/login\", {\r\n            email: values.email,\r\n            password: values.password\r\n        }).then(res => {\r\n            console.log(res)\r\n\r\n            this.setState({ loading: false });\r\n\r\n            // console.log(cookiess.get('QXV0aA'))\r\n\r\n            if (res.data.status == 0 || res.data.status == '0') {\r\n                message.error('Wrong Credentials');\r\n                return;\r\n            }\r\n\r\n            if (res.data.status == 1 || res.data.status == '1') {\r\n                message.success('Login successful!! Redirecting you..');\r\n                const cookiess = new Cookies();\r\n\r\n                var name = window.btoa('IsAuthorizedAdmin');\r\n                var value = window.btoa('ItsTrue');\r\n                var cookName = name.replace('=', 'aS');\r\n                var valueName = value.replace('==', 'SaA');\r\n\r\n                cookiess.set(cookName, valueName, { path: '/' });\r\n\r\n                if (cookiess.get('SXNBdXRob3JpemVkQWRtaW4aS') == 'SXRzVHJ1ZQSaA') {\r\n                    console.log('okoko')\r\n                }\r\n\r\n                this.props.history.push(\"/basic-settings\");\r\n            }\r\n        })\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { loading } = this.state;\r\n\r\n\r\n        return (\r\n            <Layout className=\"login-bg\">\r\n\r\n                <WithoutAuthHeader />\r\n\r\n                <Content className=\"login-content\">\r\n\r\n                    <Row>\r\n                        {/* <Col xs={{ span: 24 }} sm={{ span:12, offset:6 }} lg={{ span: 2, offset: 6 }} >\r\n                            <Button type=\"default\" icon={<ArrowLeftOutlined />} size='large' shape=\"circle\" onClick={GoBack} />\r\n                            \r\n                        </Col> */}\r\n\r\n                        <Col xs={{ span: 22, offset: 1 }} sm={{ span: 12, offset: 6 }} lg={{ span: 8, offset: 8 }} >\r\n\r\n                            {/* <h1 className=\"text-white\">Zeeps</h1> */}\r\n                            <img src={logo} />\r\n                           \r\n\r\n                            <h3 className=\"text-white\">관리자 로그인</h3>\r\n                            <Form\r\n                                {...layout}\r\n                                name=\"basic\"\r\n                                initialValues={{ remember: true }}\r\n                                onFinish={this.onFinish}\r\n                                onFinishFailed={onFinishFailed}\r\n                            >\r\n                                <Form.Item\r\n                                    label=\"\"\r\n                                    name=\"email\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n\r\n                                >\r\n                                    <Input placeholder=\"이메일을 입력해주세요.\" className=\"login-input\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item\r\n                                    label=\"\"\r\n                                    name=\"password\"\r\n                                    rules={[{ required: true, message: 'Please input your password!' }]}\r\n                                >\r\n                                    <Input.Password placeholder=\"비밀번호를 입력해주세요.\" className=\"login-input\" />\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailLayout}>\r\n                                    <Button loading={loading} block type=\"primary\" shape=\"round\" htmlType=\"submit\" className=\"login-btn-bg\">\r\n                                        로그인하기\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                            {/* <LoginFormFooter /> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Content>\r\n\r\n                <WithoutAuthFooter />\r\n\r\n            </Layout>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminLogin;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\BasicSettings\\BasicSettings.js",["311","312","313","314","315","316","317","318","319","320","321","322","323"],"import React, { Component } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, message\r\n} from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport BasicSettingsAside from './basic-settings-aside';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst axios = require('axios');\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 10 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n}\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n  message.error('Some Error!! Please try again');\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\n\r\n\r\nclass BasicSettings extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  state = {}\r\n\r\n  formRef = React.createRef();\r\n  componentDidMount() {\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetCompanydetail/1')\r\n      .then((response) => {\r\n        var data = response.data;\r\n        // console.log('data->', data.data)\r\n        if (data.status == 1 || data.status == '1') {\r\n          // console.log(\"dddd: \",data.data.id);\r\n\r\n          this.formRef.current.setFieldsValue({\r\n            company_name: data.data.companyname,\r\n            registration_number: data.data.businesslicencenumber,\r\n            ceo: data.data.ownername,\r\n            email: data.data.email,\r\n            company_address: data.data.companyaddress,\r\n            mail_report_no: data.data.telemarketingregisternumber,\r\n            service_center_number: data.data.servicecenternumber,\r\n          });\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  onFinish = values => {\r\n    console.log('Success:', values);\r\n\r\n    axios.post(BaseUrl + \"/adminapi/UpdateCompanyDetail\", {\r\n      \"id\": 1,\r\n      \"companyname\": values.company_name,\r\n      \"email\": values.email,\r\n      \"businesslicencenumber\": values.registration_number,\r\n      \"ownername\": values.ceo,\r\n      \"telemarketingregisternumber\": values.mail_report_no,\r\n      \"servicecenternumber\": values.service_center_number,\r\n      \"companyaddress\": values.company_address\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.data.status == 1) {\r\n          message.success('Success.. Data updated successfully')\r\n        }\r\n      })\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Layout>\r\n        \r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            <BasicSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n              <Row>\r\n\r\n\r\n\r\n              </Row>\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                ref={this.formRef}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 20 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    <p>기본정보 설정</p>\r\n                  </Col>\r\n                  \r\n                  <Col xs={{ span: 4 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n                    <Form.Item >\r\n                      <Button type=\"primary\" className=\"theme-btn float-right\" htmlType=\"submit\" shape=\"round\">\r\n                      저장\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <Col span={24}>회사 정보</Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"상호(회사명)\"\r\n                      name=\"company_name\"\r\n                      rules={[{ required: false, message: 'Please input your Company Name!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"사업자등록번호\"\r\n                      name=\"registration_number\"\r\n                      rules={[{ required: false, message: 'Please input your Registarion number!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      label=\"대표자명\"\r\n                      name=\"ceo\"\r\n                      rules={[{ required: false, message: 'Please input CEO!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      label=\"대표 이메일(필수)\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      rules={[{ required: true, message: 'Please input your Email!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      label=\"사업장 주소\"\r\n                      name=\"company_address\"\r\n                      rules={[{ required: false, message: 'Please input your Company address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      label=\"통신판매 신고번호\"\r\n                      name=\"mail_report_no\"\r\n                      rules={[{ required: false, message: 'Please input your Mail report number!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      label=\"고객센터 전화번호\"\r\n                      name=\"service_center_number\"\r\n                      rules={[{ required: false, message: 'Please input your Service center number!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n\r\n                </Row>\r\n\r\n\r\n              </Form>\r\n\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default BasicSettings;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\ManagingMember.js",["324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, DatePicker, Space, Table, Radio, message\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport MemberSettingsAside from './member-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { offset: 0, span: 23 },\r\n}\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: '번호',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '이메일 주소',\r\n    dataIndex: 'email',\r\n  },\r\n  {\r\n    title: '이름',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '출금일',\r\n    dataIndex: 'membershipexpiredate',\r\n  },\r\n\r\n];\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    number: '1',\r\n    email: 'someone@gmail.com',\r\n    name: 'someone',\r\n    withdrawal_date: '2020-01-01'\r\n  },\r\n  {\r\n    key: '1',\r\n    number: '1',\r\n    email: 'someone@gmail.com',\r\n    name: 'someone',\r\n    withdrawal_date: '2020-01-01'\r\n  },\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\n\r\n\r\nclass ManagingMember extends Component {\r\n\r\n  state = {\r\n    allData: '',\r\n    minDate: '',\r\n    maxDate: '',\r\n    selectedRowKeys: [],\r\n    loading: false,\r\n    delloading: false\r\n  }\r\n\r\n  onDateChange = (date, dateString) => {\r\n    // console.log(dateString[0]);\r\n    this.setState({\r\n      minDate: dateString[0],\r\n      maxDate: dateString[1]\r\n    })\r\n\r\n  }\r\n\r\n  onFinish = values => {\r\n    this.setState({ loading: true });\r\n    // console.log('Success:', values);\r\n    axios.post(BaseUrl + \"/adminapi/SeachWithdrawMemberDetail\", {\r\n      \"name\": values.search_keyword,\r\n      \"minDate\": this.state.minDate,\r\n      \"maxDate\": this.state.maxDate\r\n    })\r\n      .then(res => {\r\n        this.setState({ allData: '' })\r\n        console.log(res)\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n          var AllData = res.data.data;\r\n\r\n          // console.log(AllData)\r\n\r\n          var finalData = [];\r\n\r\n          for (var i = 0; i < AllData.length; i++) {\r\n            finalData[i] = {\r\n              key: AllData[i].id,\r\n              id: AllData[i].id,\r\n              number: i + 1,\r\n              email: AllData[i].email,\r\n              name: AllData[i].name,\r\n              membershipexpiredate: AllData[i].membershipexpiredate,\r\n              // sign_up_date: AllData[i].signupdate,\r\n              // last_login: AllData[i].lastlogindate,\r\n              // setting: <Button>Setting</Button>\r\n            };\r\n          }\r\n\r\n          // console.log(finalData)\r\n          this.setState({\r\n            allData: finalData,\r\n            loading: false\r\n          })\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < MemberSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>회원 탈퇴∙삭제 관리</p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    {/* <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\">\r\n                        Save\r\n                      </Button>\r\n\r\n\r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    <p>탈퇴내역 검색</p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이름\"\r\n                      name=\"search_keyword\"\r\n                      rules={[{ required: true, message: 'Please input your keyword!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"탈퇴일\"\r\n                      name=\"withdrawal_date\"\r\n                      rules={[{ required: true, message: 'Please select date!' }]}\r\n                    >\r\n                      <RangePicker onChange={this.onDateChange} />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Button loading={loading} type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\">\r\n                      검색\r\n                      </Button>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  검색 2개 / 전체 2개\r\n\r\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Table\r\n                      // rowSelection={{\r\n                      //   type: 'checkbox',\r\n                      //   ...rowSelection,\r\n                      // }}\r\n                      columns={columns}\r\n                      dataSource={this.state.allData}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManagingMember;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\RegisterMember.js",["340","341","342","343","344","345","346","347","348","349","350","351","352"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, DatePicker, Space, Table, Radio, message\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport MemberSettingsAside from './member-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { offset: 0, span: 23 },\r\n}\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\n\r\n\r\nclass RegisterMember extends Component {\r\n\r\n  formRef = React.createRef();\r\n\r\n  state = {\r\n    loading: false,\r\n  }\r\n\r\n  onFinish = values => {\r\n    this.setState({ loading: true });\r\n    console.log('Success:', values);\r\n\r\n    axios\r\n      .post(BaseUrl + \"/adminapi/InsertNewMember\", {\r\n        \"name\": values.name,\r\n        \"mobile\": values.mobile,\r\n        \"address\": values.address,\r\n        \"email\": values.email,\r\n        \"password\": values.password\r\n      })\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.data.status == 1) {\r\n          message.success('Success.. Member registered successfully')\r\n          this.formRef.current.resetFields();\r\n          this.setState({ loading: false });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n      })\r\n  };\r\n\r\n  render() {\r\n\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < MemberSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                ref={this.formRef}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>회원 등록</p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button loading={loading} type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\">\r\n                      회원 저장\r\n                      </Button>\r\n\r\n\r\n                    <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                      <Link to=\"/member-setting\" >\r\n                        회원 목록\r\n                        </Link>\r\n                    </Button>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    <p>기본 정보 </p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이름\"\r\n                      name=\"name\"\r\n                      rules={[{ required: true, message: 'Please input your name!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"비밀번호(필수)\"\r\n                      name=\"password\"\r\n                      rules={[{ required: true, message: 'Please input your password!' }]}\r\n                    >\r\n                      <Input.Password />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      name=\"confirm\"\r\n                      label=\"비밀번호 확인\"\r\n                      dependencies={['password']}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please confirm your password!',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                          validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                              return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                          },\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input.Password />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"휴대폰 번호\"\r\n                      name=\"mobile\"\r\n                      rules={[{ required: true, message: 'Please input your mobile number!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"탈퇴여부\"\r\n                      name=\"leave_status\"\r\n                      rules={[{ required: false, message: 'Please input your Leave Status!' }]}\r\n                    >\r\n                      <Input value=\"무\" readOnly placeholder=\"무\"  />\r\n                      \r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이메일\"\r\n                      name=\"email\"\r\n                      rules={[{ required: true, message: 'Please input your Email address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"주소\"\r\n                      name=\"address\"\r\n                      rules={[{ required: true, message: 'Please input your  address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n\r\n                </Row>\r\n\r\n\r\n              </Form>\r\n\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterMember;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\RegisterManager.js",["353","354","355","356","357"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Menu, message, DatePicker, Divider, Switch\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport MemberSettingsAside from './member-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Content } = Layout;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { offset: 0, span: 23 },\r\n}\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nclass RegisterManager extends Component {\r\n\r\n  formRef = React.createRef();\r\n\r\n  state = {\r\n    loading: false,\r\n    status: true\r\n  }\r\n\r\n  onStatusChange = (checked) => {\r\n    // console.log(`switch to ${checked}`);\r\n    this.setState({\r\n      status: checked\r\n    })\r\n  }\r\n\r\n  onFinish = values => {\r\n    this.setState({ loading: true });\r\n    console.log('Success:', values);\r\n\r\n    axios\r\n      .post(BaseUrl + \"/adminapi/InsertNewManager\", {\r\n        \"name\": values.name,\r\n        \"mobile\": values.mobile,\r\n        \"email\": values.email,\r\n        \"password\": values.password,\r\n        \"status\": this.state.status,\r\n        \"address\": values.address\r\n      })\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.data.status == 1) {\r\n          message.success('Success.. Manager registered successfully')\r\n          this.formRef.current.resetFields();\r\n          this.setState({ loading: false });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n      })\r\n  };\r\n\r\n  render() {\r\n\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < MemberSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                ref={this.formRef}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>담당자 등록 </p>\r\n                    {/* <p>Register manager </p> */}\r\n                  </Col>\r\n\r\n                  \r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button loading={loading} type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\">\r\n                    담당자 저장\r\n                      </Button>\r\n\r\n                    <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                      <Link to=\"/managing-manager\" >\r\n                      담당자 목록\r\n                        </Link>\r\n                    </Button>\r\n\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    <p>기본 정보 </p>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"담당자 이름\"\r\n                      name=\"name\"\r\n                      rules={[{ required: true, message: 'Please input your name!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"비밀번호(필수)\"\r\n                      name=\"password\"\r\n                      rules={[{ required: true, message: 'Please input your password!' }]}\r\n                    >\r\n                      <Input.Password />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      name=\"confirm\"\r\n                      label=\"비밀번호 확인\"\r\n                      dependencies={['password']}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please confirm your password!',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                          validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                              return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                          },\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input.Password />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"휴대폰 번호\"\r\n                      name=\"mobile\"\r\n                      rules={[{ required: true, message: 'Please input your mobile number!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"담당자 활성화\"\r\n                      name=\"activation_status\"\r\n                      rules={[{ required: true, message: 'Please select your Status!' }]}\r\n                    >\r\n                      <Switch onChange={this.onStatusChange} />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이메일\"\r\n                      name=\"email\"\r\n                      rules={[{ required: true, message: 'Please input your Email address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"주소\"\r\n                      name=\"address\"\r\n                      rules={[{ required: true, message: 'Please input your  address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n\r\n                </Row>\r\n\r\n\r\n              </Form>\r\n\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterManager;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\FaqSetting\\EditFaq.js",["358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, DatePicker, Space, Table, Radio, Select, message\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport FaqSettingsAside from './faq-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { SubMenu } = Menu;\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { offset: 0, span: 23 },\r\n}\r\nconst { Option } = Select;\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Number',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Content',\r\n    dataIndex: 'content',\r\n  },\r\n  {\r\n    title: 'Setting',\r\n    dataIndex: 'setting',\r\n    render: () => <Button className=\"theme-btn-default \" >\r\n      <Link to=\"#\" >\r\n        faq\r\n      </Link>\r\n    </Button>\r\n  },\r\n];\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    number: '1',\r\n    content: 'Lorem ipsum',\r\n    setting: 'edit'\r\n  },\r\n  {\r\n    key: '2',\r\n    number: '2',\r\n    content: 'Lorem ipsum',\r\n    setting: 'edit'\r\n  }\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\nfunction handleSelectChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\n\r\nclass EditFaq extends Component {\r\n\r\n  state = {\r\n    loading: false\r\n  }\r\n\r\n  formRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n\r\n    // console.log(window.location.pathname.split(\"/\").pop())\r\n    var faqId = window.location.pathname.split(\"/\").pop();\r\n\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetFAQdetail/' + faqId)\r\n      .then((response) => {\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          var AllData = response.data.data;\r\n\r\n          console.log(AllData)\r\n\r\n          this.formRef.current.setFieldsValue({\r\n            faq_question: AllData.question,\r\n            faq_answer: AllData.answer,\r\n          });\r\n\r\n        } else {\r\n          message.error(response.data.message);\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n      })\r\n\r\n  }\r\n\r\n  onFinish = values => {\r\n    console.log('Success:', values);\r\n    this.setState({ loading: true });\r\n\r\n    axios.post(BaseUrl + \"/adminapi/UpdateFAQ\", {\r\n      \"id\": window.location.pathname.split(\"/\").pop(),\r\n      \"question\": values.faq_question,\r\n      \"answer\": values.faq_answer\r\n    })\r\n      .then(res => {\r\n        // console.log(res)\r\n        if (res.data.status == 1) {\r\n          message.success('Success.. Faq updated succcessfully..')\r\n          // this.formRef.current.resetFields();\r\n        }\r\n        else {\r\n          message.success(res.data.message)\r\n        }\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n        this.setState({ loading: false });\r\n      })\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < FaqSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                ref={this.formRef}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>기본정보 설정</p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button loading={loading} type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\" >\r\n                    저장\r\n                    </Button>\r\n\r\n                    {/*  \r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}  >\r\n                    <p>FAQ 등록</p>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"FAQ 질문\"\r\n                      name=\"faq_question\"\r\n                      rules={[{ required: true, message: 'Please input your question!' }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        rows={8}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"FAQ 답변\"\r\n                      name=\"faq_answer\"\r\n                      rules={[{ required: true, message: 'Please input your answer!' }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        rows={8}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                </Row>\r\n              </Form>\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFaq;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\FaqSetting\\RegisterFaq.js",["380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, DatePicker, Space, Table, Radio, Select, message\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport FaqSettingsAside from './faq-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { SubMenu } = Menu;\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { offset: 0, span: 23 },\r\n}\r\nconst { Option } = Select;\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Number',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'Content',\r\n    dataIndex: 'content',\r\n  },\r\n  {\r\n    title: 'Setting',\r\n    dataIndex: 'setting',\r\n    render: () => <Button className=\"theme-btn-default \" >\r\n      <Link to=\"#\" >\r\n        faq\r\n      </Link>\r\n    </Button>\r\n  },\r\n];\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    number: '1',\r\n    content: 'Lorem ipsum',\r\n    setting: 'edit'\r\n  },\r\n  {\r\n    key: '2',\r\n    number: '2',\r\n    content: 'Lorem ipsum',\r\n    setting: 'edit'\r\n  }\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\nfunction handleSelectChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\n\r\nclass RegisterFaq extends Component {\r\n\r\n  state = {\r\n    loading: false\r\n  }\r\n\r\n  formRef = React.createRef();\r\n\r\n  onFinish = values => {\r\n    console.log('Success:', values);\r\n    this.setState({ loading: true });\r\n\r\n    axios.post(BaseUrl + \"/adminapi/InsertFAQ\", {\r\n      \"question\": values.faq_question,\r\n      \"answer\": values.faq_answer\r\n    })\r\n      .then(res => {\r\n        // console.log(res)\r\n        if (res.data.status == 1) {\r\n          message.success('Success.. Faq inserted succcessfully..')\r\n          this.formRef.current.resetFields();\r\n        }\r\n        else {\r\n          message.success(res.data.message)\r\n        }\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n        this.setState({ loading: false });\r\n      })\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < FaqSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                ref={this.formRef}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>FAQ 관리 </p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button loading={loading} type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\" >\r\n                    FAQ 저장\r\n                    </Button>\r\n\r\n                    {/*  \r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}  >\r\n                    <p>FAQ 등록</p>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"FAQ 질문\"\r\n                      name=\"faq_question\"\r\n                      rules={[{ required: true, message: 'Please input your question!' }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        rows={8}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"FAQ 답변\"\r\n                      name=\"faq_answer\"\r\n                      rules={[{ required: true, message: 'Please input your answer!' }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        rows={8}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                </Row>\r\n              </Form>\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterFaq;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\Register\\Register.js",["400","401","402","403","404","405"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Layout,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  Modal,\r\n  Divider,\r\n  Space,\r\n  message,\r\n} from \"antd\";\r\n\r\nimport \"../css/global.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col } from \"antd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport WithoutAuthHeader from \"../WithoutAuthHeaderFooter/WithoutAuthHeader\";\r\nimport WithoutAuthFooter from \"../WithoutAuthHeaderFooter/WithoutAuthFooter\";\r\nimport LoginFormFooter from \"../WithoutAuthHeaderFooter/LoginFormFooter\";\r\nimport BaseUrl from \"../services/axios-url\";\r\nimport Cookies from \"universal-cookie\";\r\nimport logo from \"../images/logo-small.png\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst { Content } = Layout;\r\n\r\nconst layout = {\r\n  labelCol: { span: 0 },\r\n  wrapperCol: { span: 24 },\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 0, span: 24 },\r\n};\r\n\r\nconst onFinishFailed = (errorInfo) => {\r\n  console.log(\"Failed:\", errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nclass Register extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    const cookies = new Cookies();\r\n    var cookieName = btoa('zeeps');\r\n    // console.log('encodedStringBtoA', cookieName);\r\n    var finalCookieName = '';\r\n    finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n    var encodedStringBtoA = btoa('authorized');\r\n    // console.log('encodedStringBtoA', encodedStringBtoA);\r\n    var finalCookieValue = '';\r\n    finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n    // cookies.set(finalCookieName, finalCookieValue, { path: '/' });\r\n\r\n    // get the cookie\r\n\r\n    if (cookies.get(finalCookieName) == finalCookieValue) {\r\n      message.warning('You are already logged in')\r\n      this.props.history.push('/register-property')\r\n    }\r\n\r\n  }\r\n\r\n  state = {\r\n    showTermsModal: false,\r\n    show3rdPartyModal: false,\r\n    showBeneficialInformationModal: false,\r\n    loading: false,\r\n    modalsData: []\r\n  }\r\n\r\n  showTermsModal = () => {\r\n    this.setState({\r\n      showTermsModal: true,\r\n    });\r\n  };\r\n\r\n  show3rdPartyModal = () => {\r\n    this.setState({\r\n      show3rdPartyModal: true,\r\n    });\r\n  };\r\n\r\n  showBeneficialInformationModal = () => {\r\n    this.setState({\r\n      showBeneficialInformationModal: true,\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      showTermsModal: false,\r\n      show3rdPartyModal: false,\r\n      showBeneficialInformationModal: false,\r\n    });\r\n  };\r\n\r\n  onFinish = values => {\r\n    // console.log('Success:', values);\r\n\r\n    this.setState({ loading: true })\r\n\r\n    axios.post(BaseUrl + \"/memberapi/MemberRegister\", {\r\n      name: values.full_name,\r\n      mobile: values.phone,\r\n      email: values.email,\r\n      password: values.password,\r\n      address: ''\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n        this.setState({ allData: '' })\r\n\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n\r\n          message.success('Registeration successful!! Redirecting you..');\r\n\r\n          const cookies = new Cookies();\r\n          var cookieName = btoa('zeeps');\r\n          // console.log('encodedStringBtoA', cookieName);\r\n          var finalCookieName = '';\r\n          finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n          var encodedStringBtoA = btoa('authorized');\r\n          // console.log('encodedStringBtoA', encodedStringBtoA);\r\n          var finalCookieValue = '';\r\n          finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n          cookies.set(finalCookieName, finalCookieValue, { path: '/' });\r\n\r\n          // cookies.set('Zeeps', encodedStringBtoA, { path: '/' });\r\n          // User Id----------------------\r\n          // var userId = btoa(res.data.id);\r\n          var userId = res.data.data.id;\r\n          cookies.set('UU', userId, { path: '/' });\r\n\r\n          // User Name\r\n          var userName = res.data.data.name.replace(' ', '-');\r\n          cookies.set('UN', userName, { path: '/' });\r\n\r\n          this.props.history.push(\"/register-property\");\r\n\r\n\r\n\r\n        } else {\r\n          this.setState({ loading: false });\r\n          message.error(res.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(BaseUrl + '/memberapi/GetAgreementsFront')\r\n      .then((response) => {\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          //   var AllData = response.data.data;\r\n          // console.log(response.data.data)\r\n\r\n          this.setState({\r\n            modalsData: response.data.data,\r\n          })\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Server error');\r\n      })\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { showTermsModal, show3rdPartyModal, showBeneficialInformationModal, loading, modalsData } = this.state;\r\n\r\n    return (\r\n      <Layout className=\"login-bg\">\r\n\r\n        <WithoutAuthHeader />\r\n\r\n        <Content className=\"login-content\">\r\n\r\n          <Row>\r\n            <Col xs={{ span: 3, offset: 1 }} sm={{ span: 3, offset: 5 }} lg={{ span: 2, offset: 6 }} >\r\n\r\n              <Button type=\"default\" icon={<ArrowLeftOutlined />} size='large' shape=\"circle\" onClick={GoBack} />\r\n\r\n            </Col>\r\n\r\n\r\n            <Col xs={{ span: 19 }} sm={{ span: 9, offset: 0 }} lg={{ span: 8, offset: 0 }} >\r\n\r\n              <img src={logo} />\r\n              <h1 className=\"text-white\">환영합니다!</h1>\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Form.Item\r\n                  label=\"\"\r\n                  name=\"email\"\r\n                  rules={[{ required: true, type: \"email\", message: 'Please input your Email!' }]}\r\n\r\n                >\r\n                  <Input placeholder=\"이메일을 입력해주세요. \" className=\"login-input\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"\"\r\n                  name=\"full_name\"\r\n                  rules={[{ required: true, message: 'Please input your Full name!' }]}\r\n\r\n                >\r\n                  <Input placeholder=\"이름을 입력해주세요.\" className=\"login-input\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"\"\r\n                  name=\"password\"\r\n                  rules={[{ required: true, message: 'Please input your password!' }]}\r\n                >\r\n                  <Input.Password placeholder=\"비밀번호를 입력해주세요.\" className=\"login-input\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"confirm\"\r\n                  label=\"\"\r\n                  dependencies={['password']}\r\n                  hasFeedback\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                      validator(rule, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                          return Promise.resolve();\r\n                        }\r\n                        return Promise.reject('The two passwords that you entered do not match!');\r\n                      },\r\n                    }),\r\n                  ]}\r\n                >\r\n                  <Input.Password placeholder=\"비밀번호를 입력해주세요.\" className=\"login-input\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"phone\"\r\n                  label=\"\"\r\n                  rules={[{ required: true, message: 'Please input your phone number!' }]}\r\n                >\r\n                  <Input placeholder=\"휴대폰번호를 입력해주세요.\" className=\"login-input\" />\r\n                </Form.Item>\r\n\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      name=\"terms_conditions\"\r\n                      valuePropName=\"checked\"\r\n                      rules={[\r\n                        {\r\n                          validator: (_, value) =>\r\n                            value ? Promise.resolve() : Promise.reject('Should accept Terms and conditions'),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Checkbox className=\"text-white\">\r\n                        이용약관∙개인정보 동의 내용\r\n                      </Checkbox>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col className=\"text-right \" span={12}>\r\n                    <Link href=\"#\" className=\"text-white text-underline\" onClick={this.showTermsModal} >\r\n                      {/* Terms and conditions */}\r\n                      약관보기\r\n                      </Link>\r\n                  </Col>\r\n                </Row>\r\n\r\n\r\n\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      name=\"third_party_conditions\"\r\n                      valuePropName=\"checked\"\r\n                      rules={[\r\n                        {\r\n                          validator: (_, value) =>\r\n                            value ? Promise.resolve() : Promise.reject('Should accept 3rd party conditions'),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Checkbox className=\"text-white\">\r\n                        제 3자 정보 제공(필수) 동의\r\n                      </Checkbox>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col className=\"text-right \" span={12}>\r\n                    <Link href=\"#\" className=\"text-white text-underline\" onClick={this.show3rdPartyModal} >약관보기</Link>\r\n                  </Col>\r\n                </Row>\r\n\r\n\r\n\r\n                <Row>\r\n                  <Col span={12}>\r\n                    <Form.Item\r\n                      name=\"benificial_info\"\r\n                      valuePropName=\"checked\"\r\n                      rules={[\r\n                        {\r\n                          validator: (_, value) =>\r\n                            value ? Promise.resolve() : Promise.reject('Should accept Beneficial information acceptance agreement'),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Checkbox className=\"text-white\">\r\n                        혜택성 정보 수신 동의 내용\r\n                      </Checkbox>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col className=\"text-right\" span={12}>\r\n                    <Link href=\"#\" className=\"text-white text-underline\" onClick={this.showBeneficialInformationModal} >\r\n                      {/* Beneficial information acceptance */}\r\n                      약관보기\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n\r\n\r\n\r\n                <Form.Item {...tailLayout}>\r\n                  <Button loading={loading} block type=\"primary\" shape=\"round\" htmlType=\"submit\" className=\"login-btn-bg\">\r\n                    가입하기\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n\r\n\r\n              {/* Terms and condtions modal */}\r\n              <Modal\r\n                visible={showTermsModal}\r\n                title=\"Terms and conditions\"\r\n                // onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n                footer={null}\r\n                width={400}\r\n              >\r\n                <Row className=\"text-left\">\r\n\r\n                  <p>{modalsData.termsOfService}</p>\r\n                  <Divider />\r\n\r\n                  <Space direction=\"vertical\" className=\"width100\">\r\n                    <Col span={24}>\r\n                      <Button key=\"back\" className=\"width100 theme-btn\" onClick={this.handleCancel} size={'large'}> Ok  </Button>\r\n                    </Col>\r\n                  </Space>\r\n\r\n                </Row>\r\n              </Modal>\r\n\r\n              {/* showBeneficialInformationModal modal */}\r\n              <Modal\r\n                visible={showBeneficialInformationModal}\r\n                title=\"Beneficial Information\"\r\n                // onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n                footer={null}\r\n                width={400}\r\n              >\r\n                <Row className=\"text-left\">\r\n\r\n                  <p>{modalsData.eventNews}</p>\r\n                  <Divider />\r\n\r\n                  <Space direction=\"vertical\" className=\"width100\">\r\n                    <Col span={24}>\r\n                      <Button key=\"back\" className=\"width100 theme-btn\" onClick={this.handleCancel} size={'large'}> Ok  </Button>\r\n                    </Col>\r\n                  </Space>\r\n\r\n                </Row>\r\n              </Modal>\r\n\r\n              {/*  3rd party conditions modal */}\r\n              <Modal\r\n                visible={show3rdPartyModal}\r\n                title=\"3rd Party conditions\"\r\n                // onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n                footer={null}\r\n                width={400}\r\n              >\r\n                <Row className=\"text-left\">\r\n\r\n                  <p>{modalsData.thirdPartyOffer}</p>\r\n                  <Divider />\r\n\r\n                  <Space direction=\"vertical\" className=\"width100\">\r\n                    <Col span={24}>\r\n                      <Button key=\"back\" className=\"width100 theme-btn\" onClick={this.handleCancel} size={'large'}> Ok  </Button>\r\n                    </Col>\r\n                  </Space>\r\n\r\n                </Row>\r\n              </Modal>\r\n\r\n\r\n\r\n              <LoginFormFooter />\r\n\r\n            </Col>\r\n          </Row>\r\n\r\n        </Content>\r\n\r\n        <WithoutAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\LandingPage\\LandingPage.js",["406","407","408","409","410","411","412","413","414"],"import React, { Component } from \"react\";\r\nimport { Layout, Button, Divider, Row, Col, Space } from \"antd\";\r\nimport { PicCenterOutlined } from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./landing.css\";\r\nimport \"../css/global.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\r\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\r\nimport Cookies from \"universal-cookie\";\r\nimport logo from \"../images/logo-small.png\";\r\nimport main1 from \"../images/main1.png\";\r\nimport main2 from \"../images/main2.png\";\r\nimport main3 from \"../images/main3.png\";\r\nimport main4 from \"../images/main4.png\";\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\nclass LandingPage extends Component {\r\n  state = {\r\n    isLoggedIn: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cookies = new Cookies();\r\n    var cookieName = btoa('zeeps');\r\n    var finalCookieName = '';\r\n    finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n    var encodedStringBtoA = btoa('authorized');\r\n    var finalCookieValue = '';\r\n    finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n    if (cookies.get('emVlcHMaAaA') == 'YXV0aG9yaXplZAaAaA') {\r\n      this.setState({ isLoggedIn: true })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn } = this.state;\r\n\r\n\r\n    return (\r\n      <Layout>\r\n          <div className={isLoggedIn ? 'landing-banner-auth' : 'landing-banner-without-auth'}>\r\n              <WithAuthHeader />\r\n\r\n              <div style={{ padding: '70px 50px 80px 50px' }}>\r\n                  <h2 className=\"text-white\"> <img src={logo} width=\"60\" /> 사이트에 오신걸 </h2>\r\n                  <h2 className=\"text-white\">환영합니다!</h2>\r\n                  <p className=\"text-white\">분양 매물 신청 관리, 분양 계약 관리 등 이 모든 것을 <br />집스에서 더욱 편리하게 관리하세요.  </p>\r\n\r\n                  <Space>\r\n                      <Button type=\"primary\" className=\"theme-btn\" shape=\"\" htmlType=\"submit\">\r\n                          <Link to=\"/register-property\">집 내놓기</Link>\r\n                      </Button>\r\n\r\n                      {isLoggedIn ? '' : <Button className=\"btn-default landing-page-btn\" shape=\"\" >\r\n                          <Link to=\"/login\" >\r\n                              로그인\r\n                          </Link>\r\n                      </Button>\r\n\r\n                      }\r\n                  </Space>\r\n              </div>\r\n          </div>\r\n          <Content>\r\n              <Layout className=\"site-layout-background\" >\r\n                  <Content className=\"content-padding\" >\r\n                      <Row className=\"landing-services-section\">\r\n                          <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                              <div className=\"text-center\">\r\n                                  {/* <h3>Cras ultricies ligula sed Donec sollicitudin  </h3> */}\r\n                                  {/* <i> <PicCenterOutlined /></i> */}\r\n                                  <img src={main1} width=\"90\" />\r\n                                  <p>집스를 통해 집을 임대하는 모든 고객은<br />\r\n                                  임대인 중개수수료가 무료에요!</p>\r\n                              </div>\r\n                          </Col>\r\n                          <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                              <div className=\"text-center\">\r\n                                  {/* <h3>Cras ultricies ligula sed Donec sollicitudin </h3> */}\r\n                                  <img src={main2} width=\"90\" />\r\n                                  <p> 집스 서비스를 이용하는 고객에게<br />\r\n                                  중개 정보를 실시간으로 알려드려요!</p>\r\n                              </div>\r\n                          </Col>\r\n                          <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n                          </Col>\r\n                      </Row>\r\n                      < Divider />\r\n                      <Row className=\"landing-services-section\">\r\n                          <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                              <div className=\"text-center\">\r\n                                  {/* <h3>Cras ultricies ligula sed Donec sollicitudin  </h3> */}\r\n                                  <img src={main3} width=\"90\" />\r\n                                  <p>집스 서비스를 이용하는 고객에게 <br />\r\n                                  모든 법률 서비스를 무료로 제공해 드려요! </p>\r\n                              </div>\r\n                          </Col>\r\n                          <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                              <div className=\"text-center\">\r\n                                  {/* <h3>Cras ultricies ligula sed Donec sollicitudin </h3> */}\r\n                                  <img src={main4} width=\"90\" />\r\n                                  <p>집을 내놓을때 생기는 번거로운 과정을 <br />\r\n                                  생략한 계약서 작성이 가능해요! </p>\r\n                              </div>\r\n                          </Col>\r\n                      </Row>\r\n\r\n                  </Content>\r\n              </Layout>\r\n          </Content>\r\n\r\n          <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n  );\r\n    // state = {\r\n    //   isLoggedIn: false,\r\n    // };\r\n\r\n    // componentDidMount() {\r\n    //   const cookies = new Cookies();\r\n    //   var cookieName = btoa(\"zeeps\");\r\n    //   var finalCookieName = \"\";\r\n    //   finalCookieName = cookieName.replace(\"=\", \"aAaA\");\r\n\r\n    //   var encodedStringBtoA = btoa(\"authorized\");\r\n    //   var finalCookieValue = \"\";\r\n    //   finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\r\n\r\n    //   if (cookies.get(\"emVlcHMaAaA\") == \"YXV0aG9yaXplZAaAaA\") {\r\n    //     this.setState({ isLoggedIn: true });\r\n    //   }\r\n    // }\r\n\r\n    // render() {\r\n    //   const { isLoggedIn } = this.state;\r\n    //   return (\r\n    //     <Layout>\r\n    //       <div className=\"landing-banner\">\r\n    //         <WithAuthHeader />\r\n\r\n    //         <div style={{ padding: \"70px 50px 80px 50px\" }}>\r\n    //           <h2 className=\"text-white\">Welcome to Zeeps!</h2>\r\n    //           <p className=\"text-white\">\r\n    //             Nulla quis lorem ut libero. <br /> Cras ultricies ligula sed magna\r\n    //             dictum porta.{\" \"}\r\n    //           </p>\r\n\r\n    //           <Space>\r\n    //             <Button\r\n    //               type=\"primary\"\r\n    //               className=\"theme-btn\"\r\n    //               shape=\"\"\r\n    //               htmlType=\"submit\"\r\n    //             >\r\n    //               <Link to=\"/register-property\">Register Property</Link>\r\n    //             </Button>\r\n\r\n    //             {isLoggedIn ? (\r\n    //               \"\"\r\n    //             ) : (\r\n    //               <Button className=\"btn-default landing-page-btn\" shape=\"\">\r\n    //                 <Link to=\"/login\">Login</Link>\r\n    //               </Button>\r\n    //             )}\r\n    //           </Space>\r\n    //         </div>\r\n    //       </div>\r\n    //       <Content>\r\n    //         <Layout className=\"site-layout-background\">\r\n    //           <Content className=\"content-padding\">\r\n    //             <Row className=\"landing-services-section\">\r\n    //               <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n    //                 <div className=\"text-center\">\r\n    //                   <h3>Cras ultricies ligula sed Donec sollicitudin </h3>\r\n    //                   <i>\r\n    //                     <PicCenterOutlined />\r\n    //                   </i>\r\n    //                   <p>\r\n    //                     Vestibulum ante ipsum primis in faucibus orci luctus{\" \"}\r\n    //                     <br />\r\n    //                     et ultrices Donec rutrum congue leo eget malesuada{\" \"}\r\n    //                   </p>\r\n    //                 </div>\r\n    //               </Col>\r\n    //               <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n    //                 <div className=\"text-center\">\r\n    //                   <h3>Cras ultricies ligula sed Donec sollicitudin </h3>\r\n    //                   <i>\r\n    //                     <PicCenterOutlined />\r\n    //                   </i>\r\n    //                   <p>\r\n    //                     Vestibulum ante ipsum primis in faucibus orci luctus{\" \"}\r\n    //                     <br />\r\n    //                     et ultrices Donec rutrum congue leo eget malesuada{\" \"}\r\n    //                   </p>\r\n    //                 </div>\r\n    //               </Col>\r\n    //               <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }}></Col>\r\n    //             </Row>\r\n    //             <Divider />\r\n    //             <Row className=\"landing-services-section\">\r\n    //               <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n    //                 <div className=\"text-center\">\r\n    //                   <h3>Cras ultricies ligula sed Donec sollicitudin </h3>\r\n    //                   <i>\r\n    //                     <PicCenterOutlined />\r\n    //                   </i>\r\n    //                   <p>\r\n    //                     Vestibulum ante ipsum primis in faucibus orci luctus{\" \"}\r\n    //                     <br />\r\n    //                     et ultrices Donec rutrum congue leo eget malesuada{\" \"}\r\n    //                   </p>\r\n    //                 </div>\r\n    //               </Col>\r\n    //               <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }}>\r\n    //                 <div className=\"text-center\">\r\n    //                   <h3>Cras ultricies ligula sed Donec sollicitudin </h3>\r\n    //                   <i>\r\n    //                     <PicCenterOutlined />\r\n    //                   </i>\r\n    //                   <p>\r\n    //                     Vestibulum ante ipsum primis in faucibus orci luctus{\" \"}\r\n    //                     <br />\r\n    //                     et ultrices Donec rutrum congue leo eget malesuada{\" \"}\r\n    //                   </p>\r\n    //                 </div>\r\n    //               </Col>\r\n    //             </Row>\r\n    //           </Content>\r\n    //         </Layout>\r\n    //       </Content>\r\n\r\n    //       <WithAuthFooter />\r\n    //     </Layout>\r\n    //   );\r\n    // }\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\RegisterPropertyStepTwo.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443"],"import React, { Component } from 'react';\r\nimport WithAuthHeader from '../WithAuthHeaderFooter/WithAuthHeader';\r\nimport {\r\n    Layout, Form, Input, Button, Checkbox, Menu, Divider, Row, Col, Space, Modal, Steps, Radio, Select, Tag, DatePicker, Upload, message, Card\r\n} from 'antd';\r\n\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport './register-property.css';\r\nimport '../css/global.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport nationalLogo from \"../images/national.png\";\r\n\r\nconst axios = require('axios');\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst { Step } = Steps;\r\n\r\nclass RegisterPropertyStepTwo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        selectedTags: ['Electricity'],\r\n        optionTags: ['Refrigerator'],\r\n        previewVisible: false,\r\n        previewImage: \"\",\r\n        fileList: [],\r\n        forSale: false,\r\n        forRent: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.state.data != 'undefined') {\r\n            console.log(\"data\", this.props.location.state.data);\r\n            var str = this.props.location.state.data;\r\n\r\n            console.log(str.search(\"For Sale\"))\r\n\r\n            if ( str.search(\"For Rent\") != '-1' &&  str.search(\"For Sale\") == '-1') {\r\n                console.log('componentdidmount ----> for rent')\r\n                this.setState({ forRent: true, forSale: false }, () => { })\r\n            }\r\n            else if ( str.search(\"For Sale\") != '-1' &&  str.search(\"For Rent\") == '-1') {\r\n                console.log('componentdidmount ----> for sale')\r\n                this.setState({ forRent: false, forSale: true }, () => { })\r\n            }\r\n            else if (str.indexOf(\"For Sale\") != '-1' && str.indexOf(\"For Rent\") != '-1') {\r\n                this.setState({ forRent: true, forSale: true })\r\n            }\r\n            else {\r\n                return ''\r\n            }\r\n            // str.search(\"For Rent\");\r\n\r\n        }\r\n    }\r\n\r\n    onFinish = values => {\r\n        console.log('Success:', values);\r\n\r\n        window.location = '/register-property-step-three';\r\n    };\r\n\r\n    showtextboxes = () => {\r\n        if (this.state.forSale == false && this.state.forRent == true) {\r\n            console.log('this.state.forRent')\r\n            return <React.Fragment>\r\n                <Col className=\"\" span={24}>\r\n                    <Form.Item\r\n                        label=\"\"\r\n                        name=\"sales_price\"\r\n                        rules={[{ required: false, message: 'Please input your Sales price!' }]}\r\n                    >\r\n                        <Input placeholder=\"매매가를 입력하세요 \" />\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col className=\"\" span={24}>\r\n                    <Form.Item\r\n                        label=\"\"\r\n                        name=\"deposit\"\r\n                        rules={[{ required: false, message: 'Please input your Deposit!' }]}\r\n                    >\r\n                        <Input placeholder=\"월세가를 입력하세요\" />\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n            </React.Fragment>\r\n        }\r\n\r\n        else if (this.state.forSale == true && this.state.forRent == false) {\r\n            console.log('this.state.forSale')\r\n            return <React.Fragment>\r\n                <Col className=\"\" span={24}>\r\n                    <Form.Item\r\n                        label=\"\"\r\n                        name=\"sales_price\"\r\n                        rules={[{ required: false, message: 'Please input your Sales price!' }]}\r\n                    >\r\n                        <Input placeholder=\"매매가를 입력하세요 \" />\r\n                    </Form.Item>\r\n                </Col>\r\n            </React.Fragment>\r\n        }\r\n\r\n        else if (this.state.forSale == true && this.state.forRent == true) {\r\n            console.log('forboth')\r\n            return <React.Fragment>\r\n                <Col className=\"\" span={24}>\r\n                    <Form.Item\r\n                        label=\"\"\r\n                        name=\"sales_price\"\r\n                        rules={[{ required: false, message: 'Please input your Sales price!' }]}\r\n                    >\r\n                        <Input placeholder=\"매매가를 입력하세요 \" />\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col className=\"\" span={24}>\r\n                    <Form.Item\r\n                        label=\"\"\r\n                        name=\"deposit\"\r\n                        rules={[{ required: false, message: 'Please input your Deposit!' }]}\r\n                    >\r\n                        <Input placeholder=\"보증금을 입력하세요\" />\r\n                    </Form.Item>\r\n                </Col>\r\n\r\n                <Col className=\"\" span={24}>\r\n                    <Form.Item\r\n                        label=\"\"\r\n                        name=\"sales_price_2\"\r\n                        rules={[{ required: false, message: 'Please input your Sales price!' }]}\r\n                    >\r\n                        <Input placeholder=\"매매가를 입력하세요\" />\r\n                    </Form.Item>\r\n                </Col>\r\n            </React.Fragment>\r\n        }\r\n\r\n        else {\r\n            console.log('else')\r\n            return ''\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const onFinishFailed = errorInfo => {\r\n            console.log('Failed:', errorInfo);\r\n            message.error(errorInfo)\r\n        };\r\n\r\n        return (\r\n            <Layout className=\"register-property-layout\">\r\n\r\n                <WithAuthHeader />\r\n\r\n                <Content>\r\n\r\n                    <Layout className=\"site-layout-background\" >\r\n                        <Space direction=\"vertical\" size={'large'}>\r\n                            <Content className=\"content-padding\" >\r\n                                <Row className=\"\">\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} >\r\n                                        {/* Left Side */}\r\n                                    </Col>\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} className=\"text-center\" >\r\n                                        <Row>\r\n                                            <Col className=\" mb-15\" span={24} >\r\n                                                <h2>집 내놓기</h2>\r\n                                            </Col>\r\n\r\n                                            <Col className=\"mb-15\" span={24} >\r\n                                                <Steps progressDot current={1}>\r\n                                                    <Step title=\"1단계\" description=\"\" />\r\n                                                    <Step title=\"2단계\" subTitle=\"\" description=\"\" />\r\n                                                    <Step title=\"3단계\" description=\"\" />\r\n                                                </Steps>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={24}>\r\n                                                <h3>내놓으실 집의 금액을 등록해주세요!</h3>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <Form\r\n                                            // {...layout}\r\n                                            name=\"basic\"\r\n                                            initialValues={{ remember: true }}\r\n                                            onFinish={this.onFinish}\r\n                                            onFinishFailed={onFinishFailed}\r\n                                        >\r\n                                            <Row>\r\n\r\n\r\n                                                {this.showtextboxes()}\r\n\r\n                                                <Col className=\"text-left mb-15\" span={24}>\r\n                                                    <img src={nationalLogo} width=\"100\" />\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left\">\r\n                                                    <p>국토교통부 최근 실거래가 정보 </p>\r\n                                                </Col>\r\n\r\n\r\n                                                <Space direction=\"vertical\" style={{ 'height': '300px', 'overflow': 'auto', 'width': '100%' }} >\r\n                                                    <Col className=\"text-left\" span={24}>\r\n                                                        <Card >\r\n                                                            <p>서울시 양천구 목동북로 12\r\n                                                                <br />\r\n                                                            i목동아파트 102동 302호 </p>\r\n                                                            <b className=\"color-red\">14억 3,000</b>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                    <Col className=\"text-left\" span={24}>\r\n                                                        <Card >\r\n                                                            <p>서울시 양천구 목동북로 12\r\n                                                                <br />\r\n                                                            i목동아파트 102동 302호 </p>\r\n                                                            <b className=\"color-red\">14억 3,000</b>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                    <Col className=\"text-left\" span={24}>\r\n                                                        <Card >\r\n                                                            <p>서울시 양천구 목동북로 12\r\n                                                                <br />\r\n                                                            i목동아파트 102동 302호 </p>\r\n                                                            <b className=\"color-red\">14억 3,000</b>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                    <Col className=\"text-left\" span={24}>\r\n                                                        <Card >\r\n                                                            <p>서울시 양천구 목동북로 12\r\n                                                                <br />\r\n                                                            i목동아파트 102동 302호 </p>\r\n                                                            <b className=\"color-red\">14억 3,000</b>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Space>\r\n\r\n                                                <Divider />\r\n\r\n\r\n\r\n                                                <Col span={24} className=\"mb-15 text-left\">\r\n                                                    <Form.Item >\r\n                                                        <Button className=\"theme-btn\" type=\"primary\" htmlType=\"submit\" style={{ 'width': '100%' }}>\r\n                                                            등록하기\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                            </Row> {/* Form row end */}\r\n\r\n                                        </Form>\r\n\r\n                                    </Col>\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 6 }} >\r\n                                        {/* Right Side */}\r\n                                    </Col>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </Row>\r\n\r\n\r\n                            </Content>\r\n                        </Space>\r\n                    </Layout>\r\n                </Content>\r\n\r\n                <WithAuthFooter />\r\n\r\n            </Layout >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterPropertyStepTwo;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\RegisterPropertyStepThree.js",["444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465"],"import React, { Component } from \"react\";\r\nimport WithAuthHeader from \"../WithAuthHeaderFooter/WithAuthHeader\";\r\nimport {\r\n  Layout,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  Menu,\r\n  Divider,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  Modal,\r\n  Steps,\r\n  Radio,\r\n  Select,\r\n  Tag,\r\n  DatePicker,\r\n  Upload,\r\n  message,\r\n  InputNumber,\r\n} from \"antd\";\r\n\r\nimport {\r\n  UploadOutlined,\r\n  SearchOutlined,\r\n  ReloadOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./register-property.css\";\r\nimport \"../css/global.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport BaseUrl from \"../services/axios-url\";\r\nimport WithAuthFooter from \"../WithAuthHeaderFooter/WithAuthFooter\";\r\nimport Cookies from \"universal-cookie\";\r\nconst axios = require(\"axios\");\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst { Step } = Steps;\r\n\r\nclass RegisterPropertyStepThree extends Component {\r\n  state = {\r\n    showVerification: false,\r\n    loading: false,\r\n    visible: false,\r\n    noRegisteredModalvisible: false,\r\n    mem_name: \"\",\r\n    mobile_no_used: \"\",\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  noRegisteredModalvisible = () => {\r\n    this.setState({\r\n      noRegisteredModalvisible: true,\r\n    });\r\n  };\r\n\r\n  handleOkMember = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, visible: false });\r\n      window.location = \"/register-property\";\r\n    }, 1500);\r\n  };\r\n\r\n  handleOkNonMember = () => {\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      this.setState({ loading: false, noRegisteredModalvisible: false });\r\n    }, 1500);\r\n    window.location = \"/\";\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      noRegisteredModalvisible: false,\r\n    });\r\n  };\r\n\r\n  getVerificationCode = () => {\r\n    console.log(\"????\");\r\n    this.setState({\r\n      mobile_no_used: this.state.mobile_no,\r\n      verificationCodeLoading: true,\r\n    });\r\n\r\n    axios\r\n      .post(BaseUrl + \"/memberapi/SendOTPMember\", {\r\n        name: this.state.mem_name,\r\n        mobile: this.state.mobile_no, // this.state.mobile_no '9888295279'\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.status == 1) {\r\n          message.success(\"OTP Sent successfully on your mobile number\");\r\n          this.setState({\r\n            showVerification: true, // show the textbox\r\n            // visible: true,           // show the modal\r\n          });\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n        this.setState({\r\n          verificationCodeLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error(\"Sorry!! Something went wrong\");\r\n        this.setState({\r\n          verificationCodeLoading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n\r\n    this.setState({ loading: true });\r\n\r\n    if (this.state.mobile_no_used != values.mobile_no) {\r\n      message.error(\r\n        \"Sorry!! Your mobile number is changed from the previous one\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    var mobile = values.mobile_no.toString();\r\n    var verificationcode = values.verification_code.toString();\r\n\r\n    axios\r\n      .post(BaseUrl + \"/memberapi/ConfirmMemberMobile\", {\r\n        mobile: mobile,\r\n        verificationcode: verificationcode,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.data.status == 1) {\r\n          message.success(\"You are successfully verified..\");\r\n\r\n          const cookies = new Cookies();\r\n          var cookieName = btoa(\"zeeps\");\r\n          // console.log('encodedStringBtoA', cookieName);\r\n          var finalCookieName = \"\";\r\n          finalCookieName = cookieName.replace(\"=\", \"aAaA\");\r\n\r\n          var encodedStringBtoA = btoa(\"authorized\");\r\n          // console.log('encodedStringBtoA', encodedStringBtoA);\r\n          var finalCookieValue = \"\";\r\n          finalCookieValue = encodedStringBtoA.replace(\"==\", \"aAaA\");\r\n\r\n          // already logged in user\r\n          if (cookies.get(finalCookieName) == finalCookieValue) {\r\n            this.setState({\r\n              visible: true, // show the modal\r\n            });\r\n          }\r\n          // Not logged in user\r\n          else if (\r\n            cookies.get(finalCookieName) == undefined ||\r\n            cookies.get(finalCookieName) == \"undefined\"\r\n          ) {\r\n            this.setState({\r\n              noRegisteredModalvisible: true, // show the non member modal\r\n            });\r\n          }\r\n          // Not a normal user\r\n          else {\r\n            message.error(\"Unauthenticated User!\");\r\n            return;\r\n          }\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error(\"Sorry!! Something went wrong\");\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.mobile_no);\r\n\r\n    const {\r\n      visible,\r\n      noRegisteredModalvisible,\r\n      loading,\r\n      mem_name,\r\n      mobile_no,\r\n      verificationCodeLoading,\r\n    } = this.state;\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n      console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    return (\r\n      <Layout className=\"register-property-layout\">\r\n        <WithAuthHeader />\r\n\r\n        <Content>\r\n          <Layout className=\"site-layout-background\">\r\n            <Space direction=\"vertical\" size={\"large\"}>\r\n              <Content className=\"content-padding\">\r\n                <Row className=\"\">\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }}>\r\n                    {/* Left Side */}\r\n                  </Col>\r\n                  <Col\r\n                    xs={{ span: 24 }}\r\n                    sm={{ span: 24 }}\r\n                    lg={{ span: 8 }}\r\n                    className=\"text-center\"\r\n                  >\r\n                    <Row>\r\n                      <Col className=\" mb-15\" span={24}>\r\n                        <h2>본인인증</h2>\r\n                      </Col>\r\n\r\n                      <Col className=\"mb-15\" span={24}>\r\n                        <Steps progressDot current={2}>\r\n                          <Step title=\"1단계\" description=\"\" />\r\n                          <Step title=\"2단계\" subTitle=\"\" description=\"\" />\r\n                          <Step title=\"3단계\" description=\"\" />\r\n                        </Steps>\r\n                      </Col>\r\n\r\n                      <Col className=\" mb-15\" span={24}>\r\n                        <h3>마지막으로 본인 인증을 완료해주세요!</h3>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Divider />\r\n\r\n                    <Form\r\n                      // {...layout}\r\n                      name=\"basic\"\r\n                      initialValues={{ remember: true }}\r\n                      onFinish={this.onFinish}\r\n                      onFinishFailed={onFinishFailed}\r\n                    >\r\n                      <Row>\r\n                        <Col span={24} className=\"text-left\">\r\n                        이름\r\n                        </Col>\r\n                        <Col className=\"\" span={24}>\r\n                          <Form.Item\r\n                            label=\"\"\r\n                            name=\"name\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Please input your Name!\",\r\n                              },\r\n                            ]}\r\n                            value={mem_name}\r\n                            onChange={(e) =>\r\n                              this.setState({ mem_name: e.target.value })\r\n                            }\r\n                          >\r\n                            <Input placeholder=\"이모아 \" />\r\n                          </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col span={24} className=\"text-left\">\r\n                        휴대폰 번호\r\n                        </Col>\r\n                        <Col className=\"\" span={17}>\r\n                          <Form.Item\r\n                            label=\"\"\r\n                            name=\"mobile_no\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Please input your Mobile no!\",\r\n                              },\r\n                            ]}\r\n                            value={mobile_no}\r\n                            onChange={(e) =>\r\n                              this.setState({ mobile_no: e.target.value })\r\n                            }\r\n                          >\r\n                            <InputNumber\r\n                              style={{ width: \"100%\" }}\r\n                              placeholder=\"010-1234-5678\"\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col span={7}>\r\n                          <Button\r\n                            loading={verificationCodeLoading}\r\n                            className=\"theme-btn\"\r\n                            type=\"primary\"\r\n                            onClick={this.getVerificationCode}\r\n                          >\r\n                            인증번호 받기\r\n                          </Button>\r\n                        </Col>\r\n\r\n                        {this.state.showVerification ? (\r\n                          <Col className=\"\" span={24}>\r\n                            <Col span={24} className=\"text-left\">\r\n                            인증번호\r\n                            </Col>\r\n                            <Form.Item\r\n                              label=\"\"\r\n                              name=\"verification_code\"\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message:\r\n                                    \"Please input your Verificartion Code!\",\r\n                                },\r\n                              ]}\r\n                            >\r\n                              <Input placeholder=\"23456\" />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        ) : (\r\n                            \"\"\r\n                          )}\r\n\r\n                        <Col span={24} className=\"mb-15 text-left\">\r\n                          <Form.Item>\r\n                            <Button\r\n                              loading={loading}\r\n                              disabled={!this.state.showVerification}\r\n                              className=\"theme-btn\"\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              style={{ width: \"100%\" }}\r\n                            >\r\n                              인증하기\r\n                            </Button>\r\n                          </Form.Item>\r\n                        </Col>\r\n\r\n                        {/* <Col span={24} className=\"mb-15 text-left\">\r\n                                                    <Form.Item >\r\n                                                        <Button onClick={this.noRegisteredModalvisible} className=\"theme-btn\" type=\"primary\" style={{ 'width': '100%' }}>\r\n                                                            Non Registered Modal\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n                                                </Col> */}\r\n                      </Row>{\" \"}\r\n                      {/* Form row end */}\r\n                    </Form>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 6 }}>\r\n                    {/* Right Side */}\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Modal\r\n                  visible={visible}\r\n                  title=\"Agree to register?\"\r\n                  onOk={this.handleOkMember}\r\n                  onCancel={this.handleCancel}\r\n                  footer={null}\r\n                  width={360}\r\n                >\r\n                  <Row className=\"text-left\">\r\n                    <p>\r\n                      Agree to register? <br />\r\n                      It will be registered as you agree\r\n                    </p>\r\n\r\n                    <Divider />\r\n\r\n                    <Space direction=\"vertical\" className=\"width100\">\r\n                      <Col span={24}>\r\n                        <Button\r\n                          className=\"width100 theme-btn \"\r\n                          key=\"submit\"\r\n                          type=\"default\"\r\n                          loading={loading}\r\n                          onClick={this.handleOkMember}\r\n                          size={\"large\"}\r\n                        >\r\n                          Yes I agree to proceed to next step\r\n                        </Button>\r\n                      </Col>\r\n\r\n                      <Col span={24}>\r\n                        <Button\r\n                          key=\"back\"\r\n                          className=\"width100\"\r\n                          onClick={this.handleCancel}\r\n                          size={\"large\"}\r\n                        >\r\n                          No I don’t agree\r\n                        </Button>\r\n                      </Col>\r\n                    </Space>\r\n                  </Row>\r\n                </Modal>\r\n\r\n                {/* non-sign up user pop up  */}\r\n                <Modal\r\n                  visible={noRegisteredModalvisible}\r\n                  title=\"Registration is done!\"\r\n                  onOk={this.handleOkNonMember}\r\n                  onCancel={this.handleCancel}\r\n                  footer={null}\r\n                  width={360}\r\n                >\r\n                  <Row className=\"text-left\">\r\n                    <p>\r\n                      The manager is on the way to help you! <br />\r\n                      We’ll contact you soon{\" \"}\r\n                    </p>\r\n                    <p>\r\n                      * If you sign up, you can check all the process in mypage!\r\n                      please sign up first{\" \"}\r\n                    </p>\r\n\r\n                    <Divider />\r\n\r\n                    <Space direction=\"vertical\" className=\"width100\">\r\n                      <Col span={24}>\r\n                        <Button\r\n                          className=\"width100 theme-btn \"\r\n                          key=\"submit\"\r\n                          type=\"default\"\r\n                          loading={loading}\r\n                          onClick={this.handleOkNonMember}\r\n                          size={\"large\"}\r\n                        >\r\n                          Yes I check. Go to main page\r\n                        </Button>\r\n                      </Col>\r\n\r\n                      <Col span={24}>\r\n                        <Button\r\n                          key=\"back\"\r\n                          className=\"width100\"\r\n                          onClick={this.handleCancel}\r\n                          size={\"large\"}\r\n                        >\r\n                          No I don’t agree\r\n                        </Button>\r\n                      </Col>\r\n                    </Space>\r\n                  </Row>\r\n                </Modal>\r\n              </Content>\r\n            </Space>\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterPropertyStepThree;\r\n","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ResetPasswordAfterLogin\\ResetPasswordAfterLogin.js",["466","467","468","469","470","471","472","473"],"import React, { Component } from 'react';\r\nimport WithAuthHeader from '../WithAuthHeaderFooter/WithAuthHeader';\r\nimport {\r\n    Layout, Form, Input, Button, Menu, Divider, Row, Col, Space, Steps,  message,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport '../css/global.css'\r\nimport { Redirect } from 'react-router-dom';\r\nimport BaseUrl from '../services/axios-url';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport Cookies from 'universal-cookie';\r\nimport coloredLogo from '../images/logo-colored.png';\r\n\r\nconst axios = require('axios');\r\nconst { Content } = Layout;\r\n\r\n\r\n\r\nclass ResetPasswordAfterLogin extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        visible: false,\r\n        redirectToLoginPage: false\r\n    }\r\n\r\n    onFinish = values => {\r\n        console.log('Success:', values);\r\n\r\n        this.setState({ loading: true })\r\n\r\n        const cookies = new Cookies();\r\n        var cookieName = btoa('zeeps');\r\n        // console.log('encodedStringBtoA', cookieName);\r\n        var finalCookieName = '';\r\n        finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n        var encodedStringBtoA = btoa('authorized');\r\n        // console.log('encodedStringBtoA', encodedStringBtoA);\r\n        var finalCookieValue = '';\r\n        finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n        // already logged in user\r\n        var LoggedInUserId = '';\r\n        if (cookies.get(finalCookieName) == finalCookieValue) {\r\n            if (cookies.get('UU')) {\r\n                var LoggedInUserId = cookies.get('UU');\r\n            } else {\r\n                message.error('Unauthenticated User!!')\r\n                return;\r\n            }\r\n        }\r\n        // Not logged in user\r\n        else if (cookies.get(finalCookieName) == undefined || cookies.get(finalCookieName) == 'undefined') {\r\n            message.error('Please login to change password!!')\r\n            return;\r\n        }\r\n        // Not a normal user\r\n        else {\r\n            message.error('Please login first!')\r\n            return;\r\n        }\r\n\r\n        axios.post(BaseUrl + \"/memberapi/ChangePassword\", {\r\n            \"id\": LoggedInUserId, \r\n            \"oldpassword\": values.old_password, \r\n            \"password\": values.password\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status == 1) {\r\n\r\n                    message.success('Your password is successfully changed. Please login again to start your session!')\r\n\r\n                    cookies.remove(finalCookieName)\r\n                    cookies.remove('UU')\r\n                    cookies.remove('UN')\r\n\r\n                    this.setState({ redirectToLoginPage: true })\r\n\r\n                }\r\n                else {\r\n                    message.error(res.data.message);\r\n                }\r\n                this.setState({ loading: false })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n                this.setState({ loading: false })\r\n            })\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        if(this.state.redirectToLoginPage){\r\n            return <Redirect \r\n                to={{ \r\n                    pathname: '/login'\r\n                 }}\r\n            />\r\n        }\r\n\r\n        const { loading } = this.state;\r\n\r\n        const onFinishFailed = errorInfo => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n\r\n        return (\r\n            <Layout className=\"register-property-layout\">\r\n\r\n                <WithAuthHeader />\r\n\r\n                <Content>\r\n\r\n                    <Layout className=\"site-layout-background\" >\r\n                        <Space direction=\"vertical\" size={'large'}>\r\n                            <Content className=\"content-padding\" >\r\n                                <Row className=\"\">\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} >\r\n                                        {/* Left Side */}\r\n                                    </Col>\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} className=\"text-center\" >\r\n                                        <Row>\r\n                                            <Col className=\" mb-15\" span={24} >\r\n                                            <img src={coloredLogo} width=\"90\" />\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={24}>\r\n                                              \r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Divider />\r\n\r\n                                        <Form\r\n                                            // {...layout}\r\n                                            name=\"basic\"\r\n                                            initialValues={{ remember: true }}\r\n                                            onFinish={this.onFinish}\r\n                                            onFinishFailed={onFinishFailed}\r\n                                        >\r\n                                            <Form.Item\r\n                                                label=\"\"\r\n                                                name=\"old_password\"\r\n                                                rules={[{ required: true, message: 'Please input your old password!' }]}\r\n                                            >\r\n                                                <Input.Password placeholder=\"기존 비밀번호\" />\r\n                                            </Form.Item>\r\n\r\n                                            <Form.Item\r\n                                                label=\"\"\r\n                                                name=\"password\"\r\n                                                rules={[{ required: true, message: 'Please input your new password!' }]}\r\n                                            >\r\n                                                <Input.Password placeholder=\"새 비밀번호\" />\r\n                                            </Form.Item>\r\n\r\n                                            <Form.Item\r\n                                                name=\"confirm\"\r\n                                                label=\"\"\r\n                                                dependencies={['password']}\r\n                                                hasFeedback\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Please confirm your new password!',\r\n                                                    },\r\n                                                    ({ getFieldValue }) => ({\r\n                                                        validator(rule, value) {\r\n                                                            if (!value || getFieldValue('password') === value) {\r\n                                                                return Promise.resolve();\r\n                                                            }\r\n                                                            return Promise.reject('The two passwords that you entered do not match!');\r\n                                                        },\r\n                                                    }),\r\n                                                ]}\r\n                                            >\r\n                                                <Input.Password placeholder=\"새 암호를 확인합니다\" />\r\n                                            </Form.Item>\r\n\r\n                                            <Button loading={loading} block type=\"primary\" htmlType=\"submit\" className=\"login-btn-bg\">\r\n                                            제출\r\n                                            </Button>\r\n\r\n                                        </Form>\r\n\r\n                                    </Col>\r\n\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 6 }} >\r\n                                        {/* Right Side */}\r\n                                    </Col>\r\n\r\n\r\n\r\n                                </Row>\r\n\r\n\r\n\r\n                            </Content>\r\n                        </Space>\r\n                    </Layout>\r\n                </Content>\r\n\r\n                <WithAuthFooter />\r\n\r\n            </Layout >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPasswordAfterLogin;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\PropertyList.js",["474","475","476","477","478","479","480","481","482","483","484","485","486","487","488"],"import React, { Component } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Button, Menu, Divider, DatePicker, Table, Select, message\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport PropertySettingsAside from './property-settings-aside';\r\nimport ReactExport from \"react-export-excel\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Content } = Layout;\r\n\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\n\r\nconst onFinish = values => {\r\n  console.log('Success:', values);\r\n};\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: '번호',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '집 정보',\r\n    dataIndex: 'address',\r\n  },\r\n  {\r\n    title: '이름',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '회원유무',\r\n    dataIndex: 'member_status',\r\n  },\r\n  {\r\n    title: '담당자',\r\n    dataIndex: 'manager',\r\n  },\r\n  {\r\n    title: '상태',\r\n    dataIndex: 'status',\r\n  },\r\n  {\r\n    title: '담당자',\r\n    dataIndex: 'assign_manager',\r\n  },\r\n  {\r\n    title: '정보수정',\r\n    dataIndex: 'setting',\r\n    // render: () => <Button className=\"theme-btn-default \" >\r\n    //   <Link to=\"#\" >\r\n    //     Edit\r\n    //   </Link>\r\n    // </Button>\r\n  },\r\n\r\n];\r\n// const data = [\r\n//   {\r\n//     key: '1',\r\n//     number: '1',\r\n//     address: 'Lorem ipsum',\r\n//     name: 'Some name',\r\n//     member_status: 'member',\r\n//     manager: 'lorem ipsum',\r\n//     status: 'Active',\r\n//     assign_manager: 'here',\r\n//     setting: 'edit'\r\n//   },\r\n//   {\r\n//     key: '2',\r\n//     number: '2',\r\n//     address: 'Lorem ipsum',\r\n//     name: 'Some name',\r\n//     member_status: 'member',\r\n//     manager: 'lorem ipsum',\r\n//     status: 'Active',\r\n//     assign_manager: 'here',\r\n//     setting: 'Edit'\r\n//   }\r\n// ];\r\n\r\n// rowSelection object indicates the need for row selection\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\nfunction handleSelectChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\n\r\nclass PropertyList extends Component {\r\n\r\n  state = {\r\n    allData: '',\r\n    totalRecords: 0,\r\n    selectedRowKeys: [],\r\n    dataForExcel: [],\r\n    beginExcelDownload: false,\r\n    finalExcelData: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetAllProperties')\r\n      .then((response) => {\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          var AllData = response.data.data;\r\n\r\n          console.log(AllData)\r\n\r\n          this.setState({ totalRecords: AllData.length })\r\n          var finalData = [];\r\n\r\n          for (var i = 0; i < AllData.length; i++) {\r\n            finalData[i] = {\r\n              key: AllData[i].id,\r\n              id: AllData[i].id,\r\n              number: i + 1,\r\n              address: AllData[i].address,\r\n              name: AllData[i].name,\r\n              member_status: AllData[i].createdbytype,\r\n              manager: AllData[i].manager,\r\n              status: AllData[i].status ? 'Active' : 'Inactive',\r\n              assign_manager: <Button className=\"theme-btn-default \">\r\n                <Link to={'/assign-manager-to-property/' + AllData[i].id} >\r\n                양수인\r\n              </Link>\r\n              </Button>,\r\n              setting: <Button className=\"theme-btn-default \">\r\n                <Link to={'/admin-get-single-property/' + AllData[i].id}>\r\n                환경\r\n                          </Link>\r\n              </Button>\r\n            };\r\n          }\r\n          // console.log(finalData)\r\n          this.setState({\r\n            allData: finalData,\r\n            dataForExcel: response.data.data\r\n          })\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n      })\r\n  }\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({\r\n      selectedRowKeys\r\n    }, () => {\r\n      console.log(this.state.selectedRowKeys)\r\n\r\n    });\r\n\r\n  };\r\n\r\n  deleteRecords = () => {\r\n\r\n    this.setState({ delloading: true });\r\n    axios.post(BaseUrl + \"/adminapi/DeletePropertyDetail\", {\r\n      id: this.state.selectedRowKeys\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n        this.setState({ allData: '' })\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n\r\n          axios\r\n            .get(BaseUrl + '/adminapi/GetAllProperties')\r\n            .then((response) => {\r\n\r\n              if (response.data.status == 1 || response.data.status == '1') {\r\n                // console.log(\"dddd: \", data.data.id);\r\n\r\n                var AllData = response.data.data;\r\n\r\n                console.log(AllData)\r\n\r\n                this.setState({ totalRecords: AllData.length })\r\n                var finalData = [];\r\n\r\n                for (var i = 0; i < AllData.length; i++) {\r\n                  finalData[i] = {\r\n                    key: AllData[i].id,\r\n                    id: AllData[i].id,\r\n                    number: i + 1,\r\n                    address: AllData[i].address,\r\n                    name: AllData[i].name,\r\n                    member_status: AllData[i].createdbytype,\r\n                    manager: AllData[i].manager,\r\n                    status: AllData[i].status ? 'Active' : 'Inactive',\r\n                    assign_manager: <Button className=\"theme-btn-default \">\r\n                      <Link to={'/assign-manager-to-property/' + AllData[i].id} >\r\n                        Assign\r\n                      </Link>\r\n                    </Button>,\r\n                    setting: <Button className=\"theme-btn-default \">\r\n                      <Link to={'/admin-get-single-property/' + AllData[i].id}>\r\n                        Setting\r\n                          </Link>\r\n                    </Button>\r\n                  };\r\n                }\r\n                // console.log(finalData)\r\n                this.setState({\r\n                  allData: finalData,\r\n                  delloading: false,\r\n                  dataForExcel: response.data.data\r\n                })\r\n\r\n              } else {\r\n                this.setState({ delloading: false });\r\n                message.error('Sorry!! Unable to fetch data from server..');\r\n              }\r\n\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              message.error('Sorry!! Something went wrong');\r\n              this.setState({ delloading: false });\r\n            })\r\n\r\n\r\n        } else {\r\n          this.setState({ delloading: false });\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ delloading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n  }\r\n\r\n  downloadExcel = () => {\r\n    var selected = [];\r\n    var allData = [];\r\n    var finalArray = [];\r\n    selected = this.state.selectedRowKeys;\r\n    allData = this.state.dataForExcel;\r\n    console.log(allData);\r\n\r\n    for (var i = 0; i < selected.length; i++) {\r\n      // console.log(selected[i])\r\n      for (var j = 0; j < allData.length; j++) {\r\n        if (selected[i] == allData[j].id) {\r\n          finalArray[i] = {\r\n            number: i + 1,\r\n            address: allData[i].address,\r\n            name: allData[i].name,\r\n            member_status: allData[i].createdbytype,\r\n            manager: allData[i].manager,\r\n            status: allData[i].status ? 'Active' : 'Inactive',\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      finalExcelData: finalArray,\r\n      beginExcelDownload: true\r\n    }, () => { })\r\n\r\n    console.log(finalArray);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { loading, selectedRowKeys, delloading } = this.state;\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        {\r\n          this.state.beginExcelDownload ? <React.Fragment>\r\n            {this.setState({ beginExcelDownload: false }), () => {}}\r\n            <ExcelFile\r\n              filename=\"properties-list\"\r\n              hideElement={true}\r\n            > \r\n              <ExcelSheet data={this.state.finalExcelData} name=\"Properties\">\r\n                <ExcelColumn label=\"S.no\" value=\"number\" />\r\n                <ExcelColumn label=\"Address\" value=\"address\" />\r\n                <ExcelColumn label=\"Name\" value=\"name\" />\r\n                <ExcelColumn label=\"Member status\" value=\"member_status\" />\r\n                <ExcelColumn label=\"Manager\" value=\"manager\" />\r\n                <ExcelColumn label=\"Status\" value=\"status\"\r\n                />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n          </React.Fragment>\r\n            : ''\r\n        }\r\n\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < PropertySettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>부동산 리스트 </p>\r\n                    {/* <p>Property List</p> */}\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" >\r\n                      <Link to=\"/admin-register-property\">\r\n                      부동산 등록\r\n                        </Link>\r\n                    </Button>\r\n\r\n                    {/*  \r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}  >\r\n                    <h3>전체 {this.state.totalRecords} 개</h3>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Table\r\n                      // rowSelection={{\r\n                      //   type: 'checkbox',\r\n                      //   ...rowSelection,\r\n                      // }}\r\n                      rowSelection={rowSelection}\r\n                      columns={columns}\r\n                      dataSource={this.state.allData}\r\n                    />\r\n\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Button loading={delloading} onClick={this.deleteRecords} className=\"theme-btn\" type=\"primary\" shape=\"round\">선택 삭제</Button>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Button onClick={this.downloadExcel} className=\"theme-btn float-right\" type=\"primary\" shape=\"round\" >엑셀 다운로드 </Button>\r\n                  </Col>\r\n\r\n                </Row>\r\n              </Form>\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default PropertyList;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\ManagingManager.js",["489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, DatePicker, Space, Table, message\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport MemberSettingsAside from './member-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { offset: 0, span: 23 },\r\n}\r\n\r\nconst onFinish = values => {\r\n  console.log('Success:', values);\r\n\r\n  const data = new FormData()\r\n  data.append('email', values.email)\r\n  data.append('password', values.password)\r\n\r\n  // axios.post(BaseUrl+\"collectionImageUpload\", data, { \r\n  //     // receive two    parameter endpoint url ,form data\r\n  // })\r\n  //  .then(res => { \r\n  //      console.log(res.data)\r\n  //      if(res.data.responseCode === 200){\r\n  //          this.setState({ collectionImage: res.data.data.image })\r\n  //      }\r\n  //  })\r\n};\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: '번호',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '담당자',\r\n    dataIndex: 'manager',\r\n  },\r\n  {\r\n    title: '담당중인 집',\r\n    dataIndex: 'cases',\r\n  },\r\n  // {\r\n  //   title: 'Withdrawal date ',\r\n  //   dataIndex: 'withdrawal_date',\r\n  // },\r\n\r\n];\r\n// const data = [\r\n//   {\r\n//     key: '1',\r\n//     number: '1',\r\n//     manager: 'someone',\r\n//     cases: '01'\r\n//   },\r\n//   {\r\n//     key: '2',\r\n//     number: '2',\r\n//     manager: 'someone',\r\n//     cases: '01'\r\n//   },\r\n// ];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\n\r\n\r\nclass ManagingManager extends Component {\r\n\r\n  state = {\r\n    allData: '',\r\n    minDate: '',\r\n    maxDate: '',\r\n    searchData: '',\r\n    selectedRowKeys: [],\r\n    loading: false,\r\n    delloading: false,\r\n  }\r\n\r\n  onDateChange = (date, dateString) => {\r\n    // console.log(dateString[0]);\r\n    this.setState({\r\n      minDate: dateString[0],\r\n      maxDate: dateString[1]\r\n    })\r\n\r\n  }\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({\r\n      selectedRowKeys\r\n    }, () => {\r\n      // console.log(this.state.selectedRowKeys)\r\n\r\n    });\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetAllManager')\r\n      .then((response) => {\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          var AllData = response.data.data;\r\n\r\n          console.log(AllData)\r\n\r\n          var finalData = [];\r\n\r\n          for (var i = 0; i < AllData.length; i++) {\r\n            finalData[i] = {\r\n              key: AllData[i].roleId,\r\n              id: AllData[i].roleId,\r\n              number: i + 1,\r\n              manager: AllData[i].name,\r\n              cases: AllData[i].propertyCount,\r\n              // setting: <Button>Setting</Button>\r\n            };\r\n          }\r\n\r\n          // console.log(finalData)\r\n          this.setState({\r\n            allData: finalData\r\n          })\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n      })\r\n  }\r\n\r\n  onFinish = values => {\r\n    this.setState({ loading: true });\r\n    // console.log('Success:', values);\r\n    axios.post(BaseUrl + \"/adminapi/searchManagerDetail\", {\r\n      \"name\": values.search_keyword,\r\n      // \"minDate\": this.state.minDate,\r\n      // \"maxDate\": this.state.maxDate\r\n    })\r\n      .then(res => {\r\n        this.setState({ searchData: '' })\r\n        // console.log(res)\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n          var searchData = res.data.data;\r\n\r\n          console.log(searchData.length)\r\n\r\n          var searchDataResult = [];\r\n\r\n          for (var i = 0; i < searchData.length; i++) {\r\n            searchDataResult[i] = {\r\n              key: searchData[i].roleId,\r\n              id: searchData[i].roleId,\r\n              number: i + 1,\r\n              manager: searchData[i].name,\r\n              cases: searchData[i].propertyCount,\r\n            };\r\n          }\r\n\r\n          console.log(searchDataResult)\r\n          this.setState({\r\n            searchData: searchDataResult,\r\n            loading: false\r\n          })\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n\r\n  };\r\n\r\n  deleteRecords = () => {\r\n\r\n    this.setState({ delloading: true });\r\n    axios.post(BaseUrl + \"/adminapi/DeleteManagerDetail\", {\r\n      roleId: this.state.selectedRowKeys\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n        this.setState({ allData: '' })\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n\r\n          axios\r\n            .get(BaseUrl + '/adminapi/GetAllManager')\r\n            .then((response) => {\r\n\r\n              if (response.data.status == 1 || response.data.status == '1') {\r\n                // console.log(\"dddd: \", data.data.id);\r\n\r\n                var AllData = response.data.data;\r\n\r\n                // console.log(AllData)\r\n\r\n                var finalData = [];\r\n\r\n                for (var i = 0; i < AllData.length; i++) {\r\n                  finalData[i] = {\r\n                    key: AllData[i].roleId,\r\n                    id: AllData[i].roleId,\r\n                    number: i + 1,\r\n                    manager: AllData[i].name,\r\n                    cases: '01',\r\n                    // setting: <Button>Setting</Button>\r\n                  };\r\n                }\r\n\r\n                // console.log(finalData)\r\n                this.setState({\r\n                  allData: finalData,\r\n                  delloading: false\r\n                })\r\n\r\n                message.success('Success!! Information deleted successfully');\r\n\r\n              } else {\r\n                this.setState({ delloading: false });\r\n                message.error('Sorry!! Unable to fetch data from server..');\r\n              }\r\n\r\n            })\r\n            .catch((error) => {\r\n              this.setState({ delloading: false });\r\n              console.log(error);\r\n              message.error('Sorry!! Something went wrong');\r\n            })\r\n\r\n\r\n        } else {\r\n          this.setState({ delloading: false });\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ delloading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    const { loading, selectedRowKeys, delloading } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n\r\n    console.log(this.state.searchData)\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < MemberSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    {/* <p>Managing manager </p> */}\r\n                    <p>담당자 관리 </p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" >\r\n                      <Link to=\"/register-manager\">\r\n                        담당자 등록\r\n                        </Link>\r\n                    </Button>\r\n\r\n                    {/* \r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Divider />\r\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    <p>전체 1292개</p>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Table\r\n                      rowSelection={{\r\n                        type: 'checkbox',\r\n                        ...rowSelection,\r\n                      }}\r\n                      columns={columns}\r\n                      dataSource={this.state.allData}\r\n                    />\r\n\r\n                    <Button loading={delloading} onClick={this.deleteRecords} type=\"primary\" className=\"theme-btn\" shape=\"round\">\r\n                      선택 삭제\r\n                    </Button>\r\n                  </Col>\r\n\r\n\r\n                  <Divider />\r\n                  <Space />\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}  >\r\n                    {/* <h3>Search manager </h3> */}\r\n                    <h3>담당자 검색 </h3>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"검색\"\r\n                      name=\"search_keyword\"\r\n                      rules={[{ required: true, message: 'Please input your keyword!' }]}\r\n                    >\r\n                      <Input placeholder=\"검색어를 입력해주세요.\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  {/* <Col xs={{ span: 24 }} sm={{ span:24 }} lg={{ span:24 }} >\r\n                      <Form.Item \r\n                        {...compLayout}\r\n                        label=\"Withdrawal date\" \r\n                        name=\"withdrawal_date\"\r\n                        rules={[{ required: true, message: 'Please select date!' }]}\r\n                      >\r\n                        <Space direction=\"vertical\" size={12}>\r\n                          <RangePicker />\r\n                        </Space>\r\n                      </Form.Item>\r\n                    </Col> */}\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Button loading={loading} type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\">\r\n                      검색\r\n                      </Button>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  {/* <h3>Result</h3> */}\r\n                  <h3>검색 2개 / 전체 2개</h3>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Table\r\n                      // rowSelection={{\r\n                      //   type: 'checkbox',\r\n                      //   ...rowSelection,\r\n                      // }}\r\n                      columns={columns}\r\n                      dataSource={this.state.searchData}\r\n                    />\r\n\r\n                  </Col>\r\n\r\n                </Row>\r\n              </Form>\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManagingManager;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\MemberSettings.js",["509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, DatePicker, Space, Table, Radio, message\r\n} from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport MemberSettingsAside from './member-settings-aside';\r\nimport ReactExport from \"react-export-excel\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 10 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n}\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: '번호',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '이메일',\r\n    dataIndex: 'email',\r\n  },\r\n  {\r\n    title: '이름',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '핸드폰 번호 ',\r\n    dataIndex: 'mobile',\r\n  },\r\n  {\r\n    title: '회원 가입일',\r\n    dataIndex: 'sign_up_date',\r\n  },\r\n  {\r\n    title: '최종 로그인',\r\n    dataIndex: 'last_login',\r\n  },\r\n  {\r\n    title: '정보수정',\r\n    dataIndex: 'setting',\r\n  },\r\n\r\n];\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    number: '1',\r\n    email: 'someone@gmail.com',\r\n    name: 'someone',\r\n    mobile: '123456789',\r\n    sign_up_date: '01-01-2020',\r\n    last_login: '20-01-2020',\r\n    setting: 'setting'\r\n  },\r\n  {\r\n    key: '2',\r\n    number: '2',\r\n    email: 'someone@gmail.com',\r\n    name: 'someone',\r\n    mobile: '123456789',\r\n    sign_up_date: '01-01-2020',\r\n    last_login: '20-01-2020',\r\n    setting: 'setting'\r\n  },\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\n// const rowSelection = {\r\n//   onChange: (selectedRowKeys, selectedRows) => {\r\n//     console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n//   },\r\n//   getCheckboxProps: record => ({\r\n//     disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n//     name: record.name,\r\n//   }),\r\n// };\r\n\r\n\r\nclass MemberSettings extends Component {\r\n\r\n  state = {\r\n    allData: '',\r\n    minDate: '',\r\n    maxDate: '',\r\n    selectedRowKeys: [],\r\n    loading: false,\r\n    delloading: false,\r\n    dataForExcel: [],\r\n    beginExcelDownload: false,\r\n    finalExcelData: []\r\n  }\r\n\r\n  // rowSelection = selectedRowKeys => {\r\n  //   // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n  //   this.setState({\r\n  //      selectedRowKeys: selectedRowKeys \r\n  //   }, () => {\r\n\r\n  //     console.log(this.state.selectedRowKeys)\r\n  //   });\r\n\r\n  // };\r\n\r\n  onDateChange = (date, dateString) => {\r\n    // console.log(dateString[0]);\r\n    this.setState({\r\n      minDate: dateString[0],\r\n      maxDate: dateString[1]\r\n    })\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetAllMembers')\r\n      .then((response) => {\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          var AllData = response.data.data;\r\n\r\n          console.log(AllData)\r\n          this.setState({ dataForExcel: response.data.data })\r\n\r\n          var finalData = [];\r\n\r\n          for (var i = 0; i < AllData.length; i++) {\r\n            finalData[i] = {\r\n              key: AllData[i].id,\r\n              id: AllData[i].id,\r\n              number: i + 1,\r\n              email: AllData[i].email,\r\n              name: AllData[i].name,\r\n              mobile: AllData[i].mobile,\r\n              sign_up_date: AllData[i].signupdate,\r\n              last_login: AllData[i].lastlogindate,\r\n              setting: <Button> <Link to={'edit-member/'+AllData[i].id}>환경</Link></Button>\r\n            };\r\n          }\r\n\r\n          // console.log(finalData)\r\n          this.setState({\r\n            allData: finalData\r\n          })\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n      })\r\n  }\r\n\r\n  onFinish = values => {\r\n    this.setState({ loading: true });\r\n    // console.log('Success:', values);\r\n    axios.post(BaseUrl + \"/adminapi/SeachMemberDetail\", {\r\n      \"name\": values.search_keyword,\r\n      \"minDate\": this.state.minDate,\r\n      \"maxDate\": this.state.maxDate\r\n    })\r\n      .then(res => {\r\n        this.setState({ allData: '' })\r\n        console.log(res)\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n          var AllData = res.data.data;\r\n\r\n          // console.log(AllData)\r\n\r\n          var finalData = [];\r\n\r\n          for (var i = 0; i < AllData.length; i++) {\r\n            finalData[i] = {\r\n              key: AllData[i].id,\r\n              id: AllData[i].id,\r\n              number: i + 1,\r\n              email: AllData[i].email,\r\n              name: AllData[i].name,\r\n              mobile: AllData[i].mobile,\r\n              sign_up_date: AllData[i].signupdate,\r\n              last_login: AllData[i].lastlogindate,\r\n              setting: <Button>Setting</Button>\r\n            };\r\n          }\r\n\r\n          // console.log(finalData)\r\n          this.setState({\r\n            allData: finalData,\r\n            loading: false\r\n          })\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n\r\n  };\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({\r\n      selectedRowKeys\r\n    }, () => {\r\n      console.log(this.state.selectedRowKeys)\r\n\r\n    });\r\n\r\n  };\r\n\r\n\r\n  deleteRecords = () => {\r\n\r\n    this.setState({ delloading: true });\r\n    axios.post(BaseUrl + \"/adminapi/DeleteMemberDetail\", {\r\n      id: this.state.selectedRowKeys\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n        this.setState({ allData: '' })\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n\r\n          axios\r\n            .get(BaseUrl + '/adminapi/GetAllMembers')\r\n            .then((response) => {\r\n\r\n              if (response.data.status == 1 || response.data.status == '1') {\r\n                // console.log(\"dddd: \", data.data.id);\r\n\r\n                var AllData = response.data.data;\r\n\r\n                // console.log(AllData)\r\n\r\n                var finalData = [];\r\n\r\n                for (var i = 0; i < AllData.length; i++) {\r\n                  finalData[i] = {\r\n                    key: AllData[i].id,\r\n                    id: AllData[i].id,\r\n                    number: i + 1,\r\n                    email: AllData[i].email,\r\n                    name: AllData[i].name,\r\n                    mobile: AllData[i].mobile,\r\n                    sign_up_date: AllData[i].signupdate,\r\n                    last_login: AllData[i].lastlogindate,\r\n                    setting: <Button>Setting</Button>\r\n                  };\r\n                }\r\n\r\n                // console.log(finalData)\r\n                this.setState({\r\n                  allData: finalData,\r\n                  delloading: false\r\n                })\r\n\r\n                message.success('Success!! Information deleted successfully');\r\n\r\n              } else {\r\n                this.setState({ delloading: false });\r\n                message.error('Sorry!! Unable to fetch data from server..');\r\n              }\r\n\r\n            })\r\n            .catch((error) => {\r\n              this.setState({ delloading: false });\r\n              console.log(error);\r\n              message.error('Sorry!! Something went wrong');\r\n            })\r\n\r\n\r\n        } else {\r\n          this.setState({ delloading: false });\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ delloading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n  }\r\n\r\n  downloadExcel = () => {\r\n    var selected = [];\r\n    var allData = [];\r\n    var finalArray = [];\r\n    selected = this.state.selectedRowKeys;\r\n    allData = this.state.dataForExcel;\r\n    console.log(allData);\r\n\r\n    for (var i = 0; i < selected.length; i++) {\r\n      // console.log(selected[i])\r\n      for (var j = 0; j < allData.length; j++) {\r\n        if (selected[i] == allData[j].id) {\r\n          finalArray[i] = {\r\n            key: allData[j].id,\r\n            id: allData[j].id,\r\n            number: i + 1,\r\n            email: allData[j].email,\r\n            name: allData[j].name,\r\n            mobile: allData[j].mobile,\r\n            sign_up_date: allData[j].signupdate,\r\n            last_login: allData[j].lastlogindate,\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      finalExcelData: finalArray,\r\n      beginExcelDownload: true\r\n    }, () => { })\r\n\r\n\r\n\r\n    console.log(finalArray);\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state.selectedRowKeys)\r\n    const { loading, selectedRowKeys, delloading } = this.state;\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n\r\n    return (\r\n      <Layout>\r\n        {\r\n          this.state.beginExcelDownload ? <React.Fragment>\r\n            {this.setState({ beginExcelDownload: false })}\r\n            <ExcelFile\r\n              filename=\"members-list\"\r\n              hideElement={true}\r\n            >\r\n              <ExcelSheet data={this.state.finalExcelData} name=\"Members\">\r\n                <ExcelColumn label=\"S.no\" value=\"number\" />\r\n                <ExcelColumn label=\"Email\" value=\"email\" />\r\n                <ExcelColumn label=\"Name\" value=\"name\" />\r\n                <ExcelColumn label=\"Mobile\" value=\"mobile\" />\r\n                <ExcelColumn label=\"Sign Up Date\" value=\"sign_up_date\" />\r\n                <ExcelColumn label=\"Last Login\" value=\"last_login\"\r\n                />\r\n              </ExcelSheet>\r\n            </ExcelFile>\r\n\r\n          </React.Fragment>\r\n            : ''\r\n        }\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < MemberSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    {/* <p>Member list  </p> */}\r\n                    회원 리스트\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n\r\n                    <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\">\r\n                      <Link to=\"/register-member\" >\r\n\r\n                        회원 등록\r\n                        </Link>\r\n                    </Button>\r\n\r\n                  </Col>\r\n\r\n                  <Divider />\r\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    <p>회원 검색 </p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n\r\n                  </Col>\r\n\r\n\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"검색\"\r\n                      name=\"search_keyword\"\r\n                      rules={[{ required: true, message: 'Please input your keyword!' }]}\r\n                    >\r\n                      <Input placeholder=\"검색어를 입력해주세요.\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"회원 가입일\"\r\n                      name=\"sign_up_date\"\r\n                      rules={[{ required: true, message: 'Please select date!' }]}\r\n                    >\r\n                      {/* <Space direction=\"vertical\" size={12}> */}\r\n                      <RangePicker onChange={this.onDateChange} />\r\n                      {/* </Space> */}\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    {/* <p>Member list  </p> */}\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n                    <Form.Item {...compLayout}>\r\n                      <Button loading={loading} type=\"primary\" className=\"theme-btn float-right\" htmlType=\"submit\" shape=\"round\">\r\n                        검색\r\n                        </Button>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <p>검색 2개 / 전체 2개</p>\r\n                  \r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Table\r\n                      // rowSelection={{\r\n                      //   type: 'checkbox',\r\n                      //   ...rowSelection,\r\n                      // }}\r\n                      rowSelection={rowSelection}\r\n                      columns={columns}\r\n                      dataSource={this.state.allData}\r\n                    />\r\n                  </Col>\r\n\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <Button loading={delloading} type=\"primary\" className=\"theme-btn \" shape=\"round\" onClick={this.deleteRecords}>\r\n                    기록 삭제\r\n                      </Button>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <Button type=\"primary\" onClick={this.downloadExcel} className=\"theme-btn float-right\" shape=\"round\">\r\n                    Excel 다운로드\r\n                      </Button>\r\n                  </Col>\r\n\r\n\r\n                </Row>\r\n\r\n\r\n              </Form>\r\n\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemberSettings;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\AssignManagerToProperty.js",["530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545"],"import React, { Component } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Divider, Space, Table, message\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport PropertySettingsAside from './property-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst fullLayout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { offset: 0, span: 24 },\r\n}\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: '번호',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '관리자 이름',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '모바일 번호',\r\n    dataIndex: 'mobile',\r\n  },\r\n  {\r\n    title: '사례',\r\n    dataIndex: 'cases',\r\n  },\r\n];\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    number: '1',\r\n    name: 'Some name',\r\n    mobile: '01111111',\r\n    cases: '01',\r\n  },\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\n\r\n\r\nclass AssignManagerToProperty extends Component {\r\n\r\n  state = {\r\n    allData: '',\r\n    searchData: '',\r\n    selectedRowKeys: '',\r\n    loading: false,\r\n    saveLoading: false,\r\n  }\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({\r\n      selectedRowKeys\r\n    }, () => {\r\n      console.log(this.state.selectedRowKeys)\r\n\r\n    });\r\n\r\n  };\r\n\r\n  onFinish = values => {\r\n    this.setState({ loading: true });\r\n    // console.log('Success:', values);\r\n    axios.post(BaseUrl + \"/adminapi/searchManagerDetail\", {\r\n      \"name\": values.search_keyword,\r\n    })\r\n      .then(res => {\r\n        this.setState({ searchData: '' })\r\n        // console.log(res)\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n          var searchData = res.data.data;\r\n\r\n          console.log(searchData)\r\n\r\n          var searchDataResult = [];\r\n\r\n          for (var i = 0; i < searchData.length; i++) {\r\n            searchDataResult[i] = {\r\n              key: searchData[i].roleId,\r\n              id: searchData[i].roleId,\r\n              number: i + 1,\r\n              name: searchData[i].name,\r\n              mobile: searchData[i].mobile,\r\n              cases: searchData[i].propertyCount,\r\n            };\r\n          }\r\n\r\n          // console.log(searchDataResult)\r\n          this.setState({\r\n            searchData: searchDataResult,\r\n            loading: false\r\n          })\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n\r\n  };\r\n\r\n  assignManager = () => {\r\n\r\n    this.setState({ saveLoading: true });\r\n\r\n    var propertyId = window.location.pathname.split(\"/\").pop();\r\n\r\n    axios.post(BaseUrl + \"/adminapi/AssignManager\", {\r\n      \"id\": propertyId,\r\n      \"roleId\": this.state.selectedRowKeys,\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n          message.success(res.data.message)\r\n          this.setState({ saveLoading: false })\r\n        } else {\r\n          message.error(res.data.message);\r\n          this.setState({ saveLoading: false })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ saveLoading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    var propertyId = window.location.pathname.split(\"/\").pop();\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetPropertyDetailById/' + propertyId)\r\n      .then((response) => {\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          var AllData = response.data.data;\r\n          console.log(AllData)\r\n\r\n          this.setState({\r\n            address: AllData.address,\r\n            property_name: AllData.name,\r\n          })\r\n\r\n        } else {\r\n          message.error(response.data.message);\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Server error');\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { loading, selectedRowKeys, address, property_name, saveLoading } = this.state;\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < PropertySettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n\r\n              <Row>\r\n\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                  <p>\r\n관리자 지정</p>\r\n                </Col>\r\n                <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                  <Button type=\"primary\" onClick={this.assignManager} className=\"theme-btn float-right\" shape=\"round\" loading={saveLoading} >\r\n                  저장\r\n                      </Button>\r\n\r\n                  {/* \r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                </Col>\r\n\r\n\r\n                <Divider />\r\n\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}  >\r\n                  <p>부동산 정보 </p>\r\n                </Col>\r\n\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                  <label> 주소: {address}</label>\r\n                </Col>\r\n\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                  <label> 이름: {property_name}</label>\r\n                </Col>\r\n\r\n              </Row>\r\n\r\n              <Divider />\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n\r\n                <Row>\r\n                  <Col span={24}>           \r\n                  관리자 지정\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"매니저\"\r\n                      name=\"search_keyword\"\r\n                      rules={[{ required: true, message: 'Please input your keyword!' }]}\r\n                    >\r\n                      <Input placeholder=\"이름 검색\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  {/* <Col xs={{ span: 24 }} sm={{ span:24 }} lg={{ span:24 }} >\r\n                      <Form.Item \r\n                        {...compLayout}\r\n                        label=\"Withdrawal date\" \r\n                        name=\"withdrawal_date\"\r\n                        rules={[{ required: true, message: 'Please select date!' }]}\r\n                      >\r\n                        <Space direction=\"vertical\" size={12}>\r\n                          <RangePicker />\r\n                        </Space>\r\n                      </Form.Item>\r\n                    </Col> */}\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Button loading={loading} htmlType=\"submit\" type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" >\r\n                    검색\r\n                      </Button>\r\n                  </Col>\r\n\r\n                </Row>\r\n              </Form>\r\n\r\n              <Row>\r\n                <h3>결과</h3>\r\n                <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                  <Table\r\n                    rowSelection={{\r\n                      type: 'radio',\r\n                      ...rowSelection,\r\n                    }}\r\n                    columns={columns}\r\n                    dataSource={this.state.searchData}\r\n                  />\r\n\r\n                </Col>\r\n              </Row>\r\n\r\n            </Content>\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignManagerToProperty;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\FaqSetting\\ManageFaq.js",["546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Button, Menu, Divider, DatePicker, Table, Select, message\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport FaqSettingsAside from './faq-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { offset: 0, span: 23 },\r\n}\r\nconst { Option } = Select;\r\n\r\nconst onFinish = values => {\r\n  console.log('Success:', values);\r\n\r\n  const data = new FormData()\r\n  data.append('email', values.email)\r\n  data.append('password', values.password)\r\n\r\n  // axios.post(BaseUrl+\"collectionImageUpload\", data, { \r\n  //     // receive two    parameter endpoint url ,form data\r\n  // })\r\n  //  .then(res => { \r\n  //      console.log(res.data)\r\n  //      if(res.data.responseCode === 200){\r\n  //          this.setState({ collectionImage: res.data.data.image })\r\n  //      }\r\n  //  })\r\n};\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: '번호',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '',\r\n    dataIndex: 'content',\r\n  },\r\n  {\r\n    title: '정보수정',\r\n    dataIndex: 'setting',\r\n  },\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\nfunction handleSelectChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\n\r\nclass ManageFaq extends Component {\r\n\r\n  state = {\r\n    allData: '',\r\n    selectedRowKeys: '',\r\n    delloading: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetAllFAQ')\r\n      .then((response) => {\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          var AllData = response.data.data;\r\n\r\n          // console.log(AllData)\r\n\r\n          var finalData = [];\r\n\r\n          for (var i = 0; i < AllData.length; i++) {\r\n            finalData[i] = {\r\n              key: AllData[i].id,\r\n              id: AllData[i].id,\r\n              number: i + 1,\r\n              content: AllData[i].question,\r\n              setting: <Button><Link to={\"edit-faq/\" + AllData[i].id}> 편집하다 </Link></Button>\r\n            };\r\n          }\r\n\r\n          // console.log(finalData)\r\n          this.setState({\r\n            allData: finalData\r\n          })\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n      })\r\n  }\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    // console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({\r\n      selectedRowKeys\r\n    }, () => {\r\n      console.log(this.state.selectedRowKeys)\r\n\r\n    });\r\n\r\n  };\r\n\r\n  deleteRecords = () => {\r\n\r\n    if( this.state.selectedRowKeys.length == 0 || this.state.selectedRowKeys == ''  ){\r\n      message.error('Please select any row first..')\r\n      return;\r\n    }\r\n\r\n    this.setState({ delloading: true });\r\n    axios.post(BaseUrl + \"/adminapi/DeleteFAQdetail\", {\r\n      ids: this.state.selectedRowKeys\r\n    })\r\n      .then(res => {\r\n        console.log(res)\r\n        this.setState({ allData: '' })\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n\r\n          axios\r\n            .get(BaseUrl + '/adminapi/GetAllFAQ')\r\n            .then((response) => {\r\n\r\n              if (response.data.status == 1 || response.data.status == '1') {\r\n                // console.log(\"dddd: \", data.data.id);\r\n\r\n                var AllData = response.data.data;\r\n\r\n                // console.log(AllData)\r\n\r\n                var finalData = [];\r\n\r\n                for (var i = 0; i < AllData.length; i++) {\r\n                  finalData[i] = {\r\n                    key: AllData[i].id,\r\n                    id: AllData[i].id,\r\n                    number: i + 1,\r\n                    content: AllData[i].question,\r\n                    setting: <Button><Link to={\"edit-faq/\" + AllData[i].id}> Edit </Link></Button>\r\n                  };\r\n                }\r\n\r\n                // console.log(finalData)\r\n                this.setState({\r\n                  allData: finalData\r\n                })\r\n\r\n                message.success('Success!! Information deleted successfully');\r\n\r\n              } else {\r\n                message.error('Sorry!! Unable to fetch data from server..');\r\n              }\r\n              this.setState({ delloading: false });\r\n            })\r\n            .catch((error) => {\r\n              this.setState({ delloading: false });\r\n              console.log(error);\r\n              message.error('Sorry!! Something went wrong');\r\n            })\r\n\r\n\r\n        } else {\r\n          this.setState({ delloading: false });\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ delloading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { allData, selectedRowKeys, delloading } = this.state;\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < FaqSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>FAQ 관리</p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" >\r\n                      <Link to=\"/register-faq\">\r\n                      FAQ 등록\r\n                        </Link>\r\n                    </Button>\r\n\r\n                    {/*  \r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}  >\r\n                    <h3>FAQ 목록</h3>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Table\r\n                      // rowSelection={{\r\n                      //   type: 'checkbox',\r\n                      //   ...rowSelection,\r\n                      // }}\r\n                      rowSelection={rowSelection}\r\n                      columns={columns}\r\n                      dataSource={allData}\r\n                    />\r\n\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Button loading={delloading} className=\"theme-btn\" type=\"primary\" shape=\"round\" onClick={this.deleteRecords} >지우다</Button>\r\n                  </Col>\r\n                  {/* \r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Button className=\"theme-btn float-right\" type=\"primary\" shape=\"round\" >Excel download </Button>\r\n                  </Col> */}\r\n\r\n                </Row>\r\n              </Form>\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageFaq;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\FindPassword\\FindPassword.js",["567","568","569","570","571","572","573","574","575","576"],"import React, { Component } from 'react';\r\n\r\nimport {\r\n    Layout, Form, Input, Button, Tabs, message\r\n} from 'antd';\r\n\r\nimport '../css/global.css';\r\nimport 'antd/dist/antd.css';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\nimport WithoutAuthHeader from '../WithoutAuthHeaderFooter/WithoutAuthHeader';\r\nimport WithoutAuthFooter from '../WithoutAuthHeaderFooter/WithoutAuthFooter';\r\nimport LoginFormFooter from '../WithoutAuthHeaderFooter/LoginFormFooter';\r\nimport BaseUrl from '../services/axios-url';\r\nimport Cookies from 'universal-cookie';\r\nimport logo from \"../images/logo-small.png\";\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Content } = Layout;\r\nconst { TabPane } = Tabs;\r\n\r\nconst layout = {\r\n    labelCol: { span: 0 },\r\n    wrapperCol: { span: 24 },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 0, span: 24 },\r\n};\r\n\r\nfunction GoBack() {\r\n    window.history.back();\r\n}\r\n\r\nclass FindPassword extends Component {\r\n\r\n    state = {\r\n        mem_name: '',\r\n        mobile_no_for_email_used: '',\r\n        redirectToGetEmail: false,\r\n        userEmail: '',\r\n        mobile_no_for_password: '',\r\n        redirectToChangePassword: false\r\n    }\r\n\r\n    getVerificationCodeForEmail = () => {\r\n        console.log(this.state.mem_name)\r\n        console.log(this.state.mobile_no_for_email)\r\n\r\n        if (this.state.mem_name == '' || this.state.mobile_no_for_email == '') {\r\n            message.error('Please fill the name and Mobile number')\r\n            return;\r\n        }\r\n        this.setState({\r\n            verificationCodeLoadingForEmail: true\r\n        })\r\n\r\n        axios.post(BaseUrl + \"/memberapi/SendOTPMember\", {\r\n            \"name\": this.state.mem_name,\r\n            \"mobile\": this.state.mobile_no_for_email,         // this.state.mobile_no_for_email\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status == 1) {\r\n                    message.success('OTP Sent successfully on your mobile number')\r\n                    this.setState({\r\n                        showVerification: true,     // show the textbox\r\n                        // visible: true,           // show the modal\r\n                    })\r\n                }\r\n                else {\r\n                    message.error(res.data.message);\r\n                }\r\n                this.setState({\r\n                    verificationCodeLoadingForEmail: false\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n                this.setState({\r\n                    verificationCodeLoadingForEmail: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    onFinish = values => {\r\n        console.log('Success:', values);\r\n\r\n        var mobile = values.mobile_number.toString();\r\n        var verificationcode = values.verify_number.toString();\r\n\r\n        axios.post(BaseUrl + \"/memberapi/ConfirmOTPEmailResetPassword\", {\r\n            \"mobile\": mobile,\r\n            \"verificationcode\": verificationcode,\r\n            \"mode\": \"2\"\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status == 1) {\r\n\r\n                    message.success('You are successfully verified. Redirecting You..')\r\n\r\n                    this.setState({ userEmail: res.data.data.email }, () => {\r\n                    })\r\n\r\n                    this.setState({ redirectToGetEmail: true })\r\n\r\n                    // const cookies = new Cookies();\r\n                    // var cookieName = btoa('zeeps');\r\n                    // // console.log('encodedStringBtoA', cookieName);\r\n                    // var finalCookieName = '';\r\n                    // finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n                    // var encodedStringBtoA = btoa('authorized');\r\n                    // // console.log('encodedStringBtoA', encodedStringBtoA);\r\n                    // var finalCookieValue = '';\r\n                    // finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n                    // // already logged in user\r\n                    // if (cookies.get(finalCookieName) == finalCookieValue) {\r\n                    //     this.setState({\r\n                    //         visible: true,           // show the modal\r\n                    //     })\r\n                    // }\r\n                    // // Not logged in user\r\n                    // else if (cookies.get(finalCookieName) == undefined || cookies.get(finalCookieName) == 'undefined') {\r\n                    //     this.setState({\r\n                    //         noRegisteredModalvisible: true,           // show the non member modal\r\n                    //     })\r\n                    // }\r\n                    // // Not a normal user\r\n                    // else {\r\n                    //     message.error('Unauthenticated User!')\r\n                    //     return;\r\n                    // }\r\n\r\n\r\n                }\r\n                else {\r\n                    message.error(res.data.message);\r\n                }\r\n                this.setState({ loading: false })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n                this.setState({ loading: false })\r\n            })\r\n\r\n    };\r\n\r\n    onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n        message.error('Some error.. Please try again')\r\n    };\r\n\r\n    getVerificationCodeForEmail = () => {\r\n        console.log(this.state.mobile_no_for_password)\r\n\r\n        if (this.state.mobile_no_for_password == '') {\r\n            message.error('Please fill the Mobile number')\r\n            return;\r\n        }\r\n        this.setState({\r\n            verificationCodeLoadingForEmail: true\r\n        })\r\n\r\n        axios.post(BaseUrl + \"/memberapi/SendOTPFindPassword\", {\r\n            \"mobile\": this.state.mobile_no_for_password,\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status == 1) {\r\n                    message.success('OTP Sent successfully on your mobile number')\r\n                    this.setState({\r\n                        showVerification: true,     // show the textbox\r\n                        // visible: true,           // show the modal\r\n                    })\r\n                }\r\n                else {\r\n                    message.error(res.data.message);\r\n                }\r\n                this.setState({\r\n                    verificationCodeLoadingForEmail: false\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n                this.setState({\r\n                    verificationCodeLoadingForEmail: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    onFinishPassword = values => {\r\n        console.log('Success:', values);\r\n\r\n        var mobile = values.mobile.toString();\r\n        var verificationcode = values.verify_number.toString();\r\n\r\n        axios.post(BaseUrl + \"/memberapi/ConfirmOTPEmailResetPassword\", {\r\n            \"mobile\": mobile,\r\n            \"verificationcode\": verificationcode,\r\n            \"mode\": \"1\"\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status == 1) {\r\n\r\n                    message.success('You are successfully verified. Redirecting You..')\r\n\r\n                    this.setState({ userIdForPassReset: res.data.data.id }, () => {\r\n                    })\r\n\r\n                    this.setState({ redirectToChangePassword: true })\r\n\r\n\r\n                }\r\n                else {\r\n                    message.error(res.data.message);\r\n                }\r\n                this.setState({ loading: false })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n                this.setState({ loading: false })\r\n            })\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        console.log(this.state.redirectToGetEmail)\r\n        const { mem_name, mobile_no_for_email, verificationCodeLoadingForEmail, mobile_no_for_password, userEmail, userIdForPassReset } = this.state;\r\n\r\n        if (this.state.redirectToGetEmail) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/show-email-addresss\",\r\n                    state: { userEmail: userEmail } \r\n                }}\r\n            />\r\n        }\r\n\r\n        if (this.state.redirectToChangePassword) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: \"/change-password\",\r\n                    state: { userId: userIdForPassReset }\r\n                }}\r\n            />\r\n        }\r\n\r\n        return (\r\n            <Layout className=\"login-bg\">\r\n\r\n                <WithoutAuthHeader />\r\n\r\n                <Content className=\"login-content\">\r\n\r\n                    <Row>\r\n\r\n                        <Col xs={{ span: 3, offset: 1 }} sm={{ span: 3, offset: 5 }} lg={{ span: 2, offset: 6 }} >\r\n                            <Button type=\"default\" icon={<ArrowLeftOutlined />} size='large' shape=\"circle\" onClick={GoBack} />\r\n\r\n                        </Col>\r\n\r\n                        <Col xs={{ span: 19 }} sm={{ span: 12, offset: 0 }} lg={{ span: 8, offset: 0 }} >\r\n\r\n                            <img src={logo} />\r\n                            <h1 className=\"text-white\">환영합니다!</h1>\r\n\r\n                            <Tabs defaultActiveKey=\"1\" centered>\r\n                                <TabPane tab=\"&nbsp; 비밀번호 찾기 &nbsp;\" key=\"1\">\r\n                                    <Form\r\n                                        {...layout}\r\n                                        name=\"basic\"\r\n                                        initialValues={{ remember: true }}\r\n                                        onFinish={this.onFinishPassword}\r\n                                        onFinishFailed={this.onFinishFailed}\r\n                                    >\r\n                                        {/* <Form.Item\r\n                                            label=\"\"\r\n                                            name=\"mobile_number\"\r\n                                            rules={[{ required: true, message: 'Please input your Mobile number!' }]}\r\n\r\n                                        >\r\n                                            <Input placeholder=\"Mobile Number\" className=\"login-input\" />\r\n                                        </Form.Item> */}\r\n                                        <Row>\r\n                                            <Col xs={17} sm={17} lg={18}>\r\n                                                <Form.Item\r\n                                                    label=\"\"\r\n                                                    name=\"mobile\"\r\n                                                    rules={[{ required: true, message: 'Please input your Mobile number!' }]}\r\n                                                    value={mobile_no_for_password}\r\n                                                    onChange={e => this.setState({ mobile_no_for_password: e.target.value })}\r\n                                                >\r\n                                                    <Input placeholder=\"휴대폰번호를 입력해주세요.\" className=\"login-input\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={7} sm={7} lg={6}>\r\n                                                <Button loading={verificationCodeLoadingForEmail} className=\"theme-btn\" onClick={this.getVerificationCodeForEmail}>코드 보내기</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Form.Item\r\n                                            label=\"\"\r\n                                            name=\"verify_number\"\r\n                                            rules={[{ required: true, message: 'Please verify your number!' }]}\r\n                                        >\r\n                                            <Input placeholder=\"인증번호를 입력해주세요.\" className=\"login-input\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item {...tailLayout}>\r\n                                            <Button block type=\"primary\" shape=\"round\" htmlType=\"submit\" className=\"login-btn-bg\">\r\n                                                비밀번호 찾기\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n\r\n                                </TabPane>\r\n\r\n                                <TabPane tab=\"&nbsp; 이메일 찾기 &nbsp;\" key=\"2\">\r\n                                    <Form\r\n                                        {...layout}\r\n                                        name=\"basic\"\r\n                                        initialValues={{ remember: true }}\r\n                                        onFinish={this.onFinish}\r\n                                        onFinishFailed={this.onFinishFailed}\r\n                                    >\r\n\r\n                                        <Form.Item\r\n                                            label=\"\"\r\n                                            name=\"name\"\r\n                                            rules={[{ required: true, message: 'Please input your name!' }]}\r\n                                            value={mem_name}\r\n                                            onChange={e => this.setState({ mem_name: e.target.value })}\r\n                                        >\r\n                                            <Input placeholder=\"이름을 입력해주세요.\" className=\"login-input\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Row>\r\n                                        <Col xs={17} sm={17} lg={18}>\r\n                                                <Form.Item\r\n                                                    label=\"\"\r\n                                                    name=\"mobile_number\"\r\n                                                    rules={[{ required: true, message: 'Please input your Mobile number!' }]}\r\n                                                    value={mobile_no_for_email}\r\n                                                    onChange={e => this.setState({ mobile_no_for_email: e.target.value })}\r\n                                                >\r\n                                                    <Input placeholder=\"휴대폰번호를 입력해주세요.\" className=\"login-input\" />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={7} sm={7} lg={6}>\r\n                                                <Button loading={verificationCodeLoadingForEmail} className=\"theme-btn\" onClick={this.getVerificationCodeForEmail}>코드 보내기</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n\r\n\r\n                                        <Form.Item\r\n                                            label=\"\"\r\n                                            name=\"verify_number\"\r\n                                            rules={[{ required: true, message: 'Please verify your number!' }]}\r\n                                        >\r\n                                            <Input placeholder=\"인증번호를 입력해주세요.\" className=\"login-input\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item {...tailLayout}>\r\n                                            <Button block type=\"primary\" shape=\"round\" htmlType=\"submit\" className=\"login-btn-bg\">\r\n                                                이메일 찾기\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </TabPane>\r\n                            </Tabs>\r\n\r\n\r\n\r\n\r\n\r\n                            {/* <LoginFormFooter /> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Content>\r\n\r\n                <WithoutAuthFooter />\r\n\r\n            </Layout>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindPassword;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\EditMember.js",["577","578","579","580","581","582"],"import React, { Component } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Select, Menu, Divider, DatePicker, message\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport MemberSettingsAside from './member-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst regLayout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { offset: 0, span: 23 },\r\n}\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nfunction GoBack() {\r\n  window.history.back();\r\n}\r\n\r\n\r\n\r\nclass EditMember extends Component {\r\n\r\n  state = {\r\n    loading: false,\r\n  }\r\n\r\n  onFinish = values => {\r\n    this.setState({ loading: true });\r\n    console.log('Success:', values);\r\n\r\n    axios\r\n      .post(BaseUrl + \"/adminapi/UpdateMember\", {\r\n        \"id\": window.location.pathname.split(\"/\").pop(),\r\n        \"name\": values.name,\r\n        \"mobile\": values.mobile,\r\n        \"address\": values.address,\r\n        \"email\": values.email,\r\n        \"ismember\": values.leave_status\r\n      })\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.data.status == 1) {\r\n          message.success('Success.. Member information updated successfully')\r\n          this.setState({ loading: false });\r\n        } else {\r\n          message.success('Sorry.. Something went wrong')\r\n          this.setState({ loading: false });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n      })\r\n  };\r\n\r\n  formRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n\r\n    var memberId = window.location.pathname.split(\"/\").pop();\r\n\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetMemberDeatilById/' + memberId)\r\n      .then((response) => {\r\n        console.log('data->', response.data.data)\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          this.formRef.current.setFieldsValue({\r\n            name: response.data.data.name,\r\n            password: '******',\r\n            confirm: '******',\r\n            mobile: response.data.data.mobile,\r\n            leave_status: response.data.data.ismember ? 'true' : 'false' ,\r\n            email: response.data.data.email,\r\n            address: response.data.data.address\r\n          });\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Unable to fetch data from server..');\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < MemberSettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                ref={this.formRef}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>회원 등록</p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button loading={loading} type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\">\r\n                      회원 저장\r\n                      </Button>\r\n\r\n\r\n                    <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                      <Link to=\"/member-setting\" >\r\n                        회원 목록\r\n                        </Link>\r\n                    </Button>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 20 }} lg={{ span: 20 }} >\r\n                    <p>기본 정보 </p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 4 }} lg={{ span: 4 }} >\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이름\"\r\n                      name=\"name\"\r\n                      rules={[{ required: true, message: 'Please input your name!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"비밀번호(필수)\"\r\n                      name=\"password\"\r\n                      rules={[{ required: true, message: 'Please input your password!' }]}\r\n                    >\r\n                      <Input.Password readOnly disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      name=\"confirm\"\r\n                      label=\"비밀번호 확인\"\r\n                      dependencies={['password']}\r\n                      hasFeedback\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Please confirm your password!',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                          validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                              return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                          },\r\n                        }),\r\n                      ]}\r\n                    >\r\n                      <Input.Password readOnly disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"휴대폰 번호\"\r\n                      name=\"mobile\"\r\n                      rules={[{ required: true, message: 'Please input your mobile number!' }]}\r\n                    >\r\n                      <Input  />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...regLayout}\r\n                      label=\"탈퇴여부\"\r\n                      name=\"leave_status\"\r\n                      rules={[{ required: true, message: 'Please input your Leave Status!' }]}\r\n                    >\r\n                      <Select style={{ width: '100%' }} >\r\n                        <Option value=\"\">Select</Option>\r\n                        <Option value=\"true\">True</Option>\r\n                        <Option value=\"false\">False</Option>\r\n                      </Select>\r\n\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이메일\"\r\n                      name=\"email\"\r\n                      rules={[{ required: true, message: 'Please input your Email address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"주소\"\r\n                      name=\"address\"\r\n                      rules={[{ required: true, message: 'Please input your  address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n\r\n                </Row>\r\n\r\n\r\n              </Form>\r\n\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditMember;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\EditPropertyById.js",["583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, DatePicker, Space, Table, Radio, Select, Upload, message\r\n} from 'antd';\r\n\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n \r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport PropertySettingsAside from './property-settings-aside';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 7 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst fullLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 24 },\r\n}\r\nconst { Option } = Select;\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n  message.error('Something went wrong. Please try again')\r\n};\r\n\r\n\r\n\r\nfunction handleSelectChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: '번호',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '이름',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '지우다',\r\n    dataIndex: 'delete',\r\n  },\r\n];\r\n// const data = [\r\n//   {\r\n//     key: '1',\r\n//     number: '1',\r\n//     name: 'file name',\r\n//     delete: <Button><Link to=\"#\">Delete</Link></Button>,\r\n//   },\r\n//   {\r\n//     key: '2',\r\n//     number: '2',\r\n//     name: 'file name',\r\n//     delete: <Button><Link to=\"#\">Delete</Link></Button>,\r\n//   },\r\n// ];\r\n\r\n\r\n\r\n\r\nclass EditPropertyById extends Component {\r\n\r\n  state = {\r\n    maintenance_fee: [],\r\n    options: [],\r\n    selected_maintenance_fee: '',\r\n    selectedOptions: '',\r\n    selectedType: ''\r\n  }\r\n\r\n  formRef = React.createRef();\r\n\r\n  handleMaintenancefeeChange = (value) => {\r\n    // console.log(`selected ${value}`);\r\n    var mFee = value.join(',')\r\n    this.setState({ selected_maintenance_fee: mFee })\r\n  }\r\n\r\n  handleOptionChange = value => {\r\n    console.log(`selected ${value}`);\r\n    var opt = value.join(',')\r\n    this.setState({ selectedOptions: opt })\r\n  }\r\n  handleTypeChange = value => {\r\n    console.log(`selected ${value}`);\r\n    var type = value.join(',')\r\n    this.setState({ selectedType: type })\r\n  }\r\n\r\n  deleteContractById = (e) => {\r\n    console.log('Content: ', e.currentTarget.dataset.id);\r\n    var propertyId = window.location.pathname.split(\"/\").pop();\r\n    axios\r\n      .get(BaseUrl + '/adminapi/DeleteContractFileById/' + e.currentTarget.dataset.id)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data.data)\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n\r\n          // get contract list\r\n          axios\r\n            .get(BaseUrl + '/adminapi/GetAllContractsByPropertyId/' + propertyId)\r\n            .then((res) => {\r\n              this.setState({ searchData: '' })\r\n              // console.log(res)\r\n              if (res.data.status == 1 || res.data.status == '1') {\r\n                var searchData = res.data.data;\r\n\r\n                console.log(searchData)\r\n\r\n                var searchDataResult = [];\r\n\r\n                for (var i = 0; i < searchData.length; i++) {\r\n                  searchDataResult[i] = {\r\n                    key: searchData[i].id,\r\n                    id: searchData[i].id,\r\n                    number: i + 1,\r\n                    name: searchData[i].contractFile,\r\n                    delete: <Button data-id={searchData[i].id} onClick={this.deleteContractById}>Delete</Button>\r\n                  };\r\n                }\r\n\r\n                // console.log(searchDataResult)\r\n                this.setState({\r\n                  searchData: searchDataResult,\r\n                  loading: false\r\n                })\r\n\r\n              } else {\r\n                message.error('Sorry!! Unable to fetch data from server..');\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              message.error('Server error');\r\n            })\r\n\r\n        } else {\r\n          message.error(response.data.message);\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n\r\n      })\r\n  }\r\n\r\n  onFinish = values => {\r\n    // this.setState({ loading: true });\r\n    console.log('Success:-', values);\r\n\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"propertyId\", window.location.pathname.split(\"/\").pop());\r\n    formData.append(\"name\", values.property_name);\r\n    formData.append(\"address\", values.address);\r\n    formData.append(\"detailAddress\", values.detail_address);\r\n    // formData.append(\"showAddress\", values.type);   // public, private\r\n    formData.append(\"areaSquare\", values.square);\r\n    formData.append(\"propertyType\", this.state.selectedType);       // Sale, rent\r\n    formData.append(\"elevator\", values.elevator);\r\n    formData.append(\"rooms\", values.number_of_rooms);\r\n    formData.append(\"direction\", values.direction);\r\n    // formData.append(\"availableMoveInStatus\", values.available_date);\r\n    formData.append(\"availableMoveInDate\", values.available_move_in_date);\r\n    // formData.append(\"isLandlord\", values.house_owner); // -----------------------------pending\r\n    formData.append(\"isPetAvailable\", values.pet);\r\n    formData.append(\"isMortgage\", values.mortgage);\r\n    formData.append(\"contractName\", values.contract_name);\r\n    formData.append(\"contractStatus\", values.contract_status);\r\n    formData.append(\"memberContractStatus\", 'no');\r\n    formData.append(\"propertyCost\", '0');\r\n    formData.append(\"maintanceFee\", '100');\r\n    formData.append(\"propertyFeatureId\", this.state.selectedOptions);    // options ids\r\n    formData.append(\"propertyFacilityId\", this.state.selected_maintenance_fee); //maintainence fee id\r\n    formData.append(\"managerComment\", values.manager_comment); // additional_detail_info\r\n\r\n    formData.append(\"mobile\", values.owner_contact_no); //maintainence fee id\r\n\r\n    // images\r\n    if (values.images) {\r\n      values.images.fileList.forEach(file => {\r\n        formData.append('property', file.originFileObj);\r\n      });\r\n    }\r\n\r\n    // contract files\r\n    if (values.contract_files) {\r\n      values.contract_files.fileList.forEach(file => {\r\n        formData.append('contractfile', file.originFileObj);\r\n      });\r\n    }\r\n\r\n    axios.post(BaseUrl + \"/propertyapi/AdminUpdateProperty\", formData)\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.data.status == 1) {\r\n          message.success('Success.. Property information updated successfully.')\r\n\r\n          // window.location = '/register-property-step-two';\r\n        }\r\n        else {\r\n          message.error(res.data.message)\r\n        }\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n        this.setState({ loading: false });\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log(window.location.pathname.split(\"/\").pop())\r\n\r\n    // get maintanence fee / facilities ------------------------------------------\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetAllPropertyFacilities/')\r\n      .then((response) => {\r\n\r\n        // console.log(response.data.data)\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n          this.setState({\r\n            maintenance_fee: response.data.data\r\n          })\r\n\r\n        } else {\r\n          message.error(response.data.message);\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n\r\n      })\r\n\r\n    // get options ----------------------------------------------\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetAllPropertyFeatures/')\r\n      .then((response) => {\r\n\r\n        // console.log(response.data.data)\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n          this.setState({\r\n            options: response.data.data\r\n          })\r\n\r\n        } else {\r\n          message.error(response.data.message);\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n\r\n      })\r\n\r\n    // ----------------------------------------------------\r\n\r\n    var propertyId = window.location.pathname.split(\"/\").pop();\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetPropertyDetailById/' + propertyId)\r\n      .then((response) => {\r\n\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n\r\n          var AllData = response.data.data;\r\n          console.log(AllData)\r\n\r\n          let optionsArray = [];\r\n          response.data.data.features.forEach(f => {\r\n            optionsArray.push(f.toString())\r\n          });\r\n\r\n          let maintainenceFeeArray = [];\r\n          response.data.data.facilities.forEach(m => {\r\n            maintainenceFeeArray.push(m.toString())\r\n          });\r\n\r\n          let propertyTypeArray = [];\r\n          AllData.propertyType.split(\",\").forEach(t => {\r\n            propertyTypeArray.push(t.toString())\r\n          })\r\n\r\n          this.setState({\r\n            selected_maintenance_fee: maintainenceFeeArray,\r\n            selectedOptions: optionsArray,\r\n            selectedType: propertyTypeArray\r\n          })\r\n\r\n\r\n          this.formRef.current.setFieldsValue({\r\n            m_name: AllData.member.name,\r\n            email: AllData.member.email,\r\n            phone_no: AllData.phone,\r\n            mobile_number: AllData.member.mobile,\r\n            address: AllData.address,\r\n            detail_address: AllData.detailAddress,\r\n            square: AllData.areaSquare,\r\n            type: propertyTypeArray,\r\n            elevator: AllData.elevator ? \"yes\" : 'no',\r\n            number_of_rooms: AllData.rooms,\r\n            direction: AllData.direction,\r\n            available_move_in_date: AllData.availableMoveInDate,\r\n            landlord_contact: AllData.phone,\r\n            landlord: AllData.isLandlord,\r\n            pet: AllData.isPetAvailable ? \"yes\" : 'no',\r\n            showAddress: AllData.showAddress,\r\n            mortgage: AllData.isMortgage ? \"yes\" : \"no\",\r\n            contract_status: AllData.memberContractStatus,\r\n            maintenance_fee: maintainenceFeeArray,\r\n            option: optionsArray,\r\n            manager: AllData.manager,\r\n            property_name: AllData.name,\r\n            contract_name: AllData.contractName,\r\n            manager_comment: AllData.managerComment,\r\n\r\n          });\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Server error');\r\n      })\r\n\r\n    // get contract list\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetAllContractsByPropertyId/' + propertyId)\r\n      .then((res) => {\r\n        this.setState({ searchData: '' })\r\n        // console.log(res)\r\n        if (res.data.status == 1 || res.data.status == '1') {\r\n          var searchData = res.data.data;\r\n\r\n          console.log(searchData)\r\n\r\n          var searchDataResult = [];\r\n\r\n          for (var i = 0; i < searchData.length; i++) {\r\n            searchDataResult[i] = {\r\n              key: searchData[i].id,\r\n              id: searchData[i].id,\r\n              number: i + 1,\r\n              name: searchData[i].contractFile,\r\n              delete: <Button data-id={searchData[i].id} onClick={this.deleteContractById}>Delete</Button>\r\n            };\r\n          }\r\n\r\n          // console.log(searchDataResult)\r\n          this.setState({\r\n            searchData: searchDataResult,\r\n            loading: false\r\n          })\r\n\r\n        } else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Server error');\r\n      })\r\n\r\n  }\r\n\r\n  render() {\r\n    const { maintenance_fee, options, selectedOptions, selected_maintenance_fee, searchData } = this.state;\r\n    console.log(this.state.selectedOptions)\r\n    console.log(this.state.selected_maintenance_fee)\r\n    console.log(this.state.selectedType)\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < PropertySettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                ref={this.formRef}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>부동산 편집</p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\" >\r\n                    저장\r\n                      </Button>\r\n\r\n                    {/* \r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}  >\r\n                    <p>부동산 정보</p>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이름\"\r\n                      name=\"m_name\"\r\n                      rules={[{ required: true, message: 'Please input name!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이메일\"\r\n                      name=\"email\"\r\n                      rules={[{ required: false, message: 'Please input email address!' }]}\r\n                    >\r\n                      <Input readOnly />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"전화 번호\"\r\n                      name=\"phone_no\"\r\n                      rules={[{ required: false, message: 'Please input phone number!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"모바일 번호\"\r\n                      name=\"mobile_number\"\r\n                      rules={[{ required: true, message: 'Please input email address!' }]}\r\n                    >\r\n                      <Input readOnly />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"주소\"\r\n                      name=\"address\"\r\n                      rules={[{ required: true, message: 'Please input address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"상세 주소\"\r\n                      name=\"detail_address\"\r\n                      rules={[{ required: true, message: 'Please input Detail address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"광장\"\r\n                      name=\"square\"\r\n                      rules={[{ required: true, message: 'Please input square!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"유형\"\r\n                      name=\"type\"\r\n                      rules={[{ required: true, message: 'Please select type!' }]}\r\n                    >\r\n                      {/* <Select\r\n                        onChange={handleSelectChange}>\r\n                        <Option value=\"\">Select</Option>\r\n                        <Option value=\"For Sale\">For Sale</Option>\r\n                        <Option value=\"For Rent\">For Rent</Option>\r\n                        <Option value=\"For Sale, For Rent\">For Both</Option>\r\n                      </Select> */}\r\n\r\n                      <Select mode=\"tags\" placeholder=\"Type\" onChange={this.handleTypeChange}>\r\n                        <Option key=\"For Sale\">판매용</Option>\r\n                        <Option key=\"For Rent\">임대료</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"엘리베이터\"\r\n                      name=\"elevator\"\r\n                      rules={[{ required: true, message: 'Please select elevator!' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"yes\">예</Option>\r\n                        <Option value=\"no\">아니</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"객실 수\"\r\n                      name=\"number_of_rooms\"\r\n                      rules={[{ required: true, message: 'Please input Number of rooms!' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"One Room\">방 하나</Option>\r\n                        <Option value=\"Two Rooms\">두 방</Option>\r\n                        <Option value=\"Three Rooms\">세 방</Option>\r\n                        <Option value=\"Four Rooms\">네 방</Option>\r\n                        <Option value=\"Five Rooms\">다섯 방</Option>\r\n                        <Option value=\"Others\">기타</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"방향\"\r\n                      name=\"direction\"\r\n                      rules={[{ required: true, message: 'Please input direction!' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"East\">동쪽</Option>\r\n                        <Option value=\"West\">서쪽</Option>\r\n                        <Option value=\"South\">남쪽</Option>\r\n                        <Option value=\"North\">북쪽</Option>\r\n                        <Option value=\"North-east\">북동</Option>\r\n                        <Option value=\"North-west\">북서</Option>\r\n                        <Option value=\"South-east\">남동</Option>\r\n                        <Option value=\"South-west\">남서</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"입주 가능 날짜\"\r\n                      name=\"available_move_in_date\"\r\n\r\n                      rules={[{ required: true, message: 'Please select Available move in date !' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"집주인 연락처\"\r\n                      name=\"landlord_contact\"\r\n                      rules={[{ required: false, message: 'Please enter Landlord contact !' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"애완 동물\"\r\n                      name=\"pet\"\r\n                      rules={[{ required: true, message: 'Please select Pet !' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"yes\">유효한</Option>\r\n                        <Option value=\"no\">사용 불가</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"주소 표시\"\r\n                      name=\"showAddress\"\r\n                      rules={[{ required: true, message: 'Please select Show address !' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"public\">공공의</Option>\r\n                        <Option value=\"private\">은밀한</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"저당\"\r\n                      name=\"mortgage\"\r\n                      rules={[{ required: true, message: 'Please select Mortgage  !' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"yes\">유효한</Option>\r\n                        <Option value=\"no\">사용 불가</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"계약 상태\"\r\n                      name=\"contract_status\"\r\n                      rules={[{ required: true, message: 'Please select Contract status !' }]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"confirmation pending\">확인 대기 중</Option>\r\n                        <Option value=\"confirmed\">확인</Option>\r\n                        <Option value=\"closed\">닫은</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <p>세부 정보 (필요한 경우)</p>\r\n                    {/* <Form.Item\r\n                      {...compLayout}\r\n                      label=\"Detail info(if needs)\"\r\n                      name=\"additional_detail_info\"\r\n                      rules={[{ required: false, message: 'Please select detail info!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item> */}\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"부동산 이름\"\r\n                      name=\"property_name\"\r\n                      rules={[{ required: false, message: 'Please input property name!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      // {...compLayout}\r\n                      label=\"선택권\"\r\n                      name=\"option\"\r\n                      rules={[{ required: true, message: 'Please select option !' }]}\r\n                    >\r\n                      {/* {getFieldDecorator(\"option\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Selecciona alumnos\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select\r\n                          size=\"large\"\r\n                          mode=\"multiple\"\r\n                          placeholder=\"Selecciona alumnos\"\r\n                        >\r\n                          {\r\n                          options.map((o, i) => {\r\n                            return <Option key={o.id}>{o.propertyFeatures}</Option>\r\n                          })\r\n                        }\r\n                        </Select>\r\n                      )} */}\r\n\r\n                      <Select mode=\"tags\" placeholder=\"Option\" onChange={this.handleOptionChange}\r\n                      >\r\n                        {\r\n                          options.map((o, i) => {\r\n                            return <Option key={o.id}>{o.propertyFeatures}</Option>\r\n                          })\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n\r\n                    <Form.Item\r\n                      // {...compLayout}\r\n                      label=\"유지 보수 비용\"\r\n                      name=\"maintenance_fee\"\r\n                      rules={[{ required: true, message: 'Please select Maintenance fee !' }]}\r\n                    >\r\n                      <Select mode=\"tags\" placeholder=\"Maintenance fee\" onChange={this.handleMaintenancefeeChange}>\r\n                        {\r\n                          maintenance_fee.map((m, i) => {\r\n                            return <Option key={m.id}>{m.propertyFacility}</Option>\r\n                          })\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\" 매니저 \"\r\n                      name=\"manager\"\r\n                      rules={[{ required: false, message: 'Please select Manager  !' }]}\r\n                    >\r\n                      <Input readonly disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"이미지 업로드\"\r\n                      name=\"images\"\r\n                      rules={[{ required: false, message: 'Please select images  !' }]}\r\n                    >\r\n                      <Upload\r\n                        multiple\r\n                        maxCount={18}\r\n                        beforeUpload={() => false}\r\n                      >\r\n                        <Button icon={<UploadOutlined />}>클릭하여 업로드</Button>\r\n                      </Upload>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"계약 업로드\"\r\n                      name=\"contract_files\"\r\n                      rules={[{ required: false, message: 'Please select Contract files  !' }]}\r\n                    >\r\n                      <Upload\r\n                        multiple\r\n                        maxCount={20}\r\n                        beforeUpload={() => false}\r\n                      >\r\n                        <Button icon={<UploadOutlined />}>클릭하여 업로드</Button>\r\n                      </Upload>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"계약 명 \"\r\n                      name=\"contract_name\"\r\n                      rules={[{ required: true, message: 'Please select contract name  !' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  {/* <img src=\"https://zeepsapis.herokuapp.com/property/1610955479184-bezkoder-73190697.jpg\"/> */}\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"계약 목록 \"\r\n                      name=\"contract_list\"\r\n                      rules={[{ required: false, message: 'Please select Manager  !' }]}\r\n                    >\r\n                      <Table\r\n                        // rowSelection={{\r\n                        //   type: 'checkbox',\r\n                        //   ...rowSelection,\r\n                        // }}\r\n                        // rowSelection={rowSelection}\r\n                        columns={columns}\r\n                        dataSource={searchData}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\" 관리자 코멘트\"\r\n                      name=\"manager_comment\"\r\n                      rules={[{ required: false, message: 'Please add Manager comment !' }]}\r\n                    >\r\n                      <TextArea rows={4} />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n\r\n                </Row>\r\n              </Form>\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditPropertyById;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\PropertyConfirmContract.js",["609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634"],"import React, { Component } from 'react';\r\nimport WithAuthHeader from '../WithAuthHeaderFooter/WithAuthHeader';\r\nimport {\r\n    Layout, Button, Divider, Row, Col, Space, Modal, message, Carousel\r\n} from 'antd';\r\n\r\nimport { DownloadOutlined, CheckOutlined, RightCircleOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport './register-property.css';\r\nimport '../css/global.css'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport BaseUrl from '../services/axios-url';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport Cookies from 'universal-cookie';\r\nimport logoRound from '../images/logo-round.png';\r\n\r\nconst axios = require('axios');\r\nconst { Content } = Layout;\r\n\r\n// /property-detail/:id\r\nclass PropertyConfirmContract extends Component {\r\n    state = {\r\n        showVerification: false,\r\n        loading: false,\r\n        visible: false,\r\n        propertyData: [],\r\n        propertyImages: [],\r\n        CCLoading: false,\r\n        redirectTo404: false,\r\n        actualMaintainenceArray: [],\r\n        actualOptionsArray: []\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n        }, 3000);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    confirmContract = (id) => {\r\n        console.log(id)\r\n        axios.post(BaseUrl + \"/memberapi/UpdatePropertyStatusByPropertyId\", {\r\n            \"id\": id,\r\n            \"memberContractStatus\": \"confirmed\"\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status == 1) {\r\n                    message.success('Contract confirmed successfully')\r\n\r\n                    var propertyId = window.location.pathname.split(\"/\").pop();\r\n                    axios\r\n                        .get(BaseUrl + '/adminapi/GetPropertyDetailById/' + propertyId)\r\n                        .then((response) => {\r\n\r\n                            if (response.data.status == 1 || response.data.status == '1') {\r\n                                // console.log(\"dddd: \", data.data.id);\r\n\r\n                                //   var AllData = response.data.data;\r\n                                console.log(response.data.data)\r\n\r\n                                this.setState({\r\n                                    propertyData: response.data.data,\r\n                                    propertyImages: response.data.data.images\r\n                                })\r\n\r\n                            } else {\r\n                                message.error('Sorry!! Unable to fetch data from server..');\r\n                            }\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                            message.error('Server error');\r\n                        })\r\n\r\n                }\r\n                else {\r\n                    message.error(res.data.message);\r\n                }\r\n                this.setState({ CCLoading: false })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n                this.setState({ CCLoading: false })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        var propertyId = window.location.pathname.split(\"/\").pop();\r\n        axios\r\n            .get(BaseUrl + '/adminapi/GetPropertyDetailById/' + propertyId)\r\n            .then((response) => {\r\n\r\n                if (response.data.status == 1 || response.data.status == '1') {\r\n                    // console.log(\"dddd: \", data.data.id);\r\n\r\n                    //   var AllData = response.data.data;\r\n                    console.log(response.data.data)\r\n\r\n                    const cookies = new Cookies();\r\n                    var cookieName = btoa('zeeps');\r\n                    // console.log('encodedStringBtoA', cookieName);\r\n                    var finalCookieName = '';\r\n                    finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n                    var encodedStringBtoA = btoa('authorized');\r\n                    // console.log('encodedStringBtoA', encodedStringBtoA);\r\n                    var finalCookieValue = '';\r\n                    finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n                    // already logged in user\r\n                    if (cookies.get(finalCookieName) == finalCookieValue) {\r\n                        if (cookies.get('UU')) {\r\n                            if (response.data.data.memberId == cookies.get('UU')) {\r\n                                this.setState({\r\n                                    propertyData: response.data.data,\r\n                                    propertyImages: response.data.data.images\r\n                                })\r\n\r\n                                var maintanceFeeOfProperty = response.data.data.facilities;\r\n                                var optionsOfProperty = response.data.data.features;\r\n\r\n                                // get maintanence fee / facilities ------------------------------------------\r\n                                var allMaintanenceData = [];\r\n                                var allOptionsData = [];\r\n                                var i = 0;\r\n                                var j = 0;\r\n                                var actualMaintainenceArray = [];\r\n                                var actualOptionsArray = [];\r\n\r\n\r\n                                axios\r\n                                    .get(BaseUrl + '/adminapi/GetAllPropertyFacilities/')\r\n                                    .then((resp) => {\r\n\r\n                                        console.log(resp.data.data)\r\n                                        if (resp.data.status == 1 || resp.data.status == '1') {\r\n\r\n                                            allMaintanenceData = resp.data.data;\r\n\r\n                                            for (i = 0; i < maintanceFeeOfProperty.length; i++) {\r\n                                                for (j = 0; j < allMaintanenceData.length; j++) {\r\n                                                    if (maintanceFeeOfProperty[i] == allMaintanenceData[j].id) {\r\n                                                        actualMaintainenceArray[i] = {\r\n                                                            id: allMaintanenceData[j].id,\r\n                                                            image: allMaintanenceData[j].FacilityImage,\r\n                                                            name: allMaintanenceData[j].propertyFacility\r\n                                                        }\r\n                                                    }\r\n\r\n                                                }\r\n                                            }\r\n                                            console.log(actualMaintainenceArray)\r\n                                            this.setState({\r\n                                                actualMaintainenceArray: actualMaintainenceArray\r\n                                            })\r\n\r\n                                        } else {\r\n                                            message.error(resp.data.message);\r\n                                        }\r\n\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        console.log(error);\r\n                                        message.error('Sorry!! Unable to fetch maintanence items');\r\n\r\n                                    })\r\n\r\n                                // get options ----------------------------------------------\r\n                                axios\r\n                                    .get(BaseUrl + '/adminapi/GetAllPropertyFeatures/')\r\n                                    .then((res) => {\r\n\r\n                                        console.log(res.data.data)\r\n                                        if (res.data.status == 1 || res.data.status == '1') {\r\n                                            allOptionsData = res.data.data;\r\n\r\n                                            for (i = 0; i < optionsOfProperty.length; i++) {\r\n                                                for (j = 0; j < allOptionsData.length; j++) {\r\n                                                    if (optionsOfProperty[i] == allOptionsData[j].id) {\r\n                                                        actualOptionsArray[i] = {\r\n                                                            id: allOptionsData[j].id,\r\n                                                            image: allOptionsData[j].FeatureImage,\r\n                                                            name: allOptionsData[j].propertyFeatures\r\n                                                        }\r\n                                                    }\r\n\r\n                                                }\r\n                                            }\r\n                                            console.log(actualOptionsArray)\r\n                                            this.setState({\r\n                                                actualOptionsArray: actualOptionsArray\r\n                                            })\r\n\r\n                                        } else {\r\n                                            message.error(res.data.message);\r\n                                        }\r\n\r\n                                    })\r\n                                    .catch((error) => {\r\n                                        console.log(error);\r\n                                        message.error('Sorry!! Unable to fetch options');\r\n\r\n                                    })\r\n\r\n                            }\r\n                            else {\r\n                                message.error('Not Found!!!')\r\n                                this.setState({ redirectTo404: true })\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            message.error('Not Found!!')\r\n                            this.setState({ redirectTo404: true })\r\n                            return;\r\n                        }\r\n                    }\r\n                    // Not logged in user\r\n                    else if (cookies.get(finalCookieName) == undefined || cookies.get(finalCookieName) == 'undefined') {\r\n                        message.error('Not Found !!')\r\n                        this.setState({ redirectTo404: true })\r\n                        return;\r\n                    }\r\n                    // Not a normal user\r\n                    else {\r\n                        message.error('Not Found!')\r\n                        this.setState({ redirectTo404: true })\r\n                        return;\r\n                    }\r\n\r\n\r\n                } else {\r\n                    message.error('Sorry!! Unable to fetch data from server..');\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Server error');\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { visible, loading, propertyData, propertyImages, CCLoading } = this.state;\r\n\r\n        console.log(this.state.showVerification)\r\n        // File Upload code end ------------------------------------------------------------------------------\r\n        const contentStyle = {\r\n            height: '280px',\r\n            // color: '#fff',\r\n            lineHeight: '280px',\r\n            textAlign: 'center',\r\n            // backgroundImage: url('https://dummyimage.com/350x40/'),\r\n        };\r\n\r\n        if (this.state.redirectTo404 === true) {\r\n            return <Redirect\r\n                to={{\r\n                    pathname: '/not-found'\r\n                }}\r\n            />\r\n        }\r\n\r\n        return (\r\n            <Layout className=\"register-property-layout\">\r\n\r\n                <WithAuthHeader />\r\n\r\n                <Content>\r\n\r\n                    <Layout className=\"site-layout-background\" >\r\n                        <Space direction=\"vertical\" size={'large'}>\r\n                            <Content className=\"content-padding\" >\r\n                                <Row className=\"\">\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} >\r\n                                        {/* Left Side */}\r\n                                    </Col>\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} className=\"\" >\r\n                                        <Row>\r\n\r\n                                            <Col className=\"text-center mb-15\" span={24} >\r\n                                                <img src={logoRound} />\r\n                                                <h2>목동아파트 112동</h2>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col className=\"text-center\" span={24} >\r\n                                                <h2>{propertyData.name}</h2>\r\n                                            </Col>\r\n\r\n                                            <Divider />\r\n\r\n                                            <Col span={24} className=\"mb-15\">\r\n                                                <Carousel autoplay effect=\"fade\">\r\n                                                    {propertyImages.map((img, i) => {\r\n                                                        <div key={i}>\r\n                                                            <img src={'https://zeepsapis.herokuapp.com/property/' + img} />\r\n                                                        </div>\r\n                                                    })}\r\n                                                    <div>\r\n                                                        <img src=\"https://placeimg.com/640/200/any\" />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <img src=\"https://placeimg.com/640/200/tech\" />\r\n                                                    </div>\r\n                                                </Carousel>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={20} >\r\n                                                <h4>담당자 <br /> <b>{propertyData.manager}</b> </h4>\r\n\r\n                                            </Col>\r\n                                            <Col className=\"text-right mb-15\" span={4} >\r\n                                                <Link onClick={this.showModal} to=\"#\" className=\"theme-color font-30\"><RightCircleOutlined /></Link>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <Modal\r\n                                            visible={visible}\r\n                                            title=\"Manager information\"\r\n                                            onOk={this.handleOk}\r\n                                            onCancel={this.handleCancel}\r\n                                            footer={null}\r\n                                            width={360}\r\n                                        >\r\n                                            <Row className=\"text-left\">\r\n                                                <p>\r\n                                                담당자 <br />\r\n                                                    <b>{propertyData.manager}</b> <br />\r\n                                                    <b>{propertyData.managerContact}</b>\r\n                                                </p>\r\n                                                <Divider />\r\n\r\n                                                <Space direction=\"vertical\" className=\"width100\">\r\n                                                    <Col span={24}>\r\n                                                        <Button key=\"back\" className=\"width100 theme-btn\" onClick={this.handleCancel} size={'large'}>\r\n                                                            Confirmed\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </Space>\r\n                                            </Row>\r\n                                        </Modal>\r\n\r\n                                        <Row className=\"border-light p-10\">\r\n                                            <Col className=\" mb-15\" span={12} >\r\n                                                {/* <b>Property info </b> */}\r\n                                                <b>매물정보 </b>\r\n                                            </Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <Button shape=\"round\" className=\"theme-btn-default\">계약서 히스토리 </Button>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={12} >주소   </Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <b>{propertyData.address}</b>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={12} >거래유형 </Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <b>{propertyData.propertyType}</b>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={12} >관리비</Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <b>{propertyData.maintanceFee}</b>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={12} >층</Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <b>7th</b>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col className=\" mb-15\" span={12} >구조</Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <b>{propertyData.rooms}</b>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={12} >방향 </Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <b>{propertyData.direction}</b>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={12} >전용면적 </Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <b>{propertyData.areaSquare}m2</b>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={12} >엘레베이터 </Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <b>{propertyData.elevator ? 'Available' : 'Not Available'}</b>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={12} >입주가능일 </Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <b>{propertyData.availableMoveInDate}</b>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={24} >옵션  </Col>\r\n                                            <Col className=\"mb-15\" span={24} >\r\n                                                <Row>\r\n                                                    {\r\n                                                        this.state.actualOptionsArray.map((o, i) => {\r\n                                                            return <Col span={6} key={o.id}>\r\n                                                                <img src=\" https://placeimg.com/80/80/tech\" />\r\n                                                                {/* <img src={BaseUrl+o.image} /> */}\r\n                                                                <br />\r\n                                                                {o.name}\r\n                                                            </Col>\r\n                                                        })\r\n                                                    }\r\n                                                </Row>\r\n\r\n\r\n                                            </Col>\r\n\r\n                                            <Divider />\r\n\r\n                                            <Col className=\" mb-15\" span={24} >관리비 포함 항목</Col>\r\n                                            <Col className=\"mb-15\" span={24} >\r\n\r\n                                                <Row>\r\n                                                    {\r\n                                                        this.state.actualMaintainenceArray.map((m, i) => {\r\n                                                            return <Col span={6} key={m.id}>\r\n                                                                <img src=\" https://placeimg.com/80/80\" />\r\n                                                                <br />\r\n                                                                {/* <img src={BaseUrl+m.image} /> */}\r\n                                                                {m.name}\r\n                                                            </Col>\r\n                                                        })\r\n                                                    }\r\n                                                </Row>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={24} >상세위치 정보</Col>\r\n\r\n                                            <Col className=\" mb-15\" span={24} >\r\n                                                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3411.9914896658825!2d75.76701051462322!3d31.220965168989835!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x391af4e636b784dd%3A0xd8f1509263158c8a!2sProtolabz%20Eservices!5e0!3m2!1sen!2sin!4v1611820347886!5m2!1sen!2sin\" width=\"100%\" height=\"200\" frameborder=\"0\" style={{ border: '0' }} allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\r\n                                            </Col>\r\n\r\n                                            <Button className=\" mb-15\" size={'large'} type=\"primary\" block danger>\r\n                                            국토교통부 실거래가 보기\r\n                                            </Button>\r\n\r\n\r\n                                            {propertyData.manager && propertyData.memberContractStatus == 'confirmation pending' ?\r\n                                                <Space>\r\n                                                    <Col className=\" mb-15\" span={24} >\r\n                                                        {/* <Button block shape=\"round\" icon={<DownloadOutlined />} className=\"theme-btn-default\">Download Contract </Button> */}\r\n                                                        <Button block shape=\"round\" icon={<DownloadOutlined />} className=\"theme-btn-default\">계약 다운로드 </Button>\r\n                                                    </Col>\r\n                                                    <Col className=\"text-right mb-15\" span={24} >\r\n                                                        <Button loading={CCLoading} block shape=\"round\" icon={<CheckOutlined />} className=\"theme-btn\" onClick={() => this.confirmContract(propertyData.id)} >계약 확인 </Button>\r\n                                                    </Col>\r\n                                                </Space>\r\n                                                :\r\n                                                <Space>\r\n                                                    <Col className=\" mb-15\" span={24} >\r\n                                                        <Button shape=\"round\" icon={<DownloadOutlined />} className=\"disabled-btn-default\" disabled=\"disabled\">계약 다운로드 </Button>\r\n                                                    </Col>\r\n                                                    <Col className=\"text-right mb-15\" span={12} >\r\n                                                        <Button shape=\"round\" icon={<CheckOutlined />} className=\"disabled-btn\" disabled=\"disabled\">계약 확인 </Button>\r\n                                                    </Col>\r\n                                                </Space>\r\n                                            }\r\n\r\n                                            {/* <Col className=\" mb-15\" span={12} >\r\n                                                <Button shape=\"round\" icon={<DownloadOutlined />} className=\"theme-btn-default\">Download Contract </Button>\r\n                                            </Col>\r\n                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                <Button shape=\"round\" icon={<CheckOutlined />} className=\"theme-btn\">Confirm Contract </Button>\r\n                                            </Col> */}\r\n\r\n                                            <Col span={24} className=\"text-center\">\r\n                                                <Link to=\"/register-property\">편집하다</Link>\r\n                                            </Col>\r\n\r\n\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 6 }} >\r\n                                        {/* Right Side */}\r\n                                    </Col>\r\n\r\n\r\n\r\n                                </Row>\r\n\r\n                            </Content>\r\n                        </Space>\r\n                    </Layout>\r\n                </Content>\r\n\r\n                <WithAuthFooter />\r\n\r\n            </Layout >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default PropertyConfirmContract;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\RegisterProperty.js",["635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656"],"import React, { Component, useState } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, Checkbox, Menu, Divider, DatePicker, Space, Table, Radio, Select, Upload, message\r\n} from 'antd';\r\n\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport PropertySettingsAside from './property-settings-aside';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\nconst compLayout = {\r\n  labelCol: { span: 7 },\r\n  wrapperCol: { offset: 0, span: 20 },\r\n};\r\nconst fullLayout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { offset: 0, span: 24 },\r\n}\r\nconst { Option } = Select;\r\n\r\nconst onFinishFailed = errorInfo => {\r\n  console.log('Failed:', errorInfo);\r\n  message.error('Something went wrong. Please try again')\r\n};\r\n\r\n\r\n\r\nfunction handleSelectChange(value) {\r\n  console.log(`selected ${value}`);\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    title: '번호',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '이름',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '지우다',\r\n    dataIndex: 'delete',\r\n  },\r\n];\r\n// const data = [\r\n//   {\r\n//     key: '1',\r\n//     number: '1',\r\n//     name: 'file name',\r\n//     delete: <Button><Link to=\"#\">Delete</Link></Button>,\r\n//   },\r\n//   {\r\n//     key: '2',\r\n//     number: '2',\r\n//     name: 'file name',\r\n//     delete: <Button><Link to=\"#\">Delete</Link></Button>,\r\n//   },\r\n// ];\r\n\r\n\r\n\r\n\r\nclass RegisterProperty extends Component {\r\n\r\n  state = {\r\n    maintenance_fee: [],\r\n    options: [],\r\n    selected_maintenance_fee: '',\r\n    selectedOptions: '',\r\n    test: ''\r\n  }\r\n\r\n  formRef = React.createRef();\r\n\r\n  handleMaintenancefeeChange = (value) => {\r\n    // console.log(`selected ${value}`);\r\n    var mFee = value.join(',')\r\n    this.setState({ selected_maintenance_fee: mFee })\r\n  }\r\n\r\n  handleOptionChange = value => {\r\n    console.log(`selected ${value}`);\r\n    var opt = value.join(',')\r\n    this.setState({ selectedOptions: opt })\r\n  }\r\n\r\n  deleteContractById = (e) => {\r\n    console.log('Content: ', e.currentTarget.dataset.id);\r\n    var propertyId = window.location.pathname.split(\"/\").pop();\r\n    axios\r\n      .get(BaseUrl + '/adminapi/DeleteContractFileById/' + e.currentTarget.dataset.id)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data.data)\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n\r\n          // get contract list\r\n          axios\r\n            .get(BaseUrl + '/adminapi/GetAllContractsByPropertyId/' + propertyId)\r\n            .then((res) => {\r\n              this.setState({ searchData: '' })\r\n              // console.log(res)\r\n              if (res.data.status == 1 || res.data.status == '1') {\r\n                var searchData = res.data.data;\r\n\r\n                console.log(searchData)\r\n\r\n                var searchDataResult = [];\r\n\r\n                for (var i = 0; i < searchData.length; i++) {\r\n                  searchDataResult[i] = {\r\n                    key: searchData[i].id,\r\n                    id: searchData[i].id,\r\n                    number: i + 1,\r\n                    name: searchData[i].contractFile,\r\n                    delete: <Button data-id={searchData[i].id} onClick={this.deleteContractById}>Delete</Button>\r\n                  };\r\n                }\r\n\r\n                // console.log(searchDataResult)\r\n                this.setState({\r\n                  searchData: searchDataResult,\r\n                  loading: false\r\n                })\r\n\r\n              } else {\r\n                message.error('Sorry!! Unable to fetch data from server..');\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              message.error('Server error');\r\n            })\r\n\r\n        } else {\r\n          message.error(response.data.message);\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n\r\n      })\r\n  }\r\n\r\n  onFinish = values => {\r\n    // this.setState({ loading: true });\r\n    console.log('Success:-', values);\r\n\r\n    let formData = new FormData();\r\n\r\n    // formData.append(\"propertyId\", window.location.pathname.split(\"/\").pop());\r\n    formData.append(\"m_name\", values.m_name);\r\n    formData.append(\"name\", values.property_name);\r\n    formData.append(\"address\", values.address);\r\n    formData.append(\"detailAddress\", values.detail_address);\r\n    formData.append(\"showAddress\", values.showAddress);   // public, private------------------\r\n    formData.append(\"areaSquare\", values.square);\r\n    formData.append(\"propertyType\", values.type);       // Sale, rent\r\n    formData.append(\"elevator\", values.elevator);\r\n    formData.append(\"rooms\", values.number_of_rooms);\r\n    formData.append(\"direction\", values.direction);\r\n    // formData.append(\"availableMoveInStatus\", values.available_date);\r\n    formData.append(\"availableMoveInDate\", values.available_move_in_date);\r\n    // formData.append(\"isLandlord\", values.house_owner); // -----------------------------pending\r\n    formData.append(\"isPetAvailable\", values.pet);\r\n    formData.append(\"isMortgage\", values.mortgage);\r\n    formData.append(\"contractName\", values.contract_name);\r\n    formData.append(\"contractStatus\", values.contract_status);\r\n    formData.append(\"memberContractStatus\", 'no');\r\n    formData.append(\"propertyCost\", '0');\r\n    formData.append(\"maintanceFee\", '100');\r\n    formData.append(\"propertyFeatureId\", this.state.selectedOptions);    // options ids\r\n    formData.append(\"propertyFacilityId\", this.state.selected_maintenance_fee); //maintainence fee id\r\n    formData.append(\"managerComment\", values.manager_comment); \r\n\r\n    formData.append(\"mobile\", values.mobile_number); \r\n    formData.append(\"phone\", values.phone_no); \r\n    formData.append(\"email\", values.email); \r\n\r\n    // images\r\n    if (values.images) {\r\n      values.images.fileList.forEach(file => {\r\n        formData.append('property', file.originFileObj);\r\n      });\r\n    }\r\n\r\n    // contract files\r\n    if (values.contract_files) {\r\n      values.contract_files.fileList.forEach(file => {\r\n        formData.append('contractfile', file.originFileObj);\r\n      });\r\n    }\r\n\r\n    axios.post(BaseUrl + \"/propertyapi/AdminInsertProperty\", formData)\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.data.status == 1) {\r\n          message.success('Success.. Property registered successfully.')\r\n\r\n          // window.location = '/register-property-step-two';\r\n        }\r\n        else {\r\n          message.error(res.data.message)\r\n        }\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n        this.setState({ loading: false });\r\n      })\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log(window.location.pathname.split(\"/\").pop())\r\n\r\n    // get maintanence fee / facilities ------------------------------------------\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetAllPropertyFacilities/')\r\n      .then((response) => {\r\n\r\n        console.log(response.data.data)\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n          this.setState({\r\n            maintenance_fee: response.data.data\r\n          })\r\n\r\n        } else {\r\n          message.error(response.data.message);\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n\r\n      })\r\n\r\n    // get options ----------------------------------------------\r\n    axios\r\n      .get(BaseUrl + '/adminapi/GetAllPropertyFeatures/')\r\n      .then((response) => {\r\n\r\n        console.log(response.data.data)\r\n        if (response.data.status == 1 || response.data.status == '1') {\r\n          // console.log(\"dddd: \", data.data.id);\r\n          this.setState({\r\n            options: response.data.data\r\n          })\r\n\r\n        } else {\r\n          message.error(response.data.message);\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n\r\n      })\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    const { maintenance_fee, options, selectedOptions, selected_maintenance_fee, searchData } = this.state;\r\n    // console.log(this.state.test)\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < PropertySettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                ref={this.formRef}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    <p>\r\n부동산 편집</p>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\" >\r\n                    저장\r\n                      </Button>\r\n\r\n                    {/* \r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}  >\r\n                    <p>부동산 정보 </p>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이름\"\r\n                      name=\"m_name\"\r\n                      rules={[{ required: true, message: 'Please input name!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"이메일\"\r\n                      name=\"email\"\r\n                      rules={[{ required: false, message: 'Please input email address!' }]}\r\n                    >\r\n                      <Input  />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"전화 번호\"\r\n                      name=\"phone_no\"\r\n                      rules={[{ required: false, message: 'Please input phone number!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"모바일 번호\"\r\n                      name=\"mobile_number\"\r\n                      rules={[{ required: true, message: 'Please input mobile no!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"주소\"\r\n                      name=\"address\"\r\n                      rules={[{ required: true, message: 'Please input address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"상세 주소\"\r\n                      name=\"detail_address\"\r\n                      rules={[{ required: true, message: 'Please input Detail address!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"광장\"\r\n                      name=\"square\"\r\n                      rules={[{ required: true, message: 'Please input square!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"유형\"\r\n                      name=\"type\"\r\n                      rules={[{ required: true, message: 'Please select type!' }]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleSelectChange}>\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"For Sale\">판매용</Option>\r\n                        <Option value=\"For Rent\">임대료</Option>\r\n                        <Option value=\"For Sale, For Rent\">모두</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"엘리베이터\"\r\n                      name=\"elevator\"\r\n                      rules={[{ required: true, message: 'Please select elevator!' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"yes\">예</Option>\r\n                        <Option value=\"no\">아니</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"객실 수\"\r\n                      name=\"number_of_rooms\"\r\n                      rules={[{ required: true, message: 'Please input Number of rooms!' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"One Room\">방 하나</Option>\r\n                        <Option value=\"Two Rooms\">두 방</Option>\r\n                        <Option value=\"Three Rooms\">세 방</Option>\r\n                        <Option value=\"Four Rooms\">네 방</Option>\r\n                        <Option value=\"Five Rooms\">다섯 방</Option>\r\n                        <Option value=\"Others\">기타</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"방향\"\r\n                      name=\"direction\"\r\n                      rules={[{ required: true, message: 'Please input direction!' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"East\">동쪽</Option>\r\n                        <Option value=\"West\">서쪽</Option>\r\n                        <Option value=\"South\">남쪽</Option>\r\n                        <Option value=\"North\">북쪽</Option>\r\n                        <Option value=\"North-east\">북동</Option>\r\n                        <Option value=\"North-west\">북서</Option>\r\n                        <Option value=\"South-east\">남동</Option>\r\n                        <Option value=\"South-west\">남서</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"입주 가능 날짜\"\r\n                      name=\"available_move_in_date\"\r\n\r\n                      rules={[{ required: true, message: 'Please select Available move in date !' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"집주인 연락처\"\r\n                      name=\"landlord_contact\"\r\n                      rules={[{ required: false, message: 'Please enter Landlord contact !' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"애완 동물\"\r\n                      name=\"pet\"\r\n                      rules={[{ required: true, message: 'Please select Pet !' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"yes\">유효한</Option>\r\n                        <Option value=\"no\">사용 불가</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  \r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"주소 표시\"\r\n                      name=\"showAddress\"\r\n                      rules={[{ required: true, message: 'Please select Show address !' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"public\">공공의</Option>\r\n                        <Option value=\"private\">은밀한</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"저당\"\r\n                      name=\"mortgage\"\r\n                      rules={[{ required: true, message: 'Please select Mortgage  !' }]}\r\n                    >\r\n                      <Select\r\n                      // onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"yes\">유효한</Option>\r\n                        <Option value=\"no\">사용 불가e</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"계약 상태\"\r\n                      name=\"contract_status\"\r\n                      rules={[{ required: true, message: 'Please select Contract status !' }]}\r\n                    >\r\n                      <Select\r\n                        onChange={handleSelectChange}\r\n                      >\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"confirmation pending\">확인 대기 중</Option>\r\n                        <Option value=\"confirmed\">확인</Option>\r\n                        <Option value=\"closed\">닫은</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <p>세부 정보 (필요한 경우)</p>\r\n                    {/* <Form.Item\r\n                      {...compLayout}\r\n                      label=\"Detail info(if needs)\"\r\n                      name=\"additional_detail_info\"\r\n                      rules={[{ required: false, message: 'Please select detail info!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item> */}\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 12 }} >\r\n                    <Form.Item\r\n                      {...compLayout}\r\n                      label=\"부동산 이름\"\r\n                      name=\"property_name\"\r\n                      rules={[{ required: false, message: 'Please input property name!' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      // {...compLayout}\r\n                      label=\"선택권\"\r\n                      name=\"option\"\r\n                      rules={[{ required: true, message: 'Please select option !' }]}\r\n                    >\r\n                      {/* {getFieldDecorator(\"option\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Selecciona alumnos\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select\r\n                          size=\"large\"\r\n                          mode=\"multiple\"\r\n                          placeholder=\"Selecciona alumnos\"\r\n                        >\r\n                          {\r\n                          options.map((o, i) => {\r\n                            return <Option key={o.id}>{o.propertyFeatures}</Option>\r\n                          })\r\n                        }\r\n                        </Select>\r\n                      )} */}\r\n\r\n                      <Select mode=\"tags\" placeholder=\"Option\" onChange={this.handleOptionChange}\r\n                      >\r\n                        {\r\n                          options.map((o, i) => {\r\n                            return <Option key={o.id}>{o.propertyFeatures}</Option>\r\n                          })\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n\r\n                    <Form.Item\r\n                      // {...compLayout}\r\n                      label=\"유지 보수 비용\"\r\n                      name=\"maintenance_fee\"\r\n                      rules={[{ required: true, message: 'Please select Maintenance fee !' }]}\r\n                    >\r\n                      <Select mode=\"tags\" placeholder=\"Maintenance fee\" onChange={this.handleMaintenancefeeChange}>\r\n                        {\r\n                          maintenance_fee.map((m, i) => {\r\n                            return <Option key={m.id}>{m.propertyFacility}</Option>\r\n                          })\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"매니저 \"\r\n                      name=\"manager\"\r\n                      rules={[{ required: false, message: 'Please select Manager  !' }]}\r\n                    >\r\n                      <Input readonly disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"이미지 업로드 \"\r\n                      name=\"images\"\r\n                      rules={[{ required: false, message: 'Please select images  !' }]}\r\n                    >\r\n                      <Upload\r\n                        multiple\r\n                        maxCount={18}\r\n                        beforeUpload={() => false}\r\n                      >\r\n                        <Button icon={<UploadOutlined />}>클릭하여 업로드</Button>\r\n                      </Upload>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"계약 업로드\"\r\n                      name=\"contract_files\"\r\n                      rules={[{ required: false, message: 'Please select Contract files  !' }]}\r\n                    >\r\n                      <Upload\r\n                        multiple\r\n                        maxCount={20}\r\n                        beforeUpload={() => false}\r\n                      >\r\n                        <Button icon={<UploadOutlined />}>클릭하여 업로드</Button>\r\n                      </Upload>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"계약 명\"\r\n                      name=\"contract_name\"\r\n                      rules={[{ required: true, message: 'Please select contract name  !' }]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  {/* <img src=\"https://zeepsapis.herokuapp.com/property/1610955479184-bezkoder-73190697.jpg\"/> */}\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"계약 목록\"\r\n                      name=\"contract_list\"\r\n                      rules={[{ required: false, message: 'Please select Manager  !' }]}\r\n                    >\r\n                      <Table\r\n                        // rowSelection={{\r\n                        //   type: 'checkbox',\r\n                        //   ...rowSelection,\r\n                        // }}\r\n                        // rowSelection={rowSelection}\r\n                        columns={columns}\r\n                        dataSource={searchData}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Form.Item\r\n                      {...fullLayout}\r\n                      label=\"   관리자 코멘트\"\r\n                      name=\"manager_comment\"\r\n                      rules={[{ required: false, message: 'Please add Manager comment !' }]}\r\n                    >\r\n                      <TextArea rows={4} />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n\r\n                </Row>\r\n              </Form>\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterProperty;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\SearchProperty.js",["657","658","659","660","661","662"],"import React, { Component } from 'react';\r\n\r\nimport {\r\n  Layout, Form, Input, Button, message, Divider, Table, Select, Radio\r\n} from 'antd';\r\n\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport BaseUrl from '../../services/axios-url';\r\nimport TopNav from '../WithAuthHeaderFooter/TopNav';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport PropertySettingsAside from './property-settings-aside';\r\n\r\nconst axios = require('axios');\r\n\r\nconst { Content } = Layout;\r\n\r\nconst layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 20 },\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\nconst columns = [\r\n  {\r\n    title: '번호',\r\n    dataIndex: 'number',\r\n    // render: text => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: '주소',\r\n    dataIndex: 'address',\r\n  },\r\n  {\r\n    title: '이름',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: '회원 상태',\r\n    dataIndex: 'member_status'\r\n  },\r\n  {\r\n    title: '매니저',\r\n    dataIndex: 'manager',\r\n  },\r\n  {\r\n    title: '상태',\r\n    dataIndex: 'status',\r\n  },\r\n  {\r\n    title: '관리자 지정',\r\n    dataIndex: 'assign_manager'\r\n  },\r\n  {\r\n    title: '환경',\r\n    dataIndex: 'setting'\r\n  },\r\n\r\n];\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    number: '1',\r\n    address: 'Lorem ipsum',\r\n    name: 'Some name',\r\n    manager: 'lorem ipsum',\r\n    member_status: 'member',\r\n    status: 'Active',\r\n    assign_manager: 'here',\r\n    setting: 'edit'\r\n  },\r\n  {\r\n    key: '2',\r\n    number: '2',\r\n    address: 'Lorem ipsum',\r\n    name: 'Some name',\r\n    manager: 'lorem ipsum',\r\n    member_status: 'member',\r\n    status: 'Active',\r\n    assign_manager: 'here',\r\n    setting: 'Edit'\r\n  }\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\n\r\nclass SearchProperty extends Component {\r\n\r\n  state = {\r\n    showStatusOptions: false,\r\n    allData: [],\r\n    loading: false,\r\n    dataForFilters: []\r\n  }\r\n\r\n  handleSelectChange = (value) => {\r\n    console.log(`selected ${value}`);\r\n    if (value == 'status') {\r\n      this.setState({ showStatusOptions: true })\r\n    } else {\r\n      this.setState({ showStatusOptions: false })\r\n    }\r\n  }\r\n\r\n  onFinish = values => {\r\n    console.log('Success:', values);\r\n    this.setState({ loading: true })\r\n\r\n    axios\r\n      .post(BaseUrl + \"/adminapi/SearchProperty\", {\r\n        \"filtertype\": values.search_keyword,\r\n        \"keyword\": values.search,\r\n        \"ismember\": values.ismember\r\n      })\r\n      .then(res => {\r\n        // console.log(res)\r\n        if (res.data.status == 1) {\r\n          var AllData = res.data.data;\r\n\r\n          console.log(AllData)\r\n\r\n          this.setState({\r\n            totalRecords: AllData.length,\r\n\r\n          })\r\n          var finalData = [];\r\n\r\n          for (var i = 0; i < AllData.length; i++) {\r\n            finalData[i] = {\r\n              key: AllData[i].id,\r\n              id: AllData[i].id,\r\n              number: i + 1,\r\n              address: AllData[i].address,\r\n              name: AllData[i].name,\r\n              member_status: AllData[i].createdbytype,\r\n              manager: AllData[i].manager,\r\n              status: AllData[i].contractStatus,\r\n              assign_manager: <Button className=\"theme-btn-default \">\r\n                <Link to={'/assign-manager-to-property/' + AllData[i].id} >\r\n                  양수인\r\n              </Link>\r\n              </Button>,\r\n              setting: <Button className=\"theme-btn-default \">\r\n                <Link to={'/admin-get-single-property/' + AllData[i].id}>\r\n                  환경\r\n                          </Link>\r\n              </Button>\r\n            };\r\n          }\r\n          // console.log(finalData)\r\n          this.setState({ allData: finalData, loading: false, dataForFilters: finalData })\r\n        }\r\n        else {\r\n          message.error('Sorry!! Unable to fetch data from server..');\r\n          this.setState({ loading: false })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ loading: false });\r\n        console.log(error);\r\n        message.error('Sorry!! Something went wrong');\r\n      })\r\n  };\r\n\r\n  onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n\r\n    message.error('Please check your form values')\r\n\r\n  };\r\n\r\n  handleFilter(val) {\r\n    if (this.state.dataForFilters.length == '') {\r\n      message.error('Please make a search first..')\r\n    }\r\n    var updatedList = this.state.dataForFilters;\r\n    console.log(this.state.allData)\r\n\r\n    updatedList = updatedList.filter(function (item) {\r\n      console.log(item)\r\n      if (item.member_status) {\r\n        return item.member_status.toLowerCase().search(val) !== -1;\r\n      }\r\n\r\n    });\r\n\r\n    console.log(updatedList)\r\n    this.setState({ allData: updatedList });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { showStatusOptions, allData, loading } = this.state;\r\n\r\n    return (\r\n      <Layout>\r\n\r\n        <TopNav />\r\n\r\n        <Content >\r\n          <Layout className=\"site-layout-background\" >\r\n\r\n            < PropertySettingsAside />\r\n\r\n            <Content style={{ padding: '10px 24px' }}>\r\n\r\n\r\n              <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={this.onFinishFailed}\r\n              >\r\n                <Row>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n                    {/* <p>Search property</p> */}\r\n                  </Col>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 12 }} lg={{ span: 12 }} >\r\n\r\n                    {/*  <Button type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" >\r\n                        <Link to=\"/register-manager\">\r\n                        Register manager\r\n                        </Link>\r\n                      </Button>\r\n\r\n                      \r\n                      <Button className=\"theme-btn-default float-right\" shape=\"round\" style={{ 'marginRight': '20px' }}>\r\n                        <Link to=\"/member-setting\" >\r\n                          Back to list\r\n                        </Link>\r\n                      </Button> */}\r\n\r\n\r\n                  </Col>\r\n\r\n\r\n                  <Divider />\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }}  >\r\n                    {/* <h3>Search manager </h3> */}\r\n                  </Col>\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 7 }} >\r\n\r\n                    <Form.Item\r\n                      // {...compLayout}\r\n                      label=\"검색\"\r\n                      name=\"search_keyword\"\r\n                      rules={[{ required: true, message: 'Please input your keyword!' }]}\r\n                    >\r\n                      <Select defaultValue=\"\"\r\n                        onChange={this.handleSelectChange}>\r\n                        <Option value=\"\">고르다</Option>\r\n                        <Option value=\"name\">이름</Option>\r\n                        <Option value=\"manager\">매니저</Option>\r\n                        <Option value=\"status\">상태</Option>\r\n                      </Select>\r\n                      {/* <Input /> */}\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  {\r\n                    showStatusOptions ? <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 10 }} >\r\n                      <Form.Item\r\n                        // {...compLayout}\r\n                        label=\"\"\r\n                        name=\"search\"\r\n                        rules={[{ required: true, message: 'Please select from this list !' }]}\r\n                      >\r\n                        <Select defaultValue=\"\">\r\n                          <Option value=\"\">선택해주세요.</Option>\r\n                          <Option value=\"confirmation pending\">확인 대기 중</Option>\r\n                          <Option value=\"confirmed\">확인</Option>\r\n                          <Option value=\"closed\">닫은</Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col> : <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 10 }} >\r\n                        <Form.Item\r\n                          // {...compLayout}\r\n                          label=\"\"\r\n                          name=\"search\"\r\n                          rules={[{ required: true, message: 'Please input keyword!' }]}\r\n                        >\r\n                          <Input placeholder=\"검색어 입력\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                  }\r\n\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 7 }} >\r\n                    <Form.Item\r\n                      label=\"\"\r\n                      name=\"ismember\"\r\n                      rules={[{ required: false, message: 'Please select from buttons !' }]}\r\n                    >\r\n                      <Radio.Group buttonStyle=\"solid\"  >\r\n                        <Radio.Button value=\"true\">Member </Radio.Button>\r\n                        <Radio.Button value=\"false\">Non Member</Radio.Button>\r\n                      </Radio.Group>\r\n                    </Form.Item>\r\n                    {/* <Button onClick={() => this.handleFilter('member')}>회원</Button>\r\n                    <Button onClick={() => this.handleFilter('non-member')}>비회원</Button> */}\r\n                  </Col>\r\n\r\n\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Button loading={loading} type=\"primary\" className=\"theme-btn float-right\" shape=\"round\" htmlType=\"submit\">\r\n                      검색\r\n                      </Button>\r\n                  </Col>\r\n\r\n                  <Divider />\r\n\r\n                  <h3>검색 2개 / 전체 2개</h3>\r\n                  <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 24 }} >\r\n                    <Table\r\n                      rowSelection={{\r\n                        type: 'checkbox',\r\n                        ...rowSelection,\r\n                      }}\r\n                      columns={columns}\r\n                      dataSource={allData}\r\n                    />\r\n\r\n                  </Col>\r\n\r\n                </Row>\r\n              </Form>\r\n\r\n            </Content>\r\n\r\n          </Layout>\r\n        </Content>\r\n\r\n        <WithAuthFooter />\r\n\r\n      </Layout>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchProperty;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\PropertyProcessing.js",["663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682"],"import React, { Component } from 'react';\r\nimport WithAuthHeader from '../WithAuthHeaderFooter/WithAuthHeader';\r\nimport {\r\n    Layout, Button, Divider, Row, Col, Space, message, Collapse, Tabs, Alert\r\n} from 'antd';\r\n\r\nimport { DownloadOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport './register-property.css';\r\nimport '../css/global.css'\r\nimport { Link } from 'react-router-dom';\r\nimport BaseUrl from '../services/axios-url';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport Cookies from 'universal-cookie';\r\nimport logoRound from '../images/logo-round.png';\r\n\r\nconst axios = require('axios');\r\nconst { Content } = Layout;\r\n\r\nconst { Panel } = Collapse;\r\nconst { TabPane } = Tabs;\r\n\r\nclass PropertyProcessing extends Component {\r\n    state = {\r\n        showVerification: false,\r\n        loading: false,\r\n        visible: false,\r\n        ongoingPropertyData: [],\r\n        confirmPropertyData: [],\r\n        CCLoading: false,\r\n        notLoggenInUser: false,\r\n        propertyCount: 0\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const cookie = new Cookies();\r\n        const memberId = cookie.get('UU')\r\n\r\n        // Ongoing property list\r\n        const cookies = new Cookies();\r\n        var cookieName = btoa('zeeps');\r\n        // console.log('encodedStringBtoA', cookieName);\r\n        var finalCookieName = '';\r\n        finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n        var encodedStringBtoA = btoa('authorized');\r\n        // console.log('encodedStringBtoA', encodedStringBtoA);\r\n        var finalCookieValue = '';\r\n        finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n\r\n        // Form data begins\r\n        let apiEndpoint = '';\r\n        let formData = new FormData();\r\n\r\n        // already logged in user\r\n        if (cookies.get(finalCookieName) == finalCookieValue) {\r\n            axios\r\n                .get(BaseUrl + '/memberapi/GetOnGoingPropertyDeatilByMemberId/' + memberId)\r\n                .then((res) => {\r\n                    // console.log(res)\r\n                    if (res.data.status == 1 || res.data.status == '1') {\r\n                        this.setState({ ongoingPropertyData: res.data.data })\r\n                    } else {\r\n                        message.error('Sorry!! Unable to fetch data from server..');\r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    message.error('Server error');\r\n                })\r\n\r\n\r\n            // get confirmed contract list\r\n            axios\r\n                .get(BaseUrl + '/memberapi/GetConfirmedClosedPropertyByMemberId/' + memberId)\r\n                .then((res) => {\r\n                    // console.log(res)\r\n                    if (res.data.status == 1 || res.data.status == '1') {\r\n                        this.setState({ confirmPropertyData: res.data.data })\r\n                    } else {\r\n                        message.error('Sorry!! Unable to fetch data from server..');\r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    message.error('Server error');\r\n                })\r\n\r\n            // get member name and total number of contracts\r\n            axios\r\n                .get(BaseUrl + '/memberapi/GetPropertyCountByMemberId/' + memberId)\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    if (res.data.status == 1 || res.data.status == '1') {\r\n                        this.setState({\r\n                            memberName: res.data.data.name,\r\n                            propertyCount: res.data.data.propertyCount\r\n                        })\r\n                    } else {\r\n                        message.error('Sorry!! Unable to fetch data from server..');\r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    message.error('Server error');\r\n                })\r\n\r\n\r\n        }\r\n        // Not logged in user\r\n        else if (cookies.get(finalCookieName) == undefined || cookies.get(finalCookieName) == 'undefined') {\r\n            this.setState({\r\n                ongoingPropertyData: [],\r\n                confirmPropertyData: [],\r\n                notLoggenInUser: true\r\n            })\r\n\r\n\r\n            // axios\r\n            //     .post(\"https://zeepsapis.herokuapp.com/adminapi/UpdateFeatureList\", {\r\n            //     .post(\"https://zeepsapis.herokuapp.com/adminapi/UpdateFacilityList\", {\r\n            //         \"id\": 12,\r\n            //         \"propertyFeatures\": \"싱크대\"\r\n            // \"propertyFacility\":\"abc\"\r\n            //     })\r\n            //     .then((res) => {\r\n            //         console.log(res)\r\n            //         if (res.data.status == 1 || res.data.status == '1') {\r\n            //             message.success('ok');\r\n            //             // this.setState({\r\n            //             //     memberName: res.data.data.name,\r\n            //             //     propertyCount: res.data.data.propertyCount\r\n            //             // })\r\n            //         } else {\r\n            //         }\r\n\r\n            //     })\r\n            //     .catch((error) => {\r\n            //         console.log(error);\r\n            //         message.error('Server error');\r\n            //     })\r\n\r\n        }\r\n        // Not a normal user\r\n        else {\r\n            message.error('Unauthenticated User!')\r\n            return;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    confirmContract = (id) => {\r\n        console.log(id)\r\n        this.setState({ CCLoading: true })\r\n\r\n        axios.post(BaseUrl + \"/memberapi/UpdatePropertyStatusByPropertyId\", {\r\n            \"id\": id,\r\n            \"memberContractStatus\": \"confirmed\"\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status == 1) {\r\n                    message.success('Contract confirmed successfully')\r\n\r\n                    const cookie = new Cookies();\r\n                    const memberId = cookie.get('UU')\r\n\r\n                    axios\r\n                        .get(BaseUrl + '/memberapi/GetOnGoingPropertyDeatilByMemberId/' + memberId)\r\n                        .then((res) => {\r\n                            // console.log(res)\r\n                            if (res.data.status == 1 || res.data.status == '1') {\r\n                                this.setState({ ongoingPropertyData: res.data.data })\r\n                            } else {\r\n                                message.error('Sorry!! Unable to fetch data from server..');\r\n                            }\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                            message.error('Server error');\r\n                        })\r\n\r\n                }\r\n                else {\r\n                    message.error(res.data.message);\r\n                }\r\n                this.setState({ CCLoading: false })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n                this.setState({ CCLoading: false })\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { loading, ongoingPropertyData, confirmPropertyData, CCLoading, notLoggenInUser, memberName, propertyCount } = this.state;\r\n\r\n        const onFinish = values => {\r\n            console.log('Success:', values);\r\n        };\r\n\r\n        const onFinishFailed = errorInfo => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n\r\n        console.log(this.state.confirmPropertyData)\r\n        // File Upload code end ------------------------------------------------------------------------------\r\n\r\n        return (\r\n            <Layout className=\"register-property-layout\">\r\n\r\n                <WithAuthHeader />\r\n\r\n                <Content>\r\n\r\n                    <Layout className=\"site-layout-background\" >\r\n                        <Space direction=\"vertical\" size={'large'}>\r\n                            <Content className=\"content-padding\" >\r\n                                <Row className=\"\">\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} >\r\n                                        {/* Left Side */}\r\n                                    </Col>\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} className=\"\" >\r\n                                        <Row>\r\n\r\n                                            <Col className=\"text-center mb-15\" span={24} >\r\n                                                {/* <h2>Logo</h2> */}\r\n                                                <img src={logoRound} />\r\n                                            </Col>\r\n\r\n                                            <Col className=\"text-center mb-15\" span={24} >\r\n                                                <h2>{memberName}</h2>\r\n                                                <p>{propertyCount}건</p>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={24} >\r\n                                                <Button type=\"primary\" className=\"theme-btn width100\" ><Link to=\"/register-property\">집 내놓기</Link></Button>\r\n                                            </Col>\r\n\r\n                                            <Divider />\r\n\r\n                                            <Tabs defaultActiveKey=\"1\" className=\"width100 mb-15\" >\r\n                                                <TabPane tab=\"중개중 부동산\" key=\"1\">\r\n                                                    {\r\n                                                        notLoggenInUser && <Row>\r\n                                                            <Col span={24}>\r\n                                                                <Alert\r\n                                                                    showIcon\r\n                                                                    message=\"로그인 해주세요\"\r\n                                                                    description=\"진행중인 부동산 목록을 보려면 로그인하십시오\" type=\"info\"\r\n                                                                    type=\"info\"\r\n                                                                />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    }\r\n\r\n                                                    {ongoingPropertyData.map((d, i) => {\r\n                                                        return <Row key={i} className=\"border-light p-10 mb-10\">\r\n                                                            <Col className=\" mb-15\" span={12} >\r\n                                                                <b>계약정보∙계약대기</b>\r\n                                                            </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <Button shape=\"round\" className=\"theme-btn-default\">계약서 히스토리</Button>\r\n                                                            </Col>\r\n\r\n                                                            <Col span={24}>\r\n                                                                <Link to={'/property-detail/' + d.id}>\r\n                                                                    <h2 className=\"theme-color\">\r\n                                                                        {d.name}\r\n                                                                    </h2>\r\n                                                                </Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col className=\" mb-15\" span={12} >담당자 </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>{d.manager}</b>\r\n                                                            </Col>\r\n\r\n                                                            <Col className=\" mb-15\" span={12} >주소   </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>{d.address}</b>\r\n                                                            </Col>\r\n\r\n                                                            <Col className=\" mb-15\" span={12} >거래유형 </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>{d.propertyType}</b>\r\n                                                            </Col>\r\n\r\n                                                            {/* <Col className=\" mb-15\" span={12} >Maintenance fee </Col> */}\r\n                                                            <Col className=\" mb-15\" span={12} >관리비 </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>{d.maintanceFee}</b>\r\n                                                            </Col>\r\n\r\n                                                            {/* <Col className=\" mb-15\" span={12} >Floor </Col> */}\r\n                                                            <Col className=\" mb-15\" span={12} >층 </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>7th</b>\r\n                                                            </Col>\r\n\r\n                                                            <Collapse className=\" mb-15\" defaultActiveKey=\"\" style={{ width: '100%' }} >\r\n                                                                <Panel header=\"&nbsp;\" key=\"1\">\r\n                                                                    <Row>\r\n                                                                        <Col className=\" mb-15\" span={12} >\r\n                                                                            방 번호\r\n                                                                        </Col>\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.rooms}</b>\r\n                                                                        </Col>\r\n\r\n                                                                        <Col className=\" mb-15\" span={12} >방향 </Col>\r\n\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.direction}</b>\r\n                                                                        </Col>\r\n                                                                        <Col className=\" mb-15\" span={12} >전용 구역</Col>\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.areaSquare}</b>\r\n                                                                        </Col>\r\n                                                                        <Col className=\" mb-15\" span={12} >엘리베이터 </Col>\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.elevator ? 'Available' : 'Not Available'}</b>\r\n                                                                        </Col>\r\n                                                                        <Col className=\" mb-15\" span={12} >입주 가능 날짜  </Col>\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.availableMoveInDate}</b>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </Panel>\r\n                                                            </Collapse>\r\n\r\n                                                            {d.manager ?\r\n                                                                <Space>\r\n                                                                    <Row>\r\n                                                                        <Col className=\" mb-15\" style={{ 'marginRight': '5px' }} xs={24} sm={11} >\r\n                                                                            <Button block shape=\"round\" icon={<DownloadOutlined />} className=\"theme-btn-default\">계약서 다운로드 </Button>\r\n                                                                        </Col>\r\n                                                                        <Col className=\"text-right mb-15\" xs={24} sm={11} >\r\n                                                                            <Button\r\n                                                                                block\r\n                                                                                shape=\"round\"\r\n                                                                                icon={<CheckOutlined />} className=\"theme-btn\"\r\n                                                                                onClick={() => this.confirmContract(d.id)}\r\n                                                                                loading={CCLoading}\r\n                                                                            >\r\n                                                                                계약서 컨펌하기\r\n                                                                        </Button>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </Space>\r\n                                                                :\r\n                                                                <Space>\r\n                                                                    <Row>\r\n                                                                        <Col className=\" mb-15\" style={{ 'marginRight': '5px' }} xs={24} sm={11} >\r\n                                                                            <Button block shape=\"round\" icon={<DownloadOutlined />} className=\"disabled-btn-default\" disabled=\"disabled\">계약서 다운로드 </Button>\r\n                                                                        </Col>\r\n                                                                        <Col className=\"text-right mb-15\" xs={24} sm={11}>\r\n                                                                            <Button block shape=\"round\" icon={<CheckOutlined />} className=\"disabled-btn\" disabled=\"disabled\"\r\n                                                                            >계약서 컨펌하기 </Button>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </Space>\r\n                                                            }\r\n                                                        </Row>\r\n\r\n                                                    })}\r\n                                                </TabPane>\r\n\r\n                                                <TabPane tab=\"마이 부동산\" key=\"2\">\r\n\r\n                                                    {\r\n                                                        notLoggenInUser && <Row>\r\n                                                            <Col span={24}>\r\n                                                                <Alert\r\n                                                                    showIcon\r\n                                                                    message=\"로그인 해주세요\"\r\n                                                                    description=\"속성 목록을 보려면 로그인하십시오\" type=\"info\"\r\n                                                                    type=\"info\"\r\n                                                                />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    }\r\n                                                    {confirmPropertyData.map((d, i) => {\r\n                                                        return <Row key={i} className=\"border-light p-10 mb-10\">\r\n                                                            <Col className=\" mb-15\" span={12} >\r\n                                                                <b>계약정보∙계약완료</b>\r\n                                                            </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <Button shape=\"round\" className=\"theme-btn-default\">계약서 히스토리 </Button>\r\n                                                            </Col>\r\n\r\n                                                            <Col span={24}>\r\n                                                                <Link to={'/property-detail/' + d.id}>\r\n                                                                    <h2 className=\"theme-color\">\r\n                                                                        {d.name}\r\n                                                                    </h2>\r\n                                                                </Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col className=\" mb-15\" span={12} >담당자 </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>{d.manager}</b>\r\n                                                            </Col>\r\n\r\n                                                            <Col className=\" mb-15\" span={12} >주소   </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>{d.address}</b>\r\n                                                            </Col>\r\n\r\n                                                            <Col className=\" mb-15\" span={12} >거래유형 </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>{d.propertyType}</b>\r\n                                                            </Col>\r\n\r\n                                                            <Col className=\" mb-15\" span={12} >관리비 </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>{d.maintanceFee}</b>\r\n                                                            </Col>\r\n\r\n                                                            <Col className=\" mb-15\" span={12} >층 </Col>\r\n                                                            <Col className=\"text-right mb-15\" span={12} >\r\n                                                                <b>7th</b>\r\n                                                            </Col>\r\n\r\n                                                            <Collapse className=\" mb-15\" defaultActiveKey=\"\" style={{ width: '100%' }} >\r\n                                                                <Panel header=\"&nbsp;\" key=\"1\">\r\n                                                                    <Row>\r\n                                                                        <Col className=\" mb-15\" span={12} >\r\n                                                                            방 번호\r\n                                                                        </Col>\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.rooms}</b>\r\n                                                                        </Col>\r\n\r\n                                                                        <Col className=\" mb-15\" span={12} >방향 </Col>\r\n\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.direction}</b>\r\n                                                                        </Col>\r\n                                                                        <Col className=\" mb-15\" span={12} >전용 구역</Col>\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.areaSquare}</b>\r\n                                                                        </Col>\r\n                                                                        <Col className=\" mb-15\" span={12} >엘리베이터 </Col>\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.elevator ? 'Available' : 'Not Available'}</b>\r\n                                                                        </Col>\r\n                                                                        <Col className=\" mb-15\" span={12} >입주 가능 날짜  </Col>\r\n                                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                                            <b>{d.availableMoveInDate}</b>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </Panel>\r\n                                                            </Collapse>\r\n\r\n                                                            {/* {d.manager ?\r\n                                                                <Space>\r\n                                                                    <Col className=\" mb-15\" span={24} >\r\n                                                                        <Button block shape=\"round\" icon={<DownloadOutlined />} className=\"theme-btn-default\">Download Contract </Button>\r\n                                                                    </Col>\r\n                                                                    <Col className=\"text-right mb-15\" span={24} >\r\n                                                                        <Button block shape=\"round\" icon={<CheckOutlined />} className=\"theme-btn\">Confirm Contract </Button>\r\n                                                                    </Col>\r\n                                                                </Space>\r\n                                                                :\r\n                                                                <Space>\r\n                                                                    <Col className=\" mb-15\" span={24} >\r\n                                                                        <Button shape=\"round\" icon={<DownloadOutlined />} className=\"disabled-btn-default\" disabled=\"disabled\">Download Contract </Button>\r\n                                                                    </Col>\r\n                                                                    <Col className=\"text-right mb-15\" span={12} >\r\n                                                                        <Button shape=\"round\" icon={<CheckOutlined />} className=\"disabled-btn\" disabled=\"disabled\">Confirm Contract </Button>\r\n                                                                    </Col>\r\n                                                                </Space>\r\n                                                            } */}\r\n                                                        </Row>\r\n\r\n                                                    })}\r\n                                                    {/*                                                     \r\n                                                    <Row className=\"border-light p-10\">\r\n                                                        <Col className=\" mb-15\" span={12} >\r\n                                                            <b>Contract info </b>\r\n                                                        </Col>\r\n                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                            <Button shape=\"round\" className=\"theme-btn-default\">Contract history </Button>\r\n                                                        </Col>\r\n\r\n                                                        <Col span={24}>\r\n                                                            <h2 className=\"theme-color\">Lorem Ipsum Dollar sit amet</h2>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\" mb-15\" span={12} >Manager </Col>\r\n                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                            <b>lorem ipsum</b>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\" mb-15\" span={12} >Address   </Col>\r\n                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                            <b>lorem ipsum</b>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\" mb-15\" span={12} >Type </Col>\r\n                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                            <b>lorem ipsum</b>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\" mb-15\" span={12} >Maintenance fee </Col>\r\n                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                            <b>lorem ipsum</b>\r\n                                                        </Col>\r\n\r\n                                                        <Col className=\" mb-15\" span={12} >Floor </Col>\r\n                                                        <Col className=\"text-right mb-15\" span={12} >\r\n                                                            <b>7th</b>\r\n                                                        </Col>\r\n\r\n                                                       \r\n                                                        <Collapse className=\" mb-15\" defaultActiveKey={['1']} style={{ width: '100%' }} >\r\n                                                            <Panel header=\"&nbsp;\" key=\"1\">\r\n                                                                <Row>\r\n                                                                    <Col className=\" mb-15\" span={12} >\r\n                                                                    방 번호</Col>\r\n                                                                    <Col className=\"text-right mb-15\" span={12} >\r\n                                                                        <b>lorem ipsum</b>\r\n                                                                    </Col>\r\n\r\n                                                                    <Col className=\" mb-15\" span={12} >Direction </Col>\r\n\r\n                                                                    <Col className=\"text-right mb-15\" span={12} >\r\n                                                                        <b>lorem ipsum</b>\r\n                                                                    </Col>\r\n                                                                    <Col className=\" mb-15\" span={12} >전용 구역</Col>\r\n                                                                    <Col className=\"text-right mb-15\" span={12} >\r\n                                                                        <b>lorem ipsum</b>\r\n                                                                    </Col>\r\n                                                                    <Col className=\" mb-15\" span={12} >엘리베이터 </Col>\r\n                                                                    <Col className=\"text-right mb-15\" span={12} >\r\n                                                                        <b>lorem ipsum</b>\r\n                                                                    </Col>\r\n                                                                    <Col className=\" mb-15\" span={12} >입주 가능 날짜  </Col>\r\n                                                                    <Col className=\"text-right mb-15\" span={12} >\r\n                                                                        <b>lorem ipsum</b>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </Panel>\r\n                                                        </Collapse>\r\n\r\n                                                    </Row> */}\r\n\r\n                                                </TabPane>\r\n                                            </Tabs>\r\n\r\n\r\n                                        </Row>\r\n\r\n\r\n\r\n                                    </Col>\r\n\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 6 }} >\r\n                                        {/* Right Side */}\r\n                                    </Col>\r\n\r\n\r\n\r\n                                </Row>\r\n\r\n                            </Content>\r\n                        </Space>\r\n                    </Layout>\r\n                </Content>\r\n\r\n                <WithAuthFooter />\r\n\r\n            </Layout >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default PropertyProcessing;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\RegisterProperty\\RegisterProperty.js",["683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721"],"import React, { Component } from 'react';\r\nimport WithAuthHeader from '../WithAuthHeaderFooter/WithAuthHeader';\r\nimport {\r\n    Layout, Form, Input, Button, Checkbox, Menu, Divider, Row, Col, Space, Modal, Steps, Radio, Select, Tag, DatePicker, Upload, message, Card\r\n} from 'antd';\r\n\r\nimport { UploadOutlined, SearchOutlined, ReloadOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport './register-property.css';\r\nimport '../css/global.css'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport BaseUrl from '../services/axios-url';\r\nimport WithAuthFooter from '../WithAuthHeaderFooter/WithAuthFooter';\r\nimport Cookies from 'universal-cookie';\r\nimport requiredIcon from \"../images/required.png\";\r\nimport metersq from '../images/metersq.png';\r\n\r\nconst axios = require('axios');\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst { Step } = Steps;\r\nconst { Option } = Select;\r\nconst { CheckableTag } = Tag;\r\n// const tagsData = ['Electricity', 'Gas', 'Water', 'Internet', 'Tv', 'n/a']; // maintainence fee\r\nconst optionData = ['A/C', 'Refrigerator', 'Washing machine', 'Stove', 'Induction', 'Microwave', 'Desk', 'bookshelf', 'Bed', 'Closet', 'Shoe rack', 'Sink'];    // options  \r\nconst typeData = ['For Sale', 'For Rent'];\r\n// const typeData = ['판매용', '임대료'];\r\n\r\n\r\n\r\n\r\n// function onTypeChange(e) {\r\n//     console.log(`radio checked:${e.target.value}`);\r\n// }\r\nfunction handleStructureChange(value) {\r\n    console.log(`selected ${value}`);\r\n}\r\nfunction handleDirectionChange(value) {\r\n    console.log(`selected ${value}`);\r\n}\r\nfunction onChangeAvailableDate(date, dateString) {\r\n    console.log(date, dateString);\r\n}\r\n\r\n\r\nclass RegisterProperty extends Component {\r\n\r\n\r\n    state = {\r\n        selectedTags: ['Electricity'],\r\n        selectedTagsId: [1],\r\n        selectedTagsIdString: '',\r\n        optionTags: ['Refrigerator'],\r\n        optionTagsId: [1],\r\n        optionTagsIdString: 1,\r\n        previewVisible: false,\r\n        previewImage: \"\",\r\n        fileList: [],\r\n        isHouseOwner: false,\r\n        type: 'For Sale',\r\n        elevator: 'Yes',\r\n        structure: 'One Room',\r\n        direction: 'East',\r\n        publicPrivate: '',\r\n        pet: '',\r\n        mortgage: '',\r\n        avalDate: '',\r\n        AvalDateChangeDatePicker: '',\r\n        actual_available_date: '',\r\n        AreaInSqm: '',\r\n        loading: false,\r\n        tagsData: [],\r\n        optionData: [],\r\n        showMemberName: false,\r\n        selectedType: [],\r\n        selectedTypeString: '',\r\n        dedicatedArea1: '20',\r\n        dedicatedArea2: '30',\r\n        dedicatedArea3: '36',\r\n        propertySaved: false\r\n    }\r\n\r\n    onAreaChange = (e) => {\r\n        // console.log(`radio checked:${e.target.value}`);\r\n        var data = e.target.value * 3.306\r\n        // console.log(data)\r\n        this.setState({\r\n            AreaInSqm: data\r\n        })\r\n    }\r\n\r\n    onAreaChangeInSqMt = () => {\r\n        this.setState({\r\n            dedicatedArea1: 20 * 3.306,\r\n            dedicatedArea2: 30 * 3.306,\r\n            dedicatedArea3: 36 * 3.306,\r\n        })\r\n    }\r\n\r\n    handleMaintainenceFeeChange(tag, checked, i) {\r\n        const { selectedTags, selectedTagsId } = this.state;\r\n        const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n        const nextSelectedTagsId = checked ? [...selectedTagsId, i] : selectedTagsId.filter(qt => qt !== i);\r\n        // console.log('You are interested in: ', nextSelectedTags);\r\n        console.log('You are interested in: ', nextSelectedTagsId);\r\n\r\n        this.setState({\r\n            selectedTags: nextSelectedTags,\r\n            selectedTagsId: nextSelectedTagsId\r\n        });\r\n\r\n        var separator = ',';\r\n        var implodedArray = nextSelectedTagsId.join(separator);\r\n        console.log(implodedArray);\r\n        this.setState({\r\n            selectedTagsIdString: implodedArray\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleOptionDataChange(tag, checked, i) {\r\n        const { optionTags, optionTagsId } = this.state;\r\n        const nextSelectedTags = checked ? [...optionTags, tag] : optionTags.filter(t => t !== tag);\r\n        const nextSelectedTagsId = checked ? [...optionTagsId, i] : optionTagsId.filter(wt => wt !== i);\r\n        console.log('You are interested in: ', nextSelectedTagsId);\r\n        this.setState({\r\n            optionTags: nextSelectedTags,\r\n            optionTagsId: nextSelectedTagsId,\r\n        });\r\n\r\n        var separator = ',';\r\n        var implodedArray = nextSelectedTagsId.join(separator);\r\n        console.log(implodedArray);\r\n        this.setState({\r\n            optionTagsIdString: implodedArray\r\n        })\r\n    }\r\n\r\n    handleTypeChange(tag, checked) {\r\n        const { selectedType } = this.state;\r\n        const nextSelectedType = checked ? [...selectedType, tag] : selectedType.filter(t => t !== tag);\r\n        console.log('You are interested in: ', nextSelectedType);\r\n        this.setState({\r\n            selectedType: nextSelectedType,\r\n            selectedTypeString: nextSelectedType.join(',')\r\n        });\r\n\r\n        \r\n        // console.log(nextSelectedType.join(','))\r\n        // console.log(\"forsale---------->\", nextSelectedType.join(',').search(\"For Sale\"));\r\n        // console.log(\"forRent---------->\", nextSelectedType.join(',').search(\"For Rent\"));\r\n    }\r\n\r\n    // file upload code start----------------------------------------------\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n    handlePreview = file => {\r\n        this.setState({\r\n            previewImage: file.thumbUrl,\r\n            previewVisible: true\r\n        });\r\n    };\r\n\r\n    onHouseOwnerChange = (e) => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            isHouseOwner: !this.state.isHouseOwner,\r\n            HouseOwner: e.target.value\r\n        })\r\n    }\r\n\r\n    onAvalDateChange = (e) => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n            avalDate: e.target.value\r\n        })\r\n    }\r\n    onAvalDateChangeDatePicker = (date, dateString) => {\r\n        console.log(date, dateString);\r\n        this.setState({\r\n            AvalDateChangeDatePicker: dateString\r\n        })\r\n    }\r\n\r\n    onTypeChange = e => {\r\n        console.log(`radio checked:${e.target.value}`);\r\n        this.setState({\r\n            type: e.target.value,\r\n        });\r\n    }\r\n\r\n    onElevatorChange = e => {\r\n        console.log(`radio checked:${e.target.value}`);\r\n        this.setState({\r\n            elevator: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleStructureChange = value => {\r\n        console.log(`selected ${value}`);\r\n        this.setState({\r\n            structure: value\r\n        })\r\n    }\r\n\r\n    handleDirectionChange = value => {\r\n        console.log(`selected ${value}`);\r\n        this.setState({\r\n            direction: value\r\n        })\r\n    }\r\n\r\n    onChangePublicPrivate = e => {\r\n        // console.log('checked = ', checkedValues);\r\n        console.log(`radio checked:${e.target.value}`);\r\n        this.setState({\r\n            publicPrivate: e.target.value,\r\n        });\r\n    }\r\n\r\n    onPetChange = e => {\r\n        // console.log('checked = ', checkedValues);\r\n        console.log(`radio checked:${e.target.value}`);\r\n        this.setState({\r\n            pet: e.target.value,\r\n        });\r\n    }\r\n\r\n    onMortgageChange = e => {\r\n        // console.log('checked = ', checkedValues);\r\n        console.log(`radio checked:${e.target.value}`);\r\n        this.setState({\r\n            mortgage: e.target.value,\r\n        });\r\n    }\r\n\r\n    onDateChange = (date, dateString) => {\r\n        // console.log(dateString);\r\n        this.setState({\r\n            actual_available_date: dateString\r\n        })\r\n\r\n    }\r\n\r\n    handleUpload = ({ fileList }) => {\r\n        //---------------^^^^^----------------\r\n        // this is equivalent to your \"const img = event.target.files[0]\"\r\n        // here, antd is giving you an array of files, just like event.target.files\r\n        // but the structure is a bit different that the original file\r\n        // the original file is located at the `originFileObj` key of each of this files\r\n        // so `event.target.files[0]` is actually fileList[0].originFileObj\r\n        console.log('fileList', fileList);\r\n\r\n        // you store them in state, so that you can make a http req with them later\r\n        this.setState({ fileList });\r\n    };\r\n\r\n    isLoggedIn = () => {\r\n        const cookies = new Cookies();\r\n        var cookieName = btoa('zeeps');\r\n        // console.log('encodedStringBtoA', cookieName);\r\n        var finalCookieName = '';\r\n        finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n\r\n        if (cookies.get(finalCookieName) == undefined || cookies.get(finalCookieName) == 'undefined') {\r\n            console.log('cookies.get(finalCookieName)');\r\n            this.setState({ showMemberName: true })\r\n        } else {\r\n            this.setState({ showMemberName: false })\r\n        }\r\n\r\n        var encodedStringBtoA = btoa('authorized');\r\n        // console.log('encodedStringBtoA', encodedStringBtoA);\r\n        var finalCookieValue = '';\r\n        finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n    }\r\n\r\n    onFinish = values => {\r\n\r\n        this.setState({ propertySaved: true })\r\n\r\n\r\n        this.setState({ loading: true });\r\n        console.log('Success:', values);\r\n\r\n        const cookies = new Cookies();\r\n        var cookieName = btoa('zeeps');\r\n        // console.log('encodedStringBtoA', cookieName);\r\n        var finalCookieName = '';\r\n        finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n        var encodedStringBtoA = btoa('authorized');\r\n        // console.log('encodedStringBtoA', encodedStringBtoA);\r\n        var finalCookieValue = '';\r\n        finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n\r\n        // Form data begins\r\n        let apiEndpoint = '';\r\n        let formData = new FormData();\r\n\r\n        // already logged in user\r\n        if (cookies.get(finalCookieName) == finalCookieValue) {\r\n            if (cookies.get('UU')) {\r\n                var LoggedInUserId = '';\r\n                var LoggedInUserId = cookies.get('UU');\r\n                formData.append(\"memberId\", LoggedInUserId);\r\n\r\n                apiEndpoint = 'MemberInsertProperty';\r\n            } else {\r\n                message.error('Unauthenticated User!!')\r\n                return;\r\n            }\r\n        }\r\n        // Not logged in user\r\n        else if (cookies.get(finalCookieName) == undefined || cookies.get(finalCookieName) == 'undefined') {\r\n            formData.append(\"m_name\", values.m_name);\r\n            apiEndpoint = 'UnSignedMemberInsertProperty';\r\n        }\r\n        // Not a normal user \r\n        else {\r\n            message.error('Unauthenticated User!')\r\n            return;\r\n        }\r\n\r\n\r\n        formData.append(\"name\", values.name);\r\n        formData.append(\"address\", values.address);\r\n        formData.append(\"detailAddress\", values.detail_address);\r\n        formData.append(\"showAddress\", values.property_type);   // public, private\r\n        formData.append(\"areaSquare\", this.state.AreaInSqm);\r\n        formData.append(\"propertyType\", this.state.selectedTypeString);       // Sale, rent\r\n        formData.append(\"elevator\", values.elevator);\r\n        formData.append(\"rooms\", values.structure);\r\n        formData.append(\"direction\", values.direction);\r\n        formData.append(\"availableMoveInStatus\", values.available_date);\r\n        formData.append(\"availableMoveInDate\", this.state.actual_available_date);\r\n        formData.append(\"isLandlord\", values.house_owner);\r\n        formData.append(\"isPetAvailable\", values.pet);\r\n        formData.append(\"isMortgage\", values.mortgage);\r\n        formData.append(\"contractStatus\", 'no');\r\n        formData.append(\"propertyCost\", 0);\r\n        formData.append(\"maintanceFee\", '100');\r\n        formData.append(\"propertyFeatureId\", this.state.optionTagsIdString);    // options ids\r\n        formData.append(\"propertyFacilityId\", this.state.selectedTagsIdString); //maintainence fee id\r\n        formData.append(\"memberContractStatus\", \"confirmation pending\"); //maintainence fee id\r\n        formData.append(\"mobile\", values.owner_contact_no); //maintainence fee id\r\n        // formData.append(\"maintanceCost\", '20,20,20,20,20'); // maintainence fee cost\r\n        // formData.append(\"property\", this.state.fileList[0].originFileObj);\r\n\r\n        values.images.fileList.forEach(file => {\r\n            formData.append('property', file.originFileObj);\r\n        });\r\n\r\n\r\n        axios.post(BaseUrl + \"/propertyapi/\" + apiEndpoint, formData)\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status == 1) {\r\n                    message.success('Success.. Property registered successfully. Redirecting you..')\r\n\r\n                    // this.setState({ propertySaved: true })\r\n\r\n                    // window.location = '/register-property-step-two';\r\n                }\r\n                else {\r\n                    message.error(res.data.message)\r\n                }\r\n                this.setState({ loading: false });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n                this.setState({ loading: false });\r\n            })\r\n    };\r\n\r\n    onFinishFailed = errorInfo => {\r\n        this.setState({ propertySaved: true })\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        this.isLoggedIn();\r\n        // get maintanence fee / facilities ------------------------------------------\r\n        axios\r\n            .get(BaseUrl + '/adminapi/GetAllPropertyFacilities/')\r\n            .then((response) => {\r\n\r\n                console.log(response.data.data)\r\n                if (response.data.status == 1 || response.data.status == '1') {\r\n                    // console.log(\"dddd: \", data.data.id);\r\n                    this.setState({\r\n                        tagsData: response.data.data\r\n                    })\r\n\r\n                } else {\r\n                    message.error(response.data.message);\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n\r\n            })\r\n\r\n        // get options ----------------------------------------------\r\n        axios\r\n            .get(BaseUrl + '/adminapi/GetAllPropertyFeatures/')\r\n            .then((response) => {\r\n\r\n                console.log(response.data.data)\r\n                if (response.data.status == 1 || response.data.status == '1') {\r\n                    // console.log(\"dddd: \", data.data.id);\r\n                    this.setState({\r\n                        optionData: response.data.data\r\n                    })\r\n\r\n                } else {\r\n                    message.error(response.data.message);\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Something went wrong');\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.optionTagsIdString)\r\n        const { type, elevator, pet, loading, tagsData, optionData, showMemberName, selectedType, propertySaved } = this.state;\r\n\r\n        const requiiredIconStyle = {\r\n            marginTop: '-8px',\r\n            width: '5px',\r\n        }\r\n\r\n        const { selectedTags, selectedTagsId } = this.state;\r\n        const { optionTags, optionTagsId } = this.state;\r\n\r\n        // File Upload code start ----------------------------------------------------------------------------\r\n        const { previewVisible, previewImage, fileList } = this.state;\r\n        const uploadButton = (\r\n            <div>\r\n                {/* <Icon type=\"plus\" /> */}\r\n                <PlusOutlined />\r\n                <div className=\"ant-upload-text\">업로드</div>\r\n            </div>\r\n        );\r\n\r\n        if (propertySaved) {\r\n            return <Redirect to={{\r\n                pathname: \"register-property-step-two\",\r\n                state: { data: this.state.selectedTypeString }\r\n            }} />\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <Layout className=\"register-property-layout\">\r\n\r\n                <WithAuthHeader />\r\n\r\n                <Content>\r\n\r\n                    <Layout className=\"site-layout-background\" >\r\n                        <Space direction=\"vertical\" size={'large'}>\r\n                            <Content className=\"content-padding\" >\r\n                                <Row className=\"\">\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} >\r\n                                        {/* Left Side */}\r\n                                    </Col>\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 8 }} className=\"text-center\" >\r\n                                        <Row>\r\n\r\n                                            <Col className=\" mb-15\" span={24} >\r\n                                                <h2>등록 재산</h2>\r\n                                            </Col>\r\n\r\n                                            <Col className=\"mb-15\" span={24} >\r\n                                                <Steps progressDot current={0}>\r\n                                                    <Step title=\"1단계\" description=\"\" />\r\n                                                    <Step title=\"2단계\" subTitle=\"\" description=\"\" />\r\n                                                    <Step title=\"3단계\" description=\"\" />\r\n                                                </Steps>\r\n                                            </Col>\r\n\r\n                                            <Col className=\" mb-15\" span={24}>\r\n                                                <h3>집 내놓기 정보를 등록해주세요!</h3>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <Form\r\n                                            // {...layout}\r\n                                            name=\"basic\"\r\n                                            initialValues={{ remember: true }}\r\n                                            onFinish={this.onFinish}\r\n                                            onFinishFailed={this.onFinishFailed}\r\n                                        >\r\n                                            <Row>\r\n\r\n                                                <Col className=\"\" span={22}>\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"search_address\"\r\n                                                        rules={[{ required: false, message: 'Please input your address!' }]}\r\n                                                    >\r\n                                                        <Input placeholder=\"주소 검색\" />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col className=\"\" span={2}>\r\n                                                    <Button className=\"theme-btn\"><SearchOutlined /></Button>\r\n                                                </Col>\r\n\r\n                                                <Space direction=\"vertical\" >\r\n                                                    <Col className=\"text-left\" span={24}>\r\n                                                        <Card title=\"로렘 입섬\" extra={<Link to=\"#\">고르다</Link>} >\r\n                                                            <p>는이 레이어와 항공사 샐러드에서 자금을 조달했습니다. 는이 레이어와 항공사 샐러드에서 자금을 조달했습니다. </p>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                    <Col className=\"text-left selected-address\" span={24}>\r\n                                                        <Card title=\"로렘 입섬\" extra={<Link to=\"#\">고르다</Link>} >\r\n                                                            <p>는이 레이어와 항공사 샐러드에서 자금을 조달했습니다. 는이 레이어와 항공사 샐러드에서 자금을 조달했습니다. </p>\r\n                                                        </Card>\r\n                                                    </Col>\r\n                                                </Space>\r\n\r\n                                                <Divider />\r\n\r\n                                                {\r\n                                                    showMemberName &&\r\n                                                    <Col span={24}>\r\n                                                        <Col span={24} className=\"text-left font-bold\">회원 이름</Col>\r\n                                                        <Col className=\"\" span={24}>\r\n                                                            <Form.Item\r\n                                                                label=\"\"\r\n                                                                name=\"m_name\"\r\n                                                                rules={[{ required: true, message: 'Please input your name!' }]}\r\n                                                            >\r\n                                                                <Input placeholder=\"회원 이름\" />\r\n                                                            </Form.Item>\r\n                                                        </Col></Col>\r\n                                                }\r\n\r\n                                                {/* <Col span={24} className=\"text-left\">Property Name</Col> */}\r\n                                                <Col span={24} className=\"text-left font-bold\">부동산 이름</Col>\r\n                                                <Col className=\"\" span={24}>\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"name\"\r\n                                                        rules={[{ required: true, message: 'Please input your property name!' }]}\r\n                                                    >\r\n                                                        <Input placeholder=\"부동산 이름\" />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">주소 <img style={requiiredIconStyle} src={requiredIcon} /> </Col>\r\n                                                <Col className=\"\" span={24}>\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"address\"\r\n                                                        rules={[{ required: true, message: 'Please input your address!' }]}\r\n                                                    >\r\n                                                        <Input placeholder=\"주소\" />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"mb-15\">\r\n                                                    <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3411.99148966586!2d75.7670105144747!3d31.22096516899024!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x391af4e636b784dd%3A0xd8f1509263158c8a!2sProtolabz%20Eservices!5e0!3m2!1sen!2sin!4v1609569038710!5m2!1sen!2sin\" style={{ 'width': '100%' }} ></iframe>\r\n                                                </Col>\r\n\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">상세 주소 <img style={requiiredIconStyle} src={requiredIcon} /> </Col>\r\n                                                <Col className=\"mb-15\" span={24}>\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"detail_address\"\r\n                                                        rules={[{ required: true, message: 'Please input your detail address!' }]}\r\n                                                    >\r\n                                                        <Input placeholder=\"상세 주소\" />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col className=\"mb-15 text-left font-bold\" span={24}>\r\n                                                    {/* Property Type */}\r\n                                                    부동산 유형\r\n                                                </Col>\r\n                                                <Col className=\"mb-15 text-left\" span={24}>\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"property_type\"\r\n                                                        rules={[{ required: false, message: 'Please select Property Type !' }]}\r\n                                                    >\r\n                                                        <Radio.Group buttonStyle=\"solid\" onChange={this.onPetChange} >\r\n                                                            <Radio value=\"Public\">공공의 </Radio>\r\n                                                            <Radio value=\"Private\">은밀한</Radio>\r\n                                                        </Radio.Group>\r\n                                                    </Form.Item>\r\n\r\n                                                    {/*  <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"public_private\"\r\n                                                        rules={[{ required: false, message: 'Please select property type!' }]}\r\n                                                        className=\"text-left\"\r\n                                                    >\r\n                                                        <Radio.Group onChange={this.onChangePublicPrivate} >\r\n                                                            <Radio value=\"Private\">Private</Radio>\r\n                                                            <Radio value=\"Public\">Public</Radio>\r\n                                                        </Radio.Group>\r\n                                                        <div className=\"text-left\"><small>Only exposed to a broker in charge If you choose Private</small></div>\r\n                                                       <Checkbox.Group style={{ width: '100%' }} onChange={this.onChangePublicPrivate}>\r\n                                                            <Row>\r\n                                                                <Col >\r\n                                                                    <Checkbox value=\"Private\">Private</Checkbox>\r\n                                                                </Col>\r\n                                                                <Col >\r\n                                                                    <Checkbox value=\"Public\">Public</Checkbox>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                            <div className=\"text-left\"><small>Only exposed to a broker in charge If you choose Private</small></div>\r\n                                                        </Checkbox.Group> \r\n                                                    </Form.Item>*/}\r\n                                                </Col>\r\n\r\n                                                <Col span={18} className=\"text-left font-bold\">전용 지역 평 (한국 단위) <img style={requiiredIconStyle} src={requiredIcon} /> </Col>\r\n                                                <Col span={6}>\r\n                                                    {/* <Button className=\"btn\"> */}\r\n                                                    {/* <ReloadOutlined onClick={this.onAreaChangeInSqMt} />㎡  */}\r\n                                                    <img src={metersq} onClick={this.onAreaChangeInSqMt} width=\"80\" style={{ 'cursor': 'pointer' }} />\r\n                                                    {/* </Button> */}\r\n                                                </Col>\r\n                                                <Col span={24} className=\"text-left mb-15\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"area\"\r\n                                                        rules={[{ required: true, message: 'Please select area!' }]}\r\n                                                        className=\"text-left\"\r\n                                                    >\r\n                                                        <Radio.Group onChange={this.onAreaChange} buttonStyle=\"solid\" >\r\n                                                            <Radio.Button value=\"20\">{this.state.dedicatedArea1}</Radio.Button>\r\n                                                            <Radio.Button value=\"30\">{this.state.dedicatedArea2}</Radio.Button>\r\n                                                            <Radio.Button value=\"36\">{this.state.dedicatedArea3}</Radio.Button>\r\n                                                        </Radio.Group>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">유형 <img style={requiiredIconStyle} src={requiredIcon} /> </Col>\r\n                                                <Col span={24} className=\"text-left mb-15\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"type\"\r\n                                                        rules={[{ required: false, message: 'Please select type!' }]}\r\n                                                        className=\"text-left\"\r\n                                                    >\r\n                                                        {/* <Radio.Group onChange={this.onTypeChange} value={type} buttonStyle=\"solid\" >\r\n                                                                <Radio.Button value=\"For Sale\">For Sale</Radio.Button>\r\n                                                                <Radio.Button value=\"For Rent\">For Rent</Radio.Button>\r\n                                                                <Radio.Button value=\"For Sale, For Rent\">For Both</Radio.Button>\r\n                                                            </Radio.Group> */}\r\n\r\n                                                        {typeData.map(tag => (\r\n                                                            <CheckableTag\r\n                                                                className=\"tags-custom-width\"\r\n                                                                key={tag}\r\n                                                                checked={selectedType.indexOf(tag) > -1}\r\n                                                                onChange={checked => this.handleTypeChange(tag, checked)}\r\n                                                            >\r\n                                                                {tag}\r\n                                                            </CheckableTag>\r\n                                                        ))}\r\n\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">엘리베이터 <img style={requiiredIconStyle} src={requiredIcon} /> </Col>\r\n                                                <Col span={24} className=\"text-left\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"elevator\"\r\n                                                        rules={[{ required: true, message: 'Please select elevator!' }]}\r\n                                                        className=\"text-left\"\r\n                                                    >\r\n\r\n                                                        <Radio.Group onChange={this.onElevatorChange} value={elevator} buttonStyle=\"solid\" >\r\n                                                            <Radio.Button value=\"Yes\">예</Radio.Button>\r\n                                                            <Radio.Button value=\"No\">아니</Radio.Button>\r\n                                                        </Radio.Group>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">구조</Col>\r\n                                                <Col span={24} className=\"text-left \">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"structure\"\r\n                                                        rules={[{ required: false, message: 'Please select structure!' }]}\r\n                                                        className=\"text-left\"\r\n                                                    >\r\n                                                        <Select defaultValue=\"\" style={{ width: '100%' }} onChange={this.handleStructureChange} >\r\n                                                            <Option value=\"\">고르다</Option>\r\n                                                            <Option value=\"One Room\">방 하나</Option>\r\n                                                            <Option value=\"Two Rooms\">두 방</Option>\r\n                                                            <Option value=\"Three Rooms\">세 방</Option>\r\n                                                            <Option value=\"Four Rooms\">네 방</Option>\r\n                                                            <Option value=\"Others\">다섯 방</Option>\r\n                                                        </Select>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">방향</Col>\r\n                                                <Col span={24} className=\"text-left mb-15\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"direction\"\r\n                                                        rules={[{ required: false, message: 'Please select direction!' }]}\r\n                                                        className=\"text-left\"\r\n                                                    >\r\n                                                        <Select defaultValue=\"\" style={{ width: '100%' }} onChange={this.handleDirectionChange} >\r\n                                                            <Option value=\"\">고르다</Option>\r\n                                                            <Option value=\"East\">동쪽</Option>\r\n                                                            <Option value=\"West\">서쪽</Option>\r\n                                                            <Option value=\"South\">남쪽</Option>\r\n                                                            <Option value=\"North\">북쪽</Option>\r\n                                                            <Option value=\"North-east\">북동</Option>\r\n                                                            <Option value=\"North-west\">북서</Option>\r\n                                                            <Option value=\"South-east\">남동</Option>\r\n                                                            <Option value=\"South-west\">남서</Option>\r\n                                                        </Select>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">유지 보수 비용</Col>\r\n                                                <Col span={24} className=\"mb-15\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"maintainence_fee\"\r\n                                                        rules={[{ required: false, message: 'Please select Maintanence Fee!' }]}\r\n                                                        className=\"text-left\"\r\n                                                    >\r\n                                                        {tagsData.map((tag, i) => (\r\n                                                            <CheckableTag\r\n                                                                className=\"tags-custom-width\"\r\n                                                                key={tag.id}\r\n                                                                checked={selectedTagsId.indexOf(tag.id) > -1}\r\n                                                                onChange={checked => this.handleMaintainenceFeeChange(tag.propertyFacility, checked, tag.id)}\r\n                                                            >\r\n                                                                {tag.propertyFacility}\r\n                                                            </CheckableTag>\r\n                                                        ))}\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">선택권</Col>\r\n                                                <Col span={24} className=\"mb-15\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"option\"\r\n                                                        rules={[{ required: false, message: 'Please select Option!' }]}\r\n                                                        className=\"text-left\"\r\n                                                    >\r\n                                                        {optionData.map((tags, i) => (\r\n                                                            <CheckableTag\r\n                                                                className=\"tags-custom-width\"\r\n                                                                key={tags.id}\r\n                                                                checked={optionTagsId.indexOf(tags.id) > -1}\r\n                                                                onChange={checked => this.handleOptionDataChange(tags, checked, tags.id)}\r\n                                                            >\r\n                                                                {tags.propertyFeatures}\r\n                                                            </CheckableTag>\r\n                                                        ))}\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">가능한 날짜 </Col>\r\n                                                <Col span={12} className=\"mb-15 text-left\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"available_date\"\r\n                                                        rules={[{ required: false, message: 'Please select available date!' }]}\r\n                                                    >\r\n                                                        <Radio.Group buttonStyle=\"solid\" buttonStyle=\"solid\" onChange={this.onAvalDateChange}  >\r\n                                                            <Radio.Button value=\"Immediately\">바로 </Radio.Button>\r\n                                                            <Radio.Button value=\"Negotiable\">협상 가능</Radio.Button>\r\n                                                        </Radio.Group>\r\n                                                        {/* <DatePicker onChange={onChangeAvailableDate} /> */}\r\n                                                    </Form.Item>\r\n\r\n                                                </Col>\r\n                                                <Col span={12} className=\"mb-15 text-left font-bold\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"actual_available_date\"\r\n                                                        rules={[{ required: false, message: 'Please select available date!' }]}\r\n                                                    >\r\n                                                        <DatePicker onChange={this.onDateChange} />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">집주인 이세요? <img style={requiiredIconStyle} src={requiredIcon} /> </Col>\r\n                                                <Col span={24} className=\"mb-15 text-left\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"house_owner\"\r\n                                                        rules={[{ required: true, message: 'Please select house owner !' }]}\r\n                                                    >\r\n                                                        <Radio.Group onChange={this.onHouseOwnerChange} buttonStyle=\"solid\" >\r\n                                                            <Radio.Button value=\"Yes\" style={{ 'padding': '0px 35px' }}>예</Radio.Button>\r\n                                                            <Radio.Button value=\"No\" style={{ 'padding': '0px 47px' }}> 아니 </Radio.Button>\r\n                                                        </Radio.Group>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">소유자 전화 번호를 입력하세요. <img style={requiiredIconStyle} src={requiredIcon} /> </Col>\r\n                                                <Col span={24} className=\"mb-15 text-left\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"owner_contact_no\"\r\n                                                        rules={[{ required: true, message: 'Please select owner contact no !' }]}\r\n                                                    >\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                {/* {this.state.isHouseOwner &&\r\n                                                    <Row>\r\n                                                        <Col span={24} className=\"text-left\">Enter the owner phone number</Col>\r\n                                                        <Col span={24} className=\"mb-15 text-left\">\r\n                                                            <Form.Item\r\n                                                                label=\"\"\r\n                                                                name=\"owner_contact_no\"\r\n                                                                rules={[{ required: true, message: 'Please select owner contact no !' }]}\r\n                                                            >\r\n                                                                <Input />\r\n                                                            </Form.Item>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                } */}\r\n\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">애완 동물 <img style={requiiredIconStyle} src={requiredIcon} /> </Col>\r\n                                                <Col span={24} className=\"mb-15 text-left\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"pet\"\r\n                                                        rules={[{ required: true, message: 'Please select Pet !' }]}\r\n                                                    >\r\n                                                        <Radio.Group buttonStyle=\"solid\" onChange={this.onPetChange} >\r\n                                                            <Radio.Button value=\"yes\">유효한 </Radio.Button>\r\n                                                            <Radio.Button value=\"no\">사용 불가</Radio.Button>\r\n                                                        </Radio.Group>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">저당 <img style={requiiredIconStyle} src={requiredIcon} /> </Col>\r\n                                                <Col span={24} className=\"mb-15 text-left\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"mortgage\"\r\n                                                        onChange={this.onMortgageChange}\r\n                                                        rules={[{ required: true, message: 'Please select house owner !' }]}\r\n                                                    >\r\n                                                        <Radio.Group buttonStyle=\"solid\">\r\n                                                            <Radio.Button value=\"yes\">유효한 </Radio.Button>\r\n                                                            <Radio.Button value=\"no\">사용 불가</Radio.Button>\r\n                                                        </Radio.Group>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"text-left font-bold\">사진 업로드</Col>\r\n                                                <Col span={24} className=\"mb-15 text-left\">\r\n                                                    <Form.Item\r\n                                                        label=\"\"\r\n                                                        name=\"images\"\r\n                                                        // onChange={this.onMortgageChange}\r\n                                                        rules={[{ required: true, message: 'Please select property images !' }]}\r\n                                                    >\r\n                                                        <Upload\r\n                                                            listType=\"picture-card\"\r\n                                                            fileList={fileList}\r\n                                                            onPreview={this.handlePreview}\r\n                                                            onChange={this.handleUpload}\r\n                                                            beforeUpload={() => false} // return false so that antd doesn't upload the picture right away\r\n                                                            multiple\r\n                                                            maxCount={18}\r\n                                                        >\r\n                                                            {uploadButton}\r\n                                                        </Upload>\r\n                                                    </Form.Item>\r\n\r\n                                                    {/* <Button onClick={this.handleSubmit} // this button click will trigger the manual upload\r\n                                                    >\r\n                                                        Submit\r\n                                                        </Button> */}\r\n\r\n                                                    <Modal\r\n                                                        visible={previewVisible}\r\n                                                        footer={null}\r\n                                                        onCancel={this.handleCancel}\r\n                                                    >\r\n                                                        <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n                                                    </Modal>\r\n                                                </Col>\r\n\r\n                                                <Col span={24} className=\"mb-15 text-left\">\r\n                                                    <Form.Item >\r\n                                                        <Button loading={loading} className=\"theme-btn\" type=\"primary\" htmlType=\"submit\" style={{ 'width': '100%' }}>\r\n                                                            레지스터\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                            </Row> {/* Form row end */}\r\n\r\n                                        </Form>\r\n\r\n                                    </Col>\r\n                                    <Col xs={{ span: 24 }} sm={{ span: 24 }} lg={{ span: 6 }} >\r\n                                        {/* Right Side */}\r\n                                    </Col>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </Row>\r\n\r\n\r\n                            </Content>\r\n                        </Space>\r\n                    </Layout>\r\n                </Content>\r\n\r\n                <WithAuthFooter />\r\n\r\n            </Layout >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterProperty;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\services\\axios-url.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithoutAuthHeaderFooter\\WithoutAuthFooter.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\MemberSetting\\member-settings-aside.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\FaqSetting\\faq-settings-aside.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithoutAuthHeaderFooter\\WithoutAuthHeader.js",["722"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\nimport logo from '../images/logo-small.png';\r\n\r\nconst { Header } = Layout;\r\n\r\nclass WithoutAuthHeader extends Component {\r\n\r\n    state = {}\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Header className=\"login-bg\">\r\n                <h1>\r\n                    <Link className=\"text-white\" to=\"/\">\r\n                        <img src={logo} />\r\n                    </Link>\r\n                </h1>\r\n            </Header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WithoutAuthHeader;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithoutAuthHeaderFooter\\LoginFormFooter.js",["723"],"import React, { Component } from 'react';\r\n\r\nimport { \r\n    Layout\r\n} from 'antd';\r\n\r\nimport '../css/global.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'antd';\r\n\r\nconst { Content } = Layout;\r\n\r\nclass LoginFormFooter extends Component {\r\n    state = {  }\r\n  \r\n\r\n    render() { \r\n        return ( \r\n            <Layout className=\"login-bg\">\r\n               \r\n                <Content className=\"login-content\">\r\n                    <Row className=\"text-white\">\r\n               \r\n                        <Col xs={{ span: 7 }} sm={{ span:7 }} lg={{ span: 7 }} >\r\n                            {window.location.pathname == '/register' ? <Link to=\"/login\" className=\"text-white\">\r\n                                {/* Login  */}\r\n                                로그인\r\n                                </Link> : <Link to=\"/register\" className=\"text-white\">\r\n                                {/* Register  */}\r\n                                회원가입\r\n                                </Link>}\r\n                            \r\n                        </Col>\r\n                        \r\n                        <Col xs={{ span: 1 }} sm={{ span:1 }} lg={{ span: 1 }} >\r\n                            |\r\n                        </Col>\r\n                        <Col className=\"text-center\" xs={{ span: 7 }} sm={{ span:8 }} lg={{ span: 8 }} >\r\n                            <Link to=\"/find-password-and-email\" className=\"text-white\">\r\n                                {/* Find password  */}\r\n                                비밀번호 찾기\r\n                                </Link>\r\n                        </Col>\r\n                        <Col xs={{ span: 1 }} sm={{ span:1 }} lg={{ span: 1 }} >\r\n                            |\r\n                        </Col>\r\n                        <Col className=\"text-right\" xs={{ span: 7 }} sm={{ span:7 }} lg={{ span: 7 }} >\r\n                            <Link to=\"/find-password-and-email\" className=\"text-white\">\r\n                                {/* Find email address  */}\r\n                                이메일 찾기\r\n                                </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Content>\r\n            </Layout>\r\n            \r\n        );\r\n    }\r\n}\r\n \r\nexport default LoginFormFooter;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithAuthHeaderFooter\\WithAuthFooter.js",["724","725","726","727"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Row, Col, Space, Modal, Divider, Button, message } from 'antd';\r\nimport Cookies from 'universal-cookie';\r\nimport BaseUrl from '../services/axios-url';\r\nimport footerLogo from '../images/logo-colored.png';\r\nimport './footer.css';\r\n\r\nconst axios = require('axios');\r\nconst { Footer } = Layout;\r\n\r\nclass WithAuthFooter extends Component {\r\n    state = {\r\n        loading: false,\r\n        visible: false,\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({ loading: true });\r\n        const cookies = new Cookies();\r\n\r\n        axios.get(BaseUrl + \"/memberapi/WithdrawMembershipByMemberId/\" + cookies.get('UU'), {\r\n        })\r\n            .then(res => {\r\n                console.log(res)\r\n\r\n                if (res.data.status == 1 || res.data.status == '1') {\r\n\r\n                    var cookieName = btoa('zeeps');\r\n                    // console.log('encodedStringBtoA', cookieName);\r\n                    var finalCookieName = '';\r\n                    finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n                    cookies.remove(finalCookieName)\r\n                    cookies.remove('UU')\r\n                    cookies.remove('UN')\r\n                    message.success('Membership withdraw successfully.')\r\n                } else {\r\n                    message.error(res.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error('Sorry!! Unable to fetch data from server..');\r\n            })\r\n\r\n        setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n        }, 1500);\r\n\r\n        window.location = \"/\";\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const cookies = new Cookies();\r\n        if (cookies.get('emVlcHMaAaA') == 'YXV0aG9yaXplZAaAaA') {\r\n            this.setState({ isLoggedIn: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { visible, loading, isLoggedIn } = this.state;\r\n\r\n\r\n        return (\r\n            <Footer className=\"footer-text-mobile \">\r\n                <Row>\r\n                    <Col span={24} style={{ 'marginBottom': '10px' }}>\r\n                        <Link to=\"/\"><img src={footerLogo} /></Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <p>서울특별시 서초구 강남대로 1</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <p>대표이사 : 고차남</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <p>사업자 등록번호 : 000-00-00000 (사업자정보확인)</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <p>통신판매업 신고번호 : 2020-서울강남-00000</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <p>고객센터 : 02-000-0000 </p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <p> &copy; {(new Date().getFullYear())} Zeeps Co., Ltd. All rights reserved.</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Row className=\"color-grey\">\r\n                    {/* <Space size={'large'} className=\"color-grey\"> */}\r\n                        {/* <Row> */}\r\n                            <Col xs={12} sm={12} lg={2}>\r\n                                <Link to=\"#\">집스</Link>\r\n                            </Col>\r\n                            <Col xs={12} sm={12} lg={2}>\r\n                                <Link to=\"#\">이용약관</Link>\r\n                            </Col>\r\n                            {\r\n                                isLoggedIn ? <Col xs={12} sm={12} lg={3}>\r\n                                    <Link onClick={this.showModal} >개인정보처리방침</Link>\r\n                                </Col> : ''\r\n                            }\r\n\r\n                            <Col xs={12} sm={12} lg={3}>\r\n                                <Link to=\"#\">개인정보처리방침</Link>\r\n                            </Col>\r\n                            <Col xs={12} sm={12} lg={2}>\r\n                                <Link to=\"#\">제휴문의</Link>\r\n                            </Col>\r\n                        {/* </Row> */}\r\n                    {/* </Space> */}\r\n                </Row>\r\n\r\n                <Modal\r\n                    visible={visible}\r\n                    title=\" Zeeps 멤버십 서비스를 탈퇴 하시겠습니까? \"\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    width={460}\r\n                >\r\n                    <Row className=\"text-center\">\r\n                        <p>모든 정보가 삭제됩니다. 확실합니까?</p>\r\n                        <small>탈퇴 후 의무 사항에 따라 5 년간 계약이 유지됩니다.</small>\r\n                        <Divider />\r\n\r\n                        <Space direction=\"vertical\" className=\"width100\">\r\n                            <Col span={24}>\r\n                                <Button key=\"back\" className=\"theme-btn width100\" onClick={this.handleCancel} size={'large'}>\r\n                                아니요\r\n                                            </Button>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Button className=\"width100\" key=\"submit\" type=\"default\" loading={loading} onClick={this.handleOk} size={'large'}>\r\n                                예. 나는한다\r\n                                        </Button>\r\n                            </Col>\r\n                        </Space>\r\n\r\n                    </Row>\r\n                </Modal>\r\n            </Footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WithAuthFooter;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\WithAuthHeaderFooter\\WithAuthFooter.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\WithAuthHeaderFooter\\TopNav.js",["728"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RedirectIfNotAuthenticated from '../RedirectIfNotAuthenticated/RedirectIfNotAuthenticated';\r\nimport Cookies from 'universal-cookie';\r\nimport {\r\n  Layout, Menu, message\r\n} from 'antd';\r\nimport { Redirect } from 'react-router-dom';\r\nimport logo from '../../images/logo-small.png';\r\nimport './global.css';\r\nconst { Header } = Layout;\r\n\r\nclass TopNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeClass: '',\r\n      redirectToLogin: false\r\n    };\r\n\r\n    // this.makeActive = this.makeActive.bind(this);\r\n  }\r\n  // state = { \r\n\r\n  //  }\r\n\r\n  // makeActive () {\r\n  //   console.log(window.location.pathname)\r\n  //   if(window.location.pathname == '/member-setting'){\r\n  //     console.log('hmm')\r\n  //     this.setState({\r\n  //       activeClass: 'member-setting'\r\n  //     })\r\n\r\n  //   }\r\n\r\n  // }\r\n\r\n  logout = () => {\r\n    console.log('ok')\r\n    message.success('Successful logged out from zeeps');\r\n\r\n    const cookies = new Cookies();\r\n    cookies.remove('SXNBdXRob3JpemVkQWRtaW4aS')\r\n\r\n    this.setState({ redirectToLogin: true });\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    // console.log(this.state.activeClass)\r\n    const { redirectToLogin } = this.state;\r\n    if (redirectToLogin) {\r\n      return <Redirect\r\n        to={{\r\n          pathname: \"/admin-login\",\r\n        }}\r\n      />\r\n    }\r\n\r\n    return (\r\n\r\n      <Header className=\"header admin-top-navigation\">\r\n        <RedirectIfNotAuthenticated />\r\n        <div className=\"logo\" />\r\n        {/* {this.makeActive} */}\r\n\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} selectedKeys={[this.state.activeClass]}>\r\n          <Menu.Item key=\"logo\" style={{ 'marginRight': '15px', 'paddingleft': '0px' }}>\r\n            <Link to=\"/basic-settings\" >\r\n              <img src={logo} />\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/basic-settings\" style={{ 'marginLeft': '5px' }}>\r\n            <Link to=\"/basic-settings\" >기본설정</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/member-setting\">\r\n            <Link to=\"/member-setting\" >회원설정</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/search-property\">\r\n            <Link to=\"/search-property\" >부동산설정</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/manage-faq\">\r\n            <Link to=\"/manage-faq\" >마이설정</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key=\"13\" onClick={() => this.logout()} style={{ 'float': 'right' }}>\r\n            <Link to=\"#\" >로그아웃</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"12\" style={{ 'float': 'right' }}>\r\n            |\r\n                </Menu.Item>\r\n          <Menu.Item key=\"11\" style={{ 'float': 'right' }}>\r\n            <Link to=\"#\" >관리자님(admin)</Link>\r\n          </Menu.Item>\r\n\r\n        </Menu>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopNav;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\WithAuthHeaderFooter\\WithAuthHeader.js",["729","730","731","732","733","734","735"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Layout, Button, Modal, Menu, Divider, Row, Col, Space, message\r\n} from 'antd';\r\nimport '../css/global.css';\r\n\r\nimport Cookies from 'universal-cookie';\r\nimport logo from '../images/logo-small.png';\r\nimport coloredLogo from '../images/logo-colored.png';\r\n\r\nconst axios = require('axios');\r\nconst { Header } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass WithAuthHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        loading: false,\r\n        visible: false,\r\n        isHomepage: false\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        message.warning('Logging out from zeeps');\r\n        this.setState({ loading: true });\r\n\r\n        const cookies = new Cookies();\r\n        var cookieName = btoa('zeeps');\r\n        // console.log('encodedStringBtoA', cookieName);\r\n        var finalCookieName = '';\r\n        finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n        cookies.remove(finalCookieName)\r\n        cookies.remove('UU')\r\n        cookies.remove('UN')\r\n\r\n        setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n            message.success('Successfully logged out!')\r\n            window.location = '/login'\r\n        }, 1500);\r\n\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const cookies = new Cookies();\r\n        var cookieName = btoa('zeeps');\r\n        var finalCookieName = '';\r\n        finalCookieName = cookieName.replace('=', 'aAaA')\r\n\r\n        var encodedStringBtoA = btoa('authorized');\r\n        var finalCookieValue = '';\r\n        finalCookieValue = encodedStringBtoA.replace('==', 'aAaA')\r\n\r\n        if (cookies.get(finalCookieName) == finalCookieValue) {\r\n            if (cookies.get('UN')) {\r\n                var UserName = cookies.get('UN').replace('-', ' ');\r\n                this.setState({ UserName: UserName })\r\n            }\r\n        }\r\n\r\n        if(window.location.pathname == \"/\") {\r\n            this.setState({\r\n                isHomepage: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { visible, loading, UserName, isHomepage } = this.state;\r\n\r\n        const homepageStyle = {\r\n            'color': 'white'\r\n        }\r\n\r\n        return (\r\n            <Header className=\"header landing-header users-header\">\r\n                <div className=\"logo\" />\r\n                {/* {this.makeActive} */}\r\n\r\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} selectedKeys={[this.state.activeClass]}>\r\n                    <Link to=\"/\" >\r\n                        {/* <img src=\"https://dummyimage.com/150x40/\" /> */}\r\n                        {isHomepage ? <img src={logo} /> : <img src={coloredLogo} width=\"90\" />}\r\n                        \r\n                        {/* <img src={logo} /> */}\r\n                    </Link>\r\n\r\n                    <SubMenu className={ isHomepage ? \" text-white float-right \" : \" float-right \"  } key=\"SubMenu\" title={UserName}>\r\n                    \r\n                        <Menu.ItemGroup title=\"\" className=\"background-white\">\r\n                            <Menu.Item key=\"setting:1\" >\r\n                                <Link to=\"/member-change-password\" style={{ 'color': '#44358F' }}> 환경</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"setting:2\" style={{ 'color': '#44358F' }} onClick={this.showModal} >로그 아웃</Menu.Item>\r\n                        </Menu.ItemGroup>\r\n\r\n                    </SubMenu>\r\n                    <Menu.Item key=\"13\" className=\"float-right\">\r\n                        <Link to=\"/faq\" className={isHomepage ? 'text-white' : ''} >자주묻는 질문</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"12\" className=\"float-right\">\r\n                        <Link to=\"/property-processing\" className={isHomepage ? 'text-white' : ''} >내 부동산</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"11\" className=\"float-right\">\r\n                        <Link to=\"/register-property\"  className={isHomepage ? 'text-white' : ''} >집 내놓기!</Link>\r\n                    </Menu.Item>\r\n\r\n                </Menu>\r\n\r\n\r\n                <Modal\r\n                    visible={visible}\r\n                    title=\"로그 아웃 하시겠습니까?\"\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    width={360}\r\n                >\r\n                    <Row className=\"text-left\">\r\n                        <p>로그 아웃\r\n 지프<br />확실합니까? </p>\r\n                        <Divider />\r\n\r\n                        <Space direction=\"vertical\" className=\"width100\">\r\n                            <Col span={24}>\r\n                                <Button key=\"back\" className=\"width100 theme-btn\" onClick={this.handleCancel} size={'large'}>\r\n                                아니요\r\n                                </Button>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Button className=\"width100  \" key=\"submit\" type=\"default\" loading={loading} onClick={this.handleOk} size={'large'} >\r\n                                \r\n네 저도 그렇습니다\r\n                                </Button>\r\n                            </Col>\r\n                        </Space>\r\n\r\n                    </Row>\r\n                </Modal>\r\n            </Header>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default WithAuthHeader;","E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\PropertySetting\\property-settings-aside.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\BasicSettings\\basic-settings-aside.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\RedirectIfNotAuthenticated\\RedirectIfNotAuthenticated.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\WithoutAuthHeaderFooter\\WithoutAuthHeader.js",[],"E:\\react\\Zeeps\\zeeps-frontend\\github-code\\zeeps\\src\\components\\ZeepsAdmin\\WithoutAuthHeaderFooter\\WithoutAuthFooter.js",[],{"ruleId":"736","replacedBy":"737"},{"ruleId":"738","replacedBy":"739"},{"ruleId":"740","severity":1,"message":"741","line":31,"column":7,"nodeType":"742","messageId":"743","endLine":31,"endColumn":15},{"ruleId":"744","severity":1,"message":"745","line":51,"column":46,"nodeType":"746","messageId":"747","endLine":51,"endColumn":48},{"ruleId":"744","severity":1,"message":"748","line":69,"column":37,"nodeType":"746","messageId":"747","endLine":69,"endColumn":39},{"ruleId":"740","severity":1,"message":"749","line":17,"column":8,"nodeType":"742","messageId":"743","endLine":17,"endColumn":12},{"ruleId":"740","severity":1,"message":"750","line":32,"column":10,"nodeType":"742","messageId":"743","endLine":32,"endColumn":16},{"ruleId":"744","severity":1,"message":"748","line":54,"column":38,"nodeType":"746","messageId":"747","endLine":54,"endColumn":40},{"ruleId":"744","severity":1,"message":"748","line":76,"column":29,"nodeType":"746","messageId":"747","endLine":76,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":76,"column":53,"nodeType":"746","messageId":"747","endLine":76,"endColumn":55},{"ruleId":"751","severity":1,"message":"752","line":137,"column":15,"nodeType":"753","endLine":137,"endColumn":33},{"ruleId":"740","severity":1,"message":"754","line":4,"column":13,"nodeType":"742","messageId":"743","endLine":4,"endColumn":17},{"ruleId":"740","severity":1,"message":"755","line":4,"column":19,"nodeType":"742","messageId":"743","endLine":4,"endColumn":24},{"ruleId":"740","severity":1,"message":"756","line":4,"column":26,"nodeType":"742","messageId":"743","endLine":4,"endColumn":32},{"ruleId":"740","severity":1,"message":"757","line":4,"column":34,"nodeType":"742","messageId":"743","endLine":4,"endColumn":42},{"ruleId":"740","severity":1,"message":"758","line":4,"column":50,"nodeType":"742","messageId":"743","endLine":4,"endColumn":57},{"ruleId":"740","severity":1,"message":"759","line":4,"column":76,"nodeType":"742","messageId":"743","endLine":4,"endColumn":81},{"ruleId":"740","severity":1,"message":"760","line":4,"column":90,"nodeType":"742","messageId":"743","endLine":4,"endColumn":95},{"ruleId":"740","severity":1,"message":"761","line":4,"column":97,"nodeType":"742","messageId":"743","endLine":4,"endColumn":103},{"ruleId":"740","severity":1,"message":"762","line":4,"column":105,"nodeType":"742","messageId":"743","endLine":4,"endColumn":108},{"ruleId":"740","severity":1,"message":"763","line":4,"column":110,"nodeType":"742","messageId":"743","endLine":4,"endColumn":120},{"ruleId":"740","severity":1,"message":"764","line":4,"column":122,"nodeType":"742","messageId":"743","endLine":4,"endColumn":128},{"ruleId":"740","severity":1,"message":"765","line":4,"column":139,"nodeType":"742","messageId":"743","endLine":4,"endColumn":143},{"ruleId":"740","severity":1,"message":"766","line":7,"column":10,"nodeType":"742","messageId":"743","endLine":7,"endColumn":24},{"ruleId":"740","severity":1,"message":"767","line":7,"column":26,"nodeType":"742","messageId":"743","endLine":7,"endColumn":40},{"ruleId":"740","severity":1,"message":"768","line":7,"column":42,"nodeType":"742","messageId":"743","endLine":7,"endColumn":56},{"ruleId":"740","severity":1,"message":"769","line":7,"column":58,"nodeType":"742","messageId":"743","endLine":7,"endColumn":70},{"ruleId":"740","severity":1,"message":"770","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":14},{"ruleId":"740","severity":1,"message":"771","line":11,"column":16,"nodeType":"742","messageId":"743","endLine":11,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":15,"column":9,"nodeType":"742","messageId":"743","endLine":15,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":15,"column":26,"nodeType":"742","messageId":"743","endLine":15,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":15,"column":34,"nodeType":"742","messageId":"743","endLine":15,"endColumn":39},{"ruleId":"740","severity":1,"message":"775","line":16,"column":9,"nodeType":"742","messageId":"743","endLine":16,"endColumn":16},{"ruleId":"740","severity":1,"message":"776","line":17,"column":9,"nodeType":"742","messageId":"743","endLine":17,"endColumn":13},{"ruleId":"744","severity":1,"message":"748","line":31,"column":42,"nodeType":"746","messageId":"747","endLine":31,"endColumn":44},{"ruleId":"744","severity":1,"message":"748","line":31,"column":71,"nodeType":"746","messageId":"747","endLine":31,"endColumn":73},{"ruleId":"777","severity":1,"message":"778","line":93,"column":53,"nodeType":"779","messageId":"780","endLine":93,"endColumn":66},{"ruleId":"740","severity":1,"message":"754","line":4,"column":13,"nodeType":"742","messageId":"743","endLine":4,"endColumn":17},{"ruleId":"740","severity":1,"message":"755","line":4,"column":19,"nodeType":"742","messageId":"743","endLine":4,"endColumn":24},{"ruleId":"740","severity":1,"message":"757","line":4,"column":34,"nodeType":"742","messageId":"743","endLine":4,"endColumn":42},{"ruleId":"740","severity":1,"message":"770","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":14},{"ruleId":"781","severity":1,"message":"782","line":23,"column":5,"nodeType":"783","messageId":"784","endLine":25,"endColumn":6},{"ruleId":"744","severity":1,"message":"745","line":32,"column":49,"nodeType":"746","messageId":"747","endLine":32,"endColumn":51},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"770","line":8,"column":10,"nodeType":"742","messageId":"743","endLine":8,"endColumn":14},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"775","line":21,"column":9,"nodeType":"742","messageId":"743","endLine":21,"endColumn":16},{"ruleId":"740","severity":1,"message":"785","line":31,"column":7,"nodeType":"742","messageId":"743","endLine":31,"endColumn":16},{"ruleId":"740","severity":1,"message":"750","line":41,"column":10,"nodeType":"742","messageId":"743","endLine":41,"endColumn":16},{"ruleId":"744","severity":1,"message":"748","line":58,"column":34,"nodeType":"746","messageId":"747","endLine":58,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":58,"column":63,"nodeType":"746","messageId":"747","endLine":58,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":89,"column":29,"nodeType":"746","messageId":"747","endLine":89,"endColumn":31},{"ruleId":"740","severity":1,"message":"758","line":4,"column":50,"nodeType":"742","messageId":"743","endLine":4,"endColumn":57},{"ruleId":"740","severity":1,"message":"770","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":14},{"ruleId":"740","severity":1,"message":"786","line":12,"column":8,"nodeType":"742","messageId":"743","endLine":12,"endColumn":15},{"ruleId":"740","severity":1,"message":"787","line":18,"column":7,"nodeType":"742","messageId":"743","endLine":18,"endColumn":12},{"ruleId":"740","severity":1,"message":"772","line":20,"column":9,"nodeType":"742","messageId":"743","endLine":20,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":20,"column":26,"nodeType":"742","messageId":"743","endLine":20,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":20,"column":34,"nodeType":"742","messageId":"743","endLine":20,"endColumn":39},{"ruleId":"740","severity":1,"message":"775","line":29,"column":9,"nodeType":"742","messageId":"743","endLine":29,"endColumn":16},{"ruleId":"740","severity":1,"message":"785","line":39,"column":7,"nodeType":"742","messageId":"743","endLine":39,"endColumn":16},{"ruleId":"740","severity":1,"message":"750","line":66,"column":10,"nodeType":"742","messageId":"743","endLine":66,"endColumn":16},{"ruleId":"740","severity":1,"message":"750","line":36,"column":10,"nodeType":"742","messageId":"743","endLine":36,"endColumn":16},{"ruleId":"744","severity":1,"message":"748","line":49,"column":54,"nodeType":"746","messageId":"747","endLine":49,"endColumn":56},{"ruleId":"744","severity":1,"message":"748","line":79,"column":33,"nodeType":"746","messageId":"747","endLine":79,"endColumn":35},{"ruleId":"744","severity":1,"message":"748","line":79,"column":57,"nodeType":"746","messageId":"747","endLine":79,"endColumn":59},{"ruleId":"744","severity":1,"message":"748","line":84,"column":33,"nodeType":"746","messageId":"747","endLine":84,"endColumn":35},{"ruleId":"744","severity":1,"message":"748","line":84,"column":57,"nodeType":"746","messageId":"747","endLine":84,"endColumn":59},{"ruleId":"744","severity":1,"message":"748","line":95,"column":63,"nodeType":"746","messageId":"747","endLine":95,"endColumn":65},{"ruleId":"751","severity":1,"message":"752","line":129,"column":29,"nodeType":"753","endLine":129,"endColumn":47},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"770","line":8,"column":10,"nodeType":"742","messageId":"743","endLine":8,"endColumn":14},{"ruleId":"740","severity":1,"message":"771","line":8,"column":16,"nodeType":"742","messageId":"743","endLine":8,"endColumn":26},{"ruleId":"740","severity":1,"message":"788","line":15,"column":8,"nodeType":"742","messageId":"743","endLine":15,"endColumn":15},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"775","line":20,"column":9,"nodeType":"742","messageId":"743","endLine":20,"endColumn":16},{"ruleId":"740","severity":1,"message":"750","line":40,"column":10,"nodeType":"742","messageId":"743","endLine":40,"endColumn":16},{"ruleId":"781","severity":1,"message":"782","line":48,"column":3,"nodeType":"783","messageId":"784","endLine":51,"endColumn":4},{"ruleId":"744","severity":1,"message":"748","line":62,"column":25,"nodeType":"746","messageId":"747","endLine":62,"endColumn":27},{"ruleId":"744","severity":1,"message":"748","line":62,"column":45,"nodeType":"746","messageId":"747","endLine":62,"endColumn":47},{"ruleId":"744","severity":1,"message":"748","line":100,"column":29,"nodeType":"746","messageId":"747","endLine":100,"endColumn":31},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"790","line":4,"column":69,"nodeType":"742","messageId":"743","endLine":4,"endColumn":74},{"ruleId":"740","severity":1,"message":"760","line":4,"column":83,"nodeType":"742","messageId":"743","endLine":4,"endColumn":88},{"ruleId":"740","severity":1,"message":"770","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":14},{"ruleId":"740","severity":1,"message":"771","line":9,"column":16,"nodeType":"742","messageId":"743","endLine":9,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"775","line":22,"column":9,"nodeType":"742","messageId":"743","endLine":22,"endColumn":16},{"ruleId":"740","severity":1,"message":"785","line":32,"column":7,"nodeType":"742","messageId":"743","endLine":32,"endColumn":16},{"ruleId":"740","severity":1,"message":"750","line":41,"column":10,"nodeType":"742","messageId":"743","endLine":41,"endColumn":16},{"ruleId":"740","severity":1,"message":"791","line":65,"column":7,"nodeType":"742","messageId":"743","endLine":65,"endColumn":11},{"ruleId":"740","severity":1,"message":"792","line":83,"column":7,"nodeType":"742","messageId":"743","endLine":83,"endColumn":19},{"ruleId":"744","severity":1,"message":"748","line":125,"column":29,"nodeType":"746","messageId":"747","endLine":125,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":125,"column":53,"nodeType":"746","messageId":"747","endLine":125,"endColumn":55},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"790","line":4,"column":69,"nodeType":"742","messageId":"743","endLine":4,"endColumn":74},{"ruleId":"740","severity":1,"message":"793","line":4,"column":76,"nodeType":"742","messageId":"743","endLine":4,"endColumn":81},{"ruleId":"740","severity":1,"message":"760","line":4,"column":83,"nodeType":"742","messageId":"743","endLine":4,"endColumn":88},{"ruleId":"740","severity":1,"message":"771","line":9,"column":16,"nodeType":"742","messageId":"743","endLine":9,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"794","line":20,"column":9,"nodeType":"742","messageId":"743","endLine":20,"endColumn":20},{"ruleId":"740","severity":1,"message":"775","line":22,"column":9,"nodeType":"742","messageId":"743","endLine":22,"endColumn":16},{"ruleId":"740","severity":1,"message":"750","line":41,"column":10,"nodeType":"742","messageId":"743","endLine":41,"endColumn":16},{"ruleId":"744","severity":1,"message":"748","line":69,"column":29,"nodeType":"746","messageId":"747","endLine":69,"endColumn":31},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"795","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":36},{"ruleId":"740","severity":1,"message":"763","line":4,"column":47,"nodeType":"742","messageId":"743","endLine":4,"endColumn":57},{"ruleId":"740","severity":1,"message":"750","line":38,"column":10,"nodeType":"742","messageId":"743","endLine":38,"endColumn":16},{"ruleId":"744","severity":1,"message":"748","line":73,"column":29,"nodeType":"746","messageId":"747","endLine":73,"endColumn":31},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"790","line":4,"column":69,"nodeType":"742","messageId":"743","endLine":4,"endColumn":74},{"ruleId":"740","severity":1,"message":"793","line":4,"column":76,"nodeType":"742","messageId":"743","endLine":4,"endColumn":81},{"ruleId":"740","severity":1,"message":"760","line":4,"column":83,"nodeType":"742","messageId":"743","endLine":4,"endColumn":88},{"ruleId":"740","severity":1,"message":"771","line":9,"column":16,"nodeType":"742","messageId":"743","endLine":9,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"794","line":20,"column":9,"nodeType":"742","messageId":"743","endLine":20,"endColumn":20},{"ruleId":"740","severity":1,"message":"775","line":22,"column":9,"nodeType":"742","messageId":"743","endLine":22,"endColumn":16},{"ruleId":"740","severity":1,"message":"796","line":23,"column":9,"nodeType":"742","messageId":"743","endLine":23,"endColumn":17},{"ruleId":"740","severity":1,"message":"785","line":33,"column":7,"nodeType":"742","messageId":"743","endLine":33,"endColumn":16},{"ruleId":"740","severity":1,"message":"797","line":37,"column":9,"nodeType":"742","messageId":"743","endLine":37,"endColumn":15},{"ruleId":"740","severity":1,"message":"750","line":43,"column":10,"nodeType":"742","messageId":"743","endLine":43,"endColumn":16},{"ruleId":"740","severity":1,"message":"798","line":47,"column":7,"nodeType":"742","messageId":"743","endLine":47,"endColumn":14},{"ruleId":"740","severity":1,"message":"791","line":67,"column":7,"nodeType":"742","messageId":"743","endLine":67,"endColumn":11},{"ruleId":"740","severity":1,"message":"792","line":83,"column":7,"nodeType":"742","messageId":"743","endLine":83,"endColumn":19},{"ruleId":"740","severity":1,"message":"799","line":92,"column":10,"nodeType":"742","messageId":"743","endLine":92,"endColumn":28},{"ruleId":"744","severity":1,"message":"748","line":113,"column":34,"nodeType":"746","messageId":"747","endLine":113,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":113,"column":63,"nodeType":"746","messageId":"747","endLine":113,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":148,"column":29,"nodeType":"746","messageId":"747","endLine":148,"endColumn":31},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"790","line":4,"column":69,"nodeType":"742","messageId":"743","endLine":4,"endColumn":74},{"ruleId":"740","severity":1,"message":"793","line":4,"column":76,"nodeType":"742","messageId":"743","endLine":4,"endColumn":81},{"ruleId":"740","severity":1,"message":"760","line":4,"column":83,"nodeType":"742","messageId":"743","endLine":4,"endColumn":88},{"ruleId":"740","severity":1,"message":"771","line":9,"column":16,"nodeType":"742","messageId":"743","endLine":9,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"794","line":20,"column":9,"nodeType":"742","messageId":"743","endLine":20,"endColumn":20},{"ruleId":"740","severity":1,"message":"775","line":22,"column":9,"nodeType":"742","messageId":"743","endLine":22,"endColumn":16},{"ruleId":"740","severity":1,"message":"796","line":23,"column":9,"nodeType":"742","messageId":"743","endLine":23,"endColumn":17},{"ruleId":"740","severity":1,"message":"785","line":33,"column":7,"nodeType":"742","messageId":"743","endLine":33,"endColumn":16},{"ruleId":"740","severity":1,"message":"797","line":37,"column":9,"nodeType":"742","messageId":"743","endLine":37,"endColumn":15},{"ruleId":"740","severity":1,"message":"750","line":43,"column":10,"nodeType":"742","messageId":"743","endLine":43,"endColumn":16},{"ruleId":"740","severity":1,"message":"798","line":47,"column":7,"nodeType":"742","messageId":"743","endLine":47,"endColumn":14},{"ruleId":"740","severity":1,"message":"791","line":67,"column":7,"nodeType":"742","messageId":"743","endLine":67,"endColumn":11},{"ruleId":"740","severity":1,"message":"792","line":83,"column":7,"nodeType":"742","messageId":"743","endLine":83,"endColumn":19},{"ruleId":"740","severity":1,"message":"799","line":92,"column":10,"nodeType":"742","messageId":"743","endLine":92,"endColumn":28},{"ruleId":"744","severity":1,"message":"748","line":114,"column":29,"nodeType":"746","messageId":"747","endLine":114,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":68,"column":38,"nodeType":"746","messageId":"747","endLine":68,"endColumn":40},{"ruleId":"744","severity":1,"message":"748","line":125,"column":29,"nodeType":"746","messageId":"747","endLine":125,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":125,"column":53,"nodeType":"746","messageId":"747","endLine":125,"endColumn":55},{"ruleId":"744","severity":1,"message":"748","line":173,"column":34,"nodeType":"746","messageId":"747","endLine":173,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":173,"column":63,"nodeType":"746","messageId":"747","endLine":173,"endColumn":65},{"ruleId":"751","severity":1,"message":"752","line":216,"column":15,"nodeType":"753","endLine":216,"endColumn":33},{"ruleId":"740","severity":1,"message":"800","line":3,"column":10,"nodeType":"742","messageId":"743","endLine":3,"endColumn":27},{"ruleId":"740","severity":1,"message":"801","line":29,"column":5,"nodeType":"742","messageId":"743","endLine":29,"endColumn":20},{"ruleId":"740","severity":1,"message":"802","line":33,"column":5,"nodeType":"742","messageId":"743","endLine":33,"endColumn":21},{"ruleId":"744","severity":1,"message":"748","line":35,"column":36,"nodeType":"746","messageId":"747","endLine":35,"endColumn":38},{"ruleId":"751","severity":1,"message":"752","line":50,"column":47,"nodeType":"753","endLine":50,"endColumn":76},{"ruleId":"751","severity":1,"message":"752","line":77,"column":35,"nodeType":"753","endLine":77,"endColumn":65},{"ruleId":"751","severity":1,"message":"752","line":85,"column":35,"nodeType":"753","endLine":85,"endColumn":65},{"ruleId":"751","severity":1,"message":"752","line":98,"column":35,"nodeType":"753","endLine":98,"endColumn":65},{"ruleId":"751","severity":1,"message":"752","line":106,"column":35,"nodeType":"753","endLine":106,"endColumn":65},{"ruleId":"740","severity":1,"message":"757","line":4,"column":34,"nodeType":"742","messageId":"743","endLine":4,"endColumn":42},{"ruleId":"740","severity":1,"message":"759","line":4,"column":76,"nodeType":"742","messageId":"743","endLine":4,"endColumn":81},{"ruleId":"740","severity":1,"message":"760","line":4,"column":90,"nodeType":"742","messageId":"743","endLine":4,"endColumn":95},{"ruleId":"740","severity":1,"message":"761","line":4,"column":97,"nodeType":"742","messageId":"743","endLine":4,"endColumn":103},{"ruleId":"740","severity":1,"message":"762","line":4,"column":105,"nodeType":"742","messageId":"743","endLine":4,"endColumn":108},{"ruleId":"740","severity":1,"message":"763","line":4,"column":110,"nodeType":"742","messageId":"743","endLine":4,"endColumn":120},{"ruleId":"740","severity":1,"message":"764","line":4,"column":122,"nodeType":"742","messageId":"743","endLine":4,"endColumn":128},{"ruleId":"740","severity":1,"message":"769","line":7,"column":10,"nodeType":"742","messageId":"743","endLine":7,"endColumn":22},{"ruleId":"740","severity":1,"message":"770","line":11,"column":10,"nodeType":"742","messageId":"743","endLine":11,"endColumn":14},{"ruleId":"740","severity":1,"message":"787","line":16,"column":7,"nodeType":"742","messageId":"743","endLine":16,"endColumn":12},{"ruleId":"740","severity":1,"message":"772","line":17,"column":9,"nodeType":"742","messageId":"743","endLine":17,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":17,"column":26,"nodeType":"742","messageId":"743","endLine":17,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":17,"column":34,"nodeType":"742","messageId":"743","endLine":17,"endColumn":39},{"ruleId":"740","severity":1,"message":"775","line":18,"column":9,"nodeType":"742","messageId":"743","endLine":18,"endColumn":16},{"ruleId":"781","severity":1,"message":"782","line":22,"column":5,"nodeType":"783","messageId":"784","endLine":24,"endColumn":6},{"ruleId":"744","severity":1,"message":"745","line":37,"column":44,"nodeType":"746","messageId":"747","endLine":37,"endColumn":46},{"ruleId":"744","severity":1,"message":"745","line":43,"column":41,"nodeType":"746","messageId":"747","endLine":43,"endColumn":43},{"ruleId":"744","severity":1,"message":"748","line":43,"column":76,"nodeType":"746","messageId":"747","endLine":43,"endColumn":78},{"ruleId":"744","severity":1,"message":"745","line":47,"column":46,"nodeType":"746","messageId":"747","endLine":47,"endColumn":48},{"ruleId":"744","severity":1,"message":"748","line":47,"column":81,"nodeType":"746","messageId":"747","endLine":47,"endColumn":83},{"ruleId":"744","severity":1,"message":"745","line":51,"column":46,"nodeType":"746","messageId":"747","endLine":51,"endColumn":48},{"ruleId":"744","severity":1,"message":"745","line":51,"column":81,"nodeType":"746","messageId":"747","endLine":51,"endColumn":83},{"ruleId":"744","severity":1,"message":"748","line":69,"column":32,"nodeType":"746","messageId":"747","endLine":69,"endColumn":34},{"ruleId":"744","severity":1,"message":"748","line":69,"column":63,"nodeType":"746","messageId":"747","endLine":69,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":95,"column":37,"nodeType":"746","messageId":"747","endLine":95,"endColumn":39},{"ruleId":"744","severity":1,"message":"748","line":95,"column":67,"nodeType":"746","messageId":"747","endLine":95,"endColumn":69},{"ruleId":"744","severity":1,"message":"748","line":110,"column":37,"nodeType":"746","messageId":"747","endLine":110,"endColumn":39},{"ruleId":"744","severity":1,"message":"748","line":110,"column":67,"nodeType":"746","messageId":"747","endLine":110,"endColumn":69},{"ruleId":"751","severity":1,"message":"752","line":205,"column":53,"nodeType":"753","endLine":205,"endColumn":91},{"ruleId":"740","severity":1,"message":"757","line":8,"column":3,"nodeType":"742","messageId":"743","endLine":8,"endColumn":11},{"ruleId":"740","severity":1,"message":"760","line":16,"column":3,"nodeType":"742","messageId":"743","endLine":16,"endColumn":8},{"ruleId":"740","severity":1,"message":"761","line":17,"column":3,"nodeType":"742","messageId":"743","endLine":17,"endColumn":9},{"ruleId":"740","severity":1,"message":"762","line":18,"column":3,"nodeType":"742","messageId":"743","endLine":18,"endColumn":6},{"ruleId":"740","severity":1,"message":"763","line":19,"column":3,"nodeType":"742","messageId":"743","endLine":19,"endColumn":13},{"ruleId":"740","severity":1,"message":"764","line":20,"column":3,"nodeType":"742","messageId":"743","endLine":20,"endColumn":9},{"ruleId":"740","severity":1,"message":"766","line":26,"column":3,"nodeType":"742","messageId":"743","endLine":26,"endColumn":17},{"ruleId":"740","severity":1,"message":"767","line":27,"column":3,"nodeType":"742","messageId":"743","endLine":27,"endColumn":17},{"ruleId":"740","severity":1,"message":"768","line":28,"column":3,"nodeType":"742","messageId":"743","endLine":28,"endColumn":17},{"ruleId":"740","severity":1,"message":"769","line":29,"column":3,"nodeType":"742","messageId":"743","endLine":29,"endColumn":15},{"ruleId":"740","severity":1,"message":"770","line":34,"column":10,"nodeType":"742","messageId":"743","endLine":34,"endColumn":14},{"ruleId":"740","severity":1,"message":"771","line":34,"column":16,"nodeType":"742","messageId":"743","endLine":34,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":39,"column":9,"nodeType":"742","messageId":"743","endLine":39,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":39,"column":26,"nodeType":"742","messageId":"743","endLine":39,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":39,"column":34,"nodeType":"742","messageId":"743","endLine":39,"endColumn":39},{"ruleId":"740","severity":1,"message":"775","line":40,"column":9,"nodeType":"742","messageId":"743","endLine":40,"endColumn":16},{"ruleId":"744","severity":1,"message":"748","line":102,"column":29,"nodeType":"746","messageId":"747","endLine":102,"endColumn":31},{"ruleId":"744","severity":1,"message":"745","line":129,"column":35,"nodeType":"746","messageId":"747","endLine":129,"endColumn":37},{"ruleId":"744","severity":1,"message":"748","line":146,"column":29,"nodeType":"746","messageId":"747","endLine":146,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":161,"column":44,"nodeType":"746","messageId":"747","endLine":161,"endColumn":46},{"ruleId":"744","severity":1,"message":"748","line":168,"column":42,"nodeType":"746","messageId":"747","endLine":168,"endColumn":44},{"ruleId":"744","severity":1,"message":"748","line":169,"column":42,"nodeType":"746","messageId":"747","endLine":169,"endColumn":44},{"ruleId":"740","severity":1,"message":"795","line":4,"column":34,"nodeType":"742","messageId":"743","endLine":4,"endColumn":38},{"ruleId":"740","severity":1,"message":"803","line":4,"column":66,"nodeType":"742","messageId":"743","endLine":4,"endColumn":71},{"ruleId":"744","severity":1,"message":"748","line":45,"column":42,"nodeType":"746","messageId":"747","endLine":45,"endColumn":44},{"ruleId":"804","severity":1,"message":"805","line":47,"column":21,"nodeType":"742","messageId":"806","endLine":47,"endColumn":35},{"ruleId":"744","severity":1,"message":"748","line":54,"column":47,"nodeType":"746","messageId":"747","endLine":54,"endColumn":49},{"ruleId":"744","severity":1,"message":"748","line":54,"column":92,"nodeType":"746","messageId":"747","endLine":54,"endColumn":94},{"ruleId":"744","severity":1,"message":"748","line":71,"column":37,"nodeType":"746","messageId":"747","endLine":71,"endColumn":39},{"ruleId":"751","severity":1,"message":"752","line":128,"column":45,"nodeType":"753","endLine":128,"endColumn":81},{"ruleId":"740","severity":1,"message":"795","line":4,"column":25,"nodeType":"742","messageId":"743","endLine":4,"endColumn":29},{"ruleId":"740","severity":1,"message":"763","line":4,"column":40,"nodeType":"742","messageId":"743","endLine":4,"endColumn":50},{"ruleId":"740","severity":1,"message":"761","line":4,"column":59,"nodeType":"742","messageId":"743","endLine":4,"endColumn":65},{"ruleId":"740","severity":1,"message":"750","line":39,"column":10,"nodeType":"742","messageId":"743","endLine":39,"endColumn":16},{"ruleId":"740","severity":1,"message":"792","line":111,"column":7,"nodeType":"742","messageId":"743","endLine":111,"endColumn":19},{"ruleId":"740","severity":1,"message":"799","line":120,"column":10,"nodeType":"742","messageId":"743","endLine":120,"endColumn":28},{"ruleId":"744","severity":1,"message":"748","line":140,"column":34,"nodeType":"746","messageId":"747","endLine":140,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":140,"column":63,"nodeType":"746","messageId":"747","endLine":140,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":209,"column":29,"nodeType":"746","messageId":"747","endLine":209,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":209,"column":53,"nodeType":"746","messageId":"747","endLine":209,"endColumn":55},{"ruleId":"744","severity":1,"message":"748","line":215,"column":40,"nodeType":"746","messageId":"747","endLine":215,"endColumn":42},{"ruleId":"744","severity":1,"message":"748","line":215,"column":69,"nodeType":"746","messageId":"747","endLine":215,"endColumn":71},{"ruleId":"744","severity":1,"message":"748","line":290,"column":25,"nodeType":"746","messageId":"747","endLine":290,"endColumn":27},{"ruleId":"740","severity":1,"message":"807","line":314,"column":13,"nodeType":"742","messageId":"743","endLine":314,"endColumn":20},{"ruleId":"808","severity":1,"message":"809","line":327,"column":58,"nodeType":"810","messageId":"811","endLine":327,"endColumn":59},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"771","line":9,"column":16,"nodeType":"742","messageId":"743","endLine":9,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"794","line":20,"column":9,"nodeType":"742","messageId":"743","endLine":20,"endColumn":20},{"ruleId":"740","severity":1,"message":"775","line":22,"column":9,"nodeType":"742","messageId":"743","endLine":22,"endColumn":16},{"ruleId":"740","severity":1,"message":"785","line":32,"column":7,"nodeType":"742","messageId":"743","endLine":32,"endColumn":16},{"ruleId":"740","severity":1,"message":"741","line":37,"column":7,"nodeType":"742","messageId":"743","endLine":37,"endColumn":15},{"ruleId":"740","severity":1,"message":"750","line":59,"column":10,"nodeType":"742","messageId":"743","endLine":59,"endColumn":16},{"ruleId":"740","severity":1,"message":"792","line":99,"column":7,"nodeType":"742","messageId":"743","endLine":99,"endColumn":19},{"ruleId":"744","severity":1,"message":"748","line":147,"column":34,"nodeType":"746","messageId":"747","endLine":147,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":147,"column":63,"nodeType":"746","messageId":"747","endLine":147,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":194,"column":29,"nodeType":"746","messageId":"747","endLine":194,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":194,"column":53,"nodeType":"746","messageId":"747","endLine":194,"endColumn":55},{"ruleId":"744","severity":1,"message":"748","line":237,"column":29,"nodeType":"746","messageId":"747","endLine":237,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":237,"column":53,"nodeType":"746","messageId":"747","endLine":237,"endColumn":55},{"ruleId":"744","severity":1,"message":"748","line":243,"column":40,"nodeType":"746","messageId":"747","endLine":243,"endColumn":42},{"ruleId":"744","severity":1,"message":"748","line":243,"column":69,"nodeType":"746","messageId":"747","endLine":243,"endColumn":71},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"790","line":4,"column":69,"nodeType":"742","messageId":"743","endLine":4,"endColumn":74},{"ruleId":"740","severity":1,"message":"760","line":4,"column":83,"nodeType":"742","messageId":"743","endLine":4,"endColumn":88},{"ruleId":"740","severity":1,"message":"771","line":8,"column":16,"nodeType":"742","messageId":"743","endLine":8,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":22,"column":9,"nodeType":"742","messageId":"743","endLine":22,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":22,"column":26,"nodeType":"742","messageId":"743","endLine":22,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":22,"column":34,"nodeType":"742","messageId":"743","endLine":22,"endColumn":39},{"ruleId":"740","severity":1,"message":"775","line":25,"column":9,"nodeType":"742","messageId":"743","endLine":25,"endColumn":16},{"ruleId":"740","severity":1,"message":"785","line":35,"column":7,"nodeType":"742","messageId":"743","endLine":35,"endColumn":16},{"ruleId":"740","severity":1,"message":"750","line":44,"column":10,"nodeType":"742","messageId":"743","endLine":44,"endColumn":16},{"ruleId":"740","severity":1,"message":"791","line":80,"column":7,"nodeType":"742","messageId":"743","endLine":80,"endColumn":11},{"ruleId":"744","severity":1,"message":"748","line":154,"column":34,"nodeType":"746","messageId":"747","endLine":154,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":154,"column":63,"nodeType":"746","messageId":"747","endLine":154,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":205,"column":29,"nodeType":"746","messageId":"747","endLine":205,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":205,"column":53,"nodeType":"746","messageId":"747","endLine":205,"endColumn":55},{"ruleId":"744","severity":1,"message":"748","line":264,"column":29,"nodeType":"746","messageId":"747","endLine":264,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":264,"column":53,"nodeType":"746","messageId":"747","endLine":264,"endColumn":55},{"ruleId":"744","severity":1,"message":"748","line":270,"column":40,"nodeType":"746","messageId":"747","endLine":270,"endColumn":42},{"ruleId":"744","severity":1,"message":"748","line":270,"column":69,"nodeType":"746","messageId":"747","endLine":270,"endColumn":71},{"ruleId":"744","severity":1,"message":"748","line":337,"column":25,"nodeType":"746","messageId":"747","endLine":337,"endColumn":27},{"ruleId":"740","severity":1,"message":"790","line":4,"column":41,"nodeType":"742","messageId":"743","endLine":4,"endColumn":46},{"ruleId":"740","severity":1,"message":"770","line":9,"column":10,"nodeType":"742","messageId":"743","endLine":9,"endColumn":14},{"ruleId":"740","severity":1,"message":"771","line":9,"column":16,"nodeType":"742","messageId":"743","endLine":9,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"812","line":25,"column":7,"nodeType":"742","messageId":"743","endLine":25,"endColumn":17},{"ruleId":"740","severity":1,"message":"750","line":38,"column":10,"nodeType":"742","messageId":"743","endLine":38,"endColumn":16},{"ruleId":"740","severity":1,"message":"791","line":61,"column":7,"nodeType":"742","messageId":"743","endLine":61,"endColumn":11},{"ruleId":"740","severity":1,"message":"792","line":72,"column":7,"nodeType":"742","messageId":"743","endLine":72,"endColumn":19},{"ruleId":"744","severity":1,"message":"748","line":113,"column":29,"nodeType":"746","messageId":"747","endLine":113,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":113,"column":53,"nodeType":"746","messageId":"747","endLine":113,"endColumn":55},{"ruleId":"744","severity":1,"message":"748","line":160,"column":29,"nodeType":"746","messageId":"747","endLine":160,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":160,"column":53,"nodeType":"746","messageId":"747","endLine":160,"endColumn":55},{"ruleId":"744","severity":1,"message":"748","line":181,"column":34,"nodeType":"746","messageId":"747","endLine":181,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":181,"column":63,"nodeType":"746","messageId":"747","endLine":181,"endColumn":65},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"771","line":9,"column":16,"nodeType":"742","messageId":"743","endLine":9,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"794","line":20,"column":9,"nodeType":"742","messageId":"743","endLine":20,"endColumn":20},{"ruleId":"740","severity":1,"message":"775","line":22,"column":9,"nodeType":"742","messageId":"743","endLine":22,"endColumn":16},{"ruleId":"740","severity":1,"message":"812","line":28,"column":7,"nodeType":"742","messageId":"743","endLine":28,"endColumn":17},{"ruleId":"740","severity":1,"message":"785","line":32,"column":7,"nodeType":"742","messageId":"743","endLine":32,"endColumn":16},{"ruleId":"740","severity":1,"message":"797","line":36,"column":9,"nodeType":"742","messageId":"743","endLine":36,"endColumn":15},{"ruleId":"740","severity":1,"message":"750","line":60,"column":10,"nodeType":"742","messageId":"743","endLine":60,"endColumn":16},{"ruleId":"740","severity":1,"message":"792","line":81,"column":7,"nodeType":"742","messageId":"743","endLine":81,"endColumn":19},{"ruleId":"740","severity":1,"message":"799","line":90,"column":10,"nodeType":"742","messageId":"743","endLine":90,"endColumn":28},{"ruleId":"744","severity":1,"message":"748","line":107,"column":34,"nodeType":"746","messageId":"747","endLine":107,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":107,"column":63,"nodeType":"746","messageId":"747","endLine":107,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":155,"column":43,"nodeType":"746","messageId":"747","endLine":155,"endColumn":45},{"ruleId":"744","severity":1,"message":"748","line":155,"column":78,"nodeType":"746","messageId":"747","endLine":155,"endColumn":80},{"ruleId":"744","severity":1,"message":"748","line":167,"column":29,"nodeType":"746","messageId":"747","endLine":167,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":167,"column":53,"nodeType":"746","messageId":"747","endLine":167,"endColumn":55},{"ruleId":"744","severity":1,"message":"748","line":173,"column":40,"nodeType":"746","messageId":"747","endLine":173,"endColumn":42},{"ruleId":"744","severity":1,"message":"748","line":173,"column":69,"nodeType":"746","messageId":"747","endLine":173,"endColumn":71},{"ruleId":"740","severity":1,"message":"813","line":14,"column":8,"nodeType":"742","messageId":"743","endLine":14,"endColumn":23},{"ruleId":"740","severity":1,"message":"788","line":16,"column":8,"nodeType":"742","messageId":"743","endLine":16,"endColumn":15},{"ruleId":"744","severity":1,"message":"748","line":52,"column":33,"nodeType":"746","messageId":"747","endLine":52,"endColumn":35},{"ruleId":"744","severity":1,"message":"748","line":52,"column":73,"nodeType":"746","messageId":"747","endLine":52,"endColumn":75},{"ruleId":"744","severity":1,"message":"748","line":66,"column":37,"nodeType":"746","messageId":"747","endLine":66,"endColumn":39},{"ruleId":"744","severity":1,"message":"748","line":104,"column":37,"nodeType":"746","messageId":"747","endLine":104,"endColumn":39},{"ruleId":"744","severity":1,"message":"748","line":165,"column":47,"nodeType":"746","messageId":"747","endLine":165,"endColumn":49},{"ruleId":"744","severity":1,"message":"748","line":178,"column":37,"nodeType":"746","messageId":"747","endLine":178,"endColumn":39},{"ruleId":"744","severity":1,"message":"748","line":216,"column":37,"nodeType":"746","messageId":"747","endLine":216,"endColumn":39},{"ruleId":"751","severity":1,"message":"752","line":279,"column":29,"nodeType":"753","endLine":279,"endColumn":47},{"ruleId":"740","severity":1,"message":"795","line":4,"column":40,"nodeType":"742","messageId":"743","endLine":4,"endColumn":44},{"ruleId":"740","severity":1,"message":"763","line":4,"column":55,"nodeType":"742","messageId":"743","endLine":4,"endColumn":65},{"ruleId":"740","severity":1,"message":"750","line":39,"column":10,"nodeType":"742","messageId":"743","endLine":39,"endColumn":16},{"ruleId":"744","severity":1,"message":"748","line":66,"column":29,"nodeType":"746","messageId":"747","endLine":66,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":92,"column":34,"nodeType":"746","messageId":"747","endLine":92,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":92,"column":63,"nodeType":"746","messageId":"747","endLine":92,"endColumn":65},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"790","line":4,"column":69,"nodeType":"742","messageId":"743","endLine":4,"endColumn":74},{"ruleId":"740","severity":1,"message":"760","line":4,"column":83,"nodeType":"742","messageId":"743","endLine":4,"endColumn":88},{"ruleId":"740","severity":1,"message":"770","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":14},{"ruleId":"740","severity":1,"message":"771","line":10,"column":16,"nodeType":"742","messageId":"743","endLine":10,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":21,"column":9,"nodeType":"742","messageId":"743","endLine":21,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":21,"column":26,"nodeType":"742","messageId":"743","endLine":21,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":21,"column":34,"nodeType":"742","messageId":"743","endLine":21,"endColumn":39},{"ruleId":"740","severity":1,"message":"794","line":22,"column":9,"nodeType":"742","messageId":"743","endLine":22,"endColumn":20},{"ruleId":"740","severity":1,"message":"775","line":24,"column":9,"nodeType":"742","messageId":"743","endLine":24,"endColumn":16},{"ruleId":"744","severity":1,"message":"748","line":121,"column":34,"nodeType":"746","messageId":"747","endLine":121,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":121,"column":63,"nodeType":"746","messageId":"747","endLine":121,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":129,"column":35,"nodeType":"746","messageId":"747","endLine":129,"endColumn":37},{"ruleId":"744","severity":1,"message":"748","line":129,"column":59,"nodeType":"746","messageId":"747","endLine":129,"endColumn":61},{"ruleId":"744","severity":1,"message":"748","line":222,"column":29,"nodeType":"746","messageId":"747","endLine":222,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":248,"column":34,"nodeType":"746","messageId":"747","endLine":248,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":248,"column":63,"nodeType":"746","messageId":"747","endLine":248,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":271,"column":34,"nodeType":"746","messageId":"747","endLine":271,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":271,"column":63,"nodeType":"746","messageId":"747","endLine":271,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":295,"column":34,"nodeType":"746","messageId":"747","endLine":295,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":295,"column":63,"nodeType":"746","messageId":"747","endLine":295,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":367,"column":29,"nodeType":"746","messageId":"747","endLine":367,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":367,"column":53,"nodeType":"746","messageId":"747","endLine":367,"endColumn":55},{"ruleId":"740","severity":1,"message":"814","line":402,"column":39,"nodeType":"742","messageId":"743","endLine":402,"endColumn":54},{"ruleId":"740","severity":1,"message":"815","line":402,"column":56,"nodeType":"742","messageId":"743","endLine":402,"endColumn":80},{"ruleId":"744","severity":1,"message":"748","line":59,"column":37,"nodeType":"746","messageId":"747","endLine":59,"endColumn":39},{"ruleId":"744","severity":1,"message":"748","line":67,"column":54,"nodeType":"746","messageId":"747","endLine":67,"endColumn":56},{"ruleId":"744","severity":1,"message":"748","line":67,"column":83,"nodeType":"746","messageId":"747","endLine":67,"endColumn":85},{"ruleId":"744","severity":1,"message":"748","line":107,"column":42,"nodeType":"746","messageId":"747","endLine":107,"endColumn":44},{"ruleId":"744","severity":1,"message":"748","line":107,"column":71,"nodeType":"746","messageId":"747","endLine":107,"endColumn":73},{"ruleId":"744","severity":1,"message":"748","line":125,"column":54,"nodeType":"746","messageId":"747","endLine":125,"endColumn":56},{"ruleId":"744","severity":1,"message":"748","line":127,"column":61,"nodeType":"746","messageId":"747","endLine":127,"endColumn":63},{"ruleId":"744","severity":1,"message":"748","line":150,"column":62,"nodeType":"746","messageId":"747","endLine":150,"endColumn":64},{"ruleId":"744","severity":1,"message":"748","line":150,"column":87,"nodeType":"746","messageId":"747","endLine":150,"endColumn":89},{"ruleId":"744","severity":1,"message":"748","line":156,"column":83,"nodeType":"746","messageId":"747","endLine":156,"endColumn":85},{"ruleId":"744","severity":1,"message":"748","line":188,"column":61,"nodeType":"746","messageId":"747","endLine":188,"endColumn":63},{"ruleId":"744","severity":1,"message":"748","line":188,"column":85,"nodeType":"746","messageId":"747","endLine":188,"endColumn":87},{"ruleId":"744","severity":1,"message":"748","line":193,"column":78,"nodeType":"746","messageId":"747","endLine":193,"endColumn":80},{"ruleId":"744","severity":1,"message":"748","line":232,"column":59,"nodeType":"746","messageId":"747","endLine":232,"endColumn":61},{"ruleId":"744","severity":1,"message":"748","line":232,"column":104,"nodeType":"746","messageId":"747","endLine":232,"endColumn":106},{"ruleId":"740","severity":1,"message":"807","line":258,"column":26,"nodeType":"742","messageId":"743","endLine":258,"endColumn":33},{"ruleId":"740","severity":1,"message":"816","line":262,"column":15,"nodeType":"742","messageId":"743","endLine":262,"endColumn":27},{"ruleId":"751","severity":1,"message":"752","line":296,"column":49,"nodeType":"753","endLine":296,"endColumn":72},{"ruleId":"817","severity":1,"message":"818","line":309,"column":82,"nodeType":"819","messageId":"820","endLine":309,"endColumn":84},{"ruleId":"751","severity":1,"message":"752","line":311,"column":61,"nodeType":"753","endLine":311,"endColumn":124},{"ruleId":"751","severity":1,"message":"752","line":315,"column":57,"nodeType":"753","endLine":315,"endColumn":103},{"ruleId":"751","severity":1,"message":"752","line":318,"column":57,"nodeType":"753","endLine":318,"endColumn":104},{"ruleId":"751","severity":1,"message":"752","line":419,"column":65,"nodeType":"753","endLine":419,"endColumn":111},{"ruleId":"751","severity":1,"message":"752","line":440,"column":65,"nodeType":"753","endLine":440,"endColumn":106},{"ruleId":"821","severity":1,"message":"822","line":453,"column":49,"nodeType":"753","endLine":453,"endColumn":457},{"ruleId":"744","severity":1,"message":"748","line":461,"column":104,"nodeType":"746","messageId":"747","endLine":461,"endColumn":106},{"ruleId":"740","severity":1,"message":"789","line":1,"column":28,"nodeType":"742","messageId":"743","endLine":1,"endColumn":36},{"ruleId":"740","severity":1,"message":"757","line":4,"column":32,"nodeType":"742","messageId":"743","endLine":4,"endColumn":40},{"ruleId":"740","severity":1,"message":"790","line":4,"column":69,"nodeType":"742","messageId":"743","endLine":4,"endColumn":74},{"ruleId":"740","severity":1,"message":"760","line":4,"column":83,"nodeType":"742","messageId":"743","endLine":4,"endColumn":88},{"ruleId":"740","severity":1,"message":"770","line":10,"column":10,"nodeType":"742","messageId":"743","endLine":10,"endColumn":14},{"ruleId":"740","severity":1,"message":"771","line":10,"column":16,"nodeType":"742","messageId":"743","endLine":10,"endColumn":26},{"ruleId":"740","severity":1,"message":"772","line":21,"column":9,"nodeType":"742","messageId":"743","endLine":21,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":21,"column":26,"nodeType":"742","messageId":"743","endLine":21,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":21,"column":34,"nodeType":"742","messageId":"743","endLine":21,"endColumn":39},{"ruleId":"740","severity":1,"message":"794","line":22,"column":9,"nodeType":"742","messageId":"743","endLine":22,"endColumn":20},{"ruleId":"740","severity":1,"message":"775","line":24,"column":9,"nodeType":"742","messageId":"743","endLine":24,"endColumn":16},{"ruleId":"744","severity":1,"message":"748","line":116,"column":34,"nodeType":"746","messageId":"747","endLine":116,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":116,"column":63,"nodeType":"746","messageId":"747","endLine":116,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":124,"column":35,"nodeType":"746","messageId":"747","endLine":124,"endColumn":37},{"ruleId":"744","severity":1,"message":"748","line":124,"column":59,"nodeType":"746","messageId":"747","endLine":124,"endColumn":61},{"ruleId":"744","severity":1,"message":"748","line":220,"column":29,"nodeType":"746","messageId":"747","endLine":220,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":246,"column":34,"nodeType":"746","messageId":"747","endLine":246,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":246,"column":63,"nodeType":"746","messageId":"747","endLine":246,"endColumn":65},{"ruleId":"744","severity":1,"message":"748","line":269,"column":34,"nodeType":"746","messageId":"747","endLine":269,"endColumn":36},{"ruleId":"744","severity":1,"message":"748","line":269,"column":63,"nodeType":"746","messageId":"747","endLine":269,"endColumn":65},{"ruleId":"740","severity":1,"message":"814","line":290,"column":39,"nodeType":"742","messageId":"743","endLine":290,"endColumn":54},{"ruleId":"740","severity":1,"message":"815","line":290,"column":56,"nodeType":"742","messageId":"743","endLine":290,"endColumn":80},{"ruleId":"740","severity":1,"message":"771","line":9,"column":16,"nodeType":"742","messageId":"743","endLine":9,"endColumn":26},{"ruleId":"740","severity":1,"message":"791","line":64,"column":7,"nodeType":"742","messageId":"743","endLine":64,"endColumn":11},{"ruleId":"744","severity":1,"message":"748","line":111,"column":15,"nodeType":"746","messageId":"747","endLine":111,"endColumn":17},{"ruleId":"744","severity":1,"message":"748","line":130,"column":29,"nodeType":"746","messageId":"747","endLine":130,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":186,"column":42,"nodeType":"746","messageId":"747","endLine":186,"endColumn":44},{"ruleId":"817","severity":1,"message":"823","line":192,"column":38,"nodeType":"824","messageId":"825","endLine":192,"endColumn":47},{"ruleId":"740","severity":1,"message":"826","line":54,"column":13,"nodeType":"742","messageId":"743","endLine":54,"endColumn":24},{"ruleId":"740","severity":1,"message":"827","line":55,"column":13,"nodeType":"742","messageId":"743","endLine":55,"endColumn":21},{"ruleId":"744","severity":1,"message":"748","line":58,"column":42,"nodeType":"746","messageId":"747","endLine":58,"endColumn":44},{"ruleId":"744","severity":1,"message":"748","line":63,"column":41,"nodeType":"746","messageId":"747","endLine":63,"endColumn":43},{"ruleId":"744","severity":1,"message":"748","line":63,"column":65,"nodeType":"746","messageId":"747","endLine":63,"endColumn":67},{"ruleId":"744","severity":1,"message":"748","line":81,"column":41,"nodeType":"746","messageId":"747","endLine":81,"endColumn":43},{"ruleId":"744","severity":1,"message":"748","line":81,"column":65,"nodeType":"746","messageId":"747","endLine":81,"endColumn":67},{"ruleId":"744","severity":1,"message":"748","line":98,"column":41,"nodeType":"746","messageId":"747","endLine":98,"endColumn":43},{"ruleId":"744","severity":1,"message":"748","line":98,"column":65,"nodeType":"746","messageId":"747","endLine":98,"endColumn":67},{"ruleId":"744","severity":1,"message":"748","line":116,"column":47,"nodeType":"746","messageId":"747","endLine":116,"endColumn":49},{"ruleId":"744","severity":1,"message":"748","line":116,"column":92,"nodeType":"746","messageId":"747","endLine":116,"endColumn":94},{"ruleId":"744","severity":1,"message":"748","line":168,"column":37,"nodeType":"746","messageId":"747","endLine":168,"endColumn":39},{"ruleId":"744","severity":1,"message":"748","line":178,"column":49,"nodeType":"746","messageId":"747","endLine":178,"endColumn":51},{"ruleId":"744","severity":1,"message":"748","line":178,"column":73,"nodeType":"746","messageId":"747","endLine":178,"endColumn":75},{"ruleId":"740","severity":1,"message":"807","line":206,"column":17,"nodeType":"742","messageId":"743","endLine":206,"endColumn":24},{"ruleId":"740","severity":1,"message":"741","line":208,"column":15,"nodeType":"742","messageId":"743","endLine":208,"endColumn":23},{"ruleId":"740","severity":1,"message":"828","line":212,"column":15,"nodeType":"742","messageId":"743","endLine":212,"endColumn":29},{"ruleId":"751","severity":1,"message":"752","line":238,"column":49,"nodeType":"753","endLine":238,"endColumn":72},{"ruleId":"829","severity":1,"message":"830","line":261,"column":69,"nodeType":"831","endLine":261,"endColumn":80},{"ruleId":"829","severity":1,"message":"830","line":388,"column":69,"nodeType":"831","endLine":388,"endColumn":80},{"ruleId":"740","severity":1,"message":"757","line":4,"column":34,"nodeType":"742","messageId":"743","endLine":4,"endColumn":42},{"ruleId":"740","severity":1,"message":"766","line":7,"column":10,"nodeType":"742","messageId":"743","endLine":7,"endColumn":24},{"ruleId":"740","severity":1,"message":"768","line":7,"column":42,"nodeType":"742","messageId":"743","endLine":7,"endColumn":56},{"ruleId":"740","severity":1,"message":"772","line":19,"column":9,"nodeType":"742","messageId":"743","endLine":19,"endColumn":15},{"ruleId":"740","severity":1,"message":"773","line":19,"column":26,"nodeType":"742","messageId":"743","endLine":19,"endColumn":32},{"ruleId":"740","severity":1,"message":"774","line":19,"column":34,"nodeType":"742","messageId":"743","endLine":19,"endColumn":39},{"ruleId":"740","severity":1,"message":"775","line":20,"column":9,"nodeType":"742","messageId":"743","endLine":20,"endColumn":16},{"ruleId":"740","severity":1,"message":"832","line":25,"column":7,"nodeType":"742","messageId":"743","endLine":25,"endColumn":17},{"ruleId":"740","severity":1,"message":"833","line":35,"column":10,"nodeType":"742","messageId":"743","endLine":35,"endColumn":31},{"ruleId":"740","severity":1,"message":"834","line":38,"column":10,"nodeType":"742","messageId":"743","endLine":38,"endColumn":31},{"ruleId":"740","severity":1,"message":"835","line":41,"column":10,"nodeType":"742","messageId":"743","endLine":41,"endColumn":31},{"ruleId":"744","severity":1,"message":"748","line":267,"column":42,"nodeType":"746","messageId":"747","endLine":267,"endColumn":44},{"ruleId":"744","severity":1,"message":"748","line":267,"column":87,"nodeType":"746","messageId":"747","endLine":267,"endColumn":89},{"ruleId":"740","severity":1,"message":"802","line":277,"column":9,"nodeType":"742","messageId":"743","endLine":277,"endColumn":25},{"ruleId":"744","severity":1,"message":"748","line":306,"column":42,"nodeType":"746","messageId":"747","endLine":306,"endColumn":44},{"ruleId":"804","severity":1,"message":"805","line":309,"column":21,"nodeType":"742","messageId":"806","endLine":309,"endColumn":35},{"ruleId":"744","severity":1,"message":"748","line":319,"column":47,"nodeType":"746","messageId":"747","endLine":319,"endColumn":49},{"ruleId":"744","severity":1,"message":"748","line":319,"column":92,"nodeType":"746","messageId":"747","endLine":319,"endColumn":94},{"ruleId":"744","severity":1,"message":"748","line":362,"column":37,"nodeType":"746","messageId":"747","endLine":362,"endColumn":39},{"ruleId":"744","severity":1,"message":"748","line":395,"column":42,"nodeType":"746","messageId":"747","endLine":395,"endColumn":44},{"ruleId":"744","severity":1,"message":"748","line":395,"column":71,"nodeType":"746","messageId":"747","endLine":395,"endColumn":73},{"ruleId":"744","severity":1,"message":"748","line":418,"column":42,"nodeType":"746","messageId":"747","endLine":418,"endColumn":44},{"ruleId":"744","severity":1,"message":"748","line":418,"column":71,"nodeType":"746","messageId":"747","endLine":418,"endColumn":73},{"ruleId":"740","severity":1,"message":"836","line":438,"column":17,"nodeType":"742","messageId":"743","endLine":438,"endColumn":21},{"ruleId":"740","severity":1,"message":"837","line":438,"column":33,"nodeType":"742","messageId":"743","endLine":438,"endColumn":36},{"ruleId":"740","severity":1,"message":"838","line":445,"column":17,"nodeType":"742","messageId":"743","endLine":445,"endColumn":29},{"ruleId":"740","severity":1,"message":"839","line":446,"column":17,"nodeType":"742","messageId":"743","endLine":446,"endColumn":27},{"ruleId":"751","severity":1,"message":"752","line":565,"column":99,"nodeType":"753","endLine":565,"endColumn":152},{"ruleId":"821","severity":1,"message":"822","line":577,"column":53,"nodeType":"753","endLine":577,"endColumn":368},{"ruleId":"751","severity":1,"message":"752","line":581,"column":102,"nodeType":"753","endLine":581,"endColumn":155},{"ruleId":"751","severity":1,"message":"752","line":633,"column":112,"nodeType":"753","endLine":633,"endColumn":165},{"ruleId":"751","severity":1,"message":"752","line":637,"column":53,"nodeType":"753","endLine":637,"endColumn":151},{"ruleId":"751","severity":1,"message":"752","line":655,"column":99,"nodeType":"753","endLine":655,"endColumn":152},{"ruleId":"751","severity":1,"message":"752","line":683,"column":102,"nodeType":"753","endLine":683,"endColumn":155},{"ruleId":"829","severity":1,"message":"830","line":789,"column":90,"nodeType":"831","endLine":789,"endColumn":109},{"ruleId":"751","severity":1,"message":"752","line":807,"column":105,"nodeType":"753","endLine":807,"endColumn":158},{"ruleId":"751","severity":1,"message":"752","line":821,"column":114,"nodeType":"753","endLine":821,"endColumn":167},{"ruleId":"751","severity":1,"message":"752","line":847,"column":102,"nodeType":"753","endLine":847,"endColumn":155},{"ruleId":"751","severity":1,"message":"752","line":861,"column":99,"nodeType":"753","endLine":861,"endColumn":152},{"ruleId":"751","severity":1,"message":"752","line":18,"column":25,"nodeType":"753","endLine":18,"endColumn":43},{"ruleId":"744","severity":1,"message":"748","line":26,"column":55,"nodeType":"746","messageId":"747","endLine":26,"endColumn":57},{"ruleId":"744","severity":1,"message":"748","line":33,"column":37,"nodeType":"746","messageId":"747","endLine":33,"endColumn":39},{"ruleId":"744","severity":1,"message":"748","line":33,"column":61,"nodeType":"746","messageId":"747","endLine":33,"endColumn":63},{"ruleId":"744","severity":1,"message":"748","line":66,"column":40,"nodeType":"746","messageId":"747","endLine":66,"endColumn":42},{"ruleId":"751","severity":1,"message":"752","line":79,"column":38,"nodeType":"753","endLine":79,"endColumn":62},{"ruleId":"751","severity":1,"message":"752","line":73,"column":15,"nodeType":"753","endLine":73,"endColumn":33},{"ruleId":"740","severity":1,"message":"787","line":12,"column":7,"nodeType":"742","messageId":"743","endLine":12,"endColumn":12},{"ruleId":"781","severity":1,"message":"782","line":18,"column":5,"nodeType":"783","messageId":"784","endLine":20,"endColumn":6},{"ruleId":"744","severity":1,"message":"748","line":70,"column":42,"nodeType":"746","messageId":"747","endLine":70,"endColumn":44},{"ruleId":"744","severity":1,"message":"748","line":77,"column":37,"nodeType":"746","messageId":"747","endLine":77,"endColumn":39},{"ruleId":"740","severity":1,"message":"840","line":88,"column":15,"nodeType":"742","messageId":"743","endLine":88,"endColumn":28},{"ruleId":"751","severity":1,"message":"752","line":100,"column":39,"nodeType":"753","endLine":100,"endColumn":57},{"ruleId":"751","severity":1,"message":"752","line":100,"column":60,"nodeType":"753","endLine":100,"endColumn":96},"no-native-reassign",["841"],"no-negated-in-lhs",["842"],"no-unused-vars","'onFinish' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Base' is defined but never used.","'GoBack' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'Modal' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","'Tag' is defined but never used.","'DatePicker' is defined but never used.","'Upload' is defined but never used.","'Card' is defined but never used.","'UploadOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'ReloadOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","'Step' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'regLayout' is assigned a value but never used.","'BaseUrl' is defined but never used.","'axios' is assigned a value but never used.","'Cookies' is defined but never used.","'useState' is defined but never used.","'Space' is defined but never used.","'data' is assigned a value but never used.","'rowSelection' is assigned a value but never used.","'Table' is defined but never used.","'RangePicker' is assigned a value but never used.","'Menu' is defined but never used.","'TextArea' is assigned a value but never used.","'Option' is assigned a value but never used.","'columns' is assigned a value but never used.","'handleSelectChange' is defined but never used.","'PicCenterOutlined' is defined but never used.","'finalCookieName' is assigned a value but never used.","'finalCookieValue' is assigned a value but never used.","'Steps' is defined but never used.","no-redeclare","'LoggedInUserId' is already defined.","redeclared","'loading' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'compLayout' is assigned a value but never used.","'LoginFormFooter' is defined but never used.","'selectedOptions' is assigned a value but never used.","'selected_maintenance_fee' is assigned a value but never used.","'contentStyle' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","Array.prototype.filter() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'apiEndpoint' is assigned a value but never used.","'formData' is assigned a value but never used.","'onFinishFailed' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'optionData' is assigned a value but never used.","'handleStructureChange' is defined but never used.","'handleDirectionChange' is defined but never used.","'onChangeAvailableDate' is defined but never used.","'type' is assigned a value but never used.","'pet' is assigned a value but never used.","'selectedTags' is assigned a value but never used.","'optionTags' is assigned a value but never used.","'homepageStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]